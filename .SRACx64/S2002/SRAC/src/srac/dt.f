C             DT                  LEVEL=1        DATE=80.09.29
      SUBROUTINE DT(PA,SR,AA,ST,CT,CS,SAT,CH,XNE,XND,ART,ALFT,XNA,XNR,M1
     &,IM1,I1,XNN,WD,SA)
C   ***  DT  IS USED WEHN NO FLUX GUESS IS ENTERED OR WHEN SPECIFIED
C       BY IDAT2 AND 24&
      DIMENSION PA(M1,IM1,1),SR(1),AA(1),ST(1),CT(1),CS(1),SAT(1),CH(1),
     &XNE(1),XND(I1,1),ART(1),ALFT(1),XNA(1),XNR(1),XNN(1),WD(1),SA(1)
      COMMON /MAINC/ III(1000)
      COMMON /SN1C/
     &              D(1),LIM1,LR,LW,LDSN,LMA,LMZ,LMB,LMC,LXMD,LFIX,LFLT,
     &       LJ5,LRM,LDF,LJ3,LJ4,LIGT,LART,LALFT,
     &LFGP,LFGG,LEND,LV,LAA,LWD,LMR,LPNC,
     &ID,ITH,ISCT,ISN,IGE,IBL,IBR,IZM,IM,IEVT,IGM,IHT,IHS,IHM,MS,MCR,MTP
     &,MT,IDFM,IPVT,IQM,IPM,IPP,IIM,ID1,ID2,ID3,ID4,ICM,IDAT1,IDAT2,IFG,
     &IFLU,IFN,IPRT,IXTR,
     &EV,EVM,EPS,BF,DY,DZ,DFM1,XNF,PV,RYF,XLAL,XLAH,EQL,XNPM,
     &T(12),NIN,NOU,NT1,NT2,NT3,NT4,NT5,NT6,NT7
      COMMON /WORK/ Z(1),LIM2,LXKI,LFD,LXN,LVE,LMTT,LCRX,LQ,LPA,
     &       LXJ,LCH,LCA,LCF,LCT,LCS,LTAB,
     &LXND,LSA,LSAT,LRAV,LRA,LXNN,LXNE,LXNR,LXNA,LSR,LST,LQG,LFG,LSG,
     &LXKE,LXNI,LXNO,LT3,LT5,LDA,LDB,LDC,LDS,LB,IGMP,IGMM,IIGG,NERR,IMJT
     &,IHG,IMP,MP,NDS,NUS,SDG,SCG,AG,XNLGG,XNLG,SNG,ALA,ASR,EAM,EPG,EQ,
     &E1,E2,E3,E4,E5,E6,E7,E8,E9,E10,E11,E12,E13,E14,E15,E16,E17,E18,E19
     &,E20,ESC,ESM,EVP,EVPP,FTP,IC,ICVT,IGP,IG,IHP,IIC,IIG,IP,IZP,I01,
     &I02,I03,I04,I05,I06,I07,I08,I09,I00,JT,LC,MG,MI,ML,MM,NFN,XITR,
     &XLAP,XLAPP,XLAR,XLA,XNIO,XNII,ZZ1,ZZ2,ZZ3,XNB,XKEP,XKIP,IH,I,K,L,
     &M,J,N,NN,ISV
      EQUIVALENCE (III(65),NOUT2)
      IF(IPM.LT.1)GO TO 1
C   *** COMPUTE SOURCE DUE TO SHELL SOURCE
      DO 2 I=1,IM
      E1=0.0
      DO 3 M=1,MM
    3 E1=E1 + PA(M,I,IIGG)*ABS(WD(M))
      IF(IPM.EQ.1)GO TO 4
    2 SR(I)=SR(I) + E1*AA(I+1)
      GO TO 1
    4 SR(IPP  )=SR(IPP  ) + E1*AA(IPP+1)
    1 E1=0.0
      DO 5 I=1,IM
C   *** ST=SIGMA0   SAT=SIGMA1   XNE=A
      ST(I)=0.5*(CT(I)-CS(I))
      IF(ISCT.GT.0)E1=CH(I)
      SAT(I)=1.5*CT(I)-0.5*E1
    5 XNE(I)=0.5*(AA(I+1)+AA(I))
C   *** XND(I,1)=P(I)   XND(I,2)=Q(I)   XND(I,3)=N(I)
      DO 6 I=1,MI
    6 XND(I,1)=0.0
C   *** RIGHT BOUNDARY CONDITION FOR P AND Q
      XND(IP,2)=0.0
      IF(IBR.EQ.1.OR.IBR.EQ.2)XND(IP,1)=0.0
      IF(IBR.EQ.0)XND(IP,1)=0.57735033
      IF(IBR.EQ.3)XND(IP,1)=(.57735033*(1.0-ART(IIG)))/(1.0+ART(IIG))
C   *** COMPUTE P(I) AND Q(I)
      I=IM
      DO 7 J=1,IM
C     WRITE(NOUT2,6000) I,XNE(I),AA(I),SAT(I),XND(I+1,1),ST(I)
 6000 FORMAT(10X,I3,' XNE=',E12.5,' AA=',E12.5,' SAT=',E12.5,' XND=',
     &        E12.5,' ST=',E12.5)
      E8=XNE(I)*(AA(I) + 2.0*SAT(I)*XND(I+1,1)) + ST(I)*SAT(I)
      XND(I,1)=(2.0*XNE(I)*ST(I) + XND(I+1,1)*(XNE(I)*AA(I+1) +
     & ST(I)*SAT(I))) / E8
      XND(I,2)=(SR(I)*(XNE(I) + SAT(I)*XND(I+1,1)) -
     &         SA(I)*(ST(I) + AA(I+1)*XND(I+1,1)) +
     &         XND(I+1,2)*(XNE(I)*AA(I+1) - ST(I)*SAT(I))) / E8
      IF(XND(I,2).LT.0.)XND(I,2)=0.5*(XND(I,2) + XND(I+1,2))
    7 I=I-1
C     WRITE(6,6010) XND(1,1),ALFT(IIG),WD(2),WD(3)
 6010 FORMAT(10X,'XND(1,1)=',E12.5,' ALFT=',E12.5,' WD=',E12.5,
     &     ' WD3=',E12.5)
C   ***  LEFT B.C. FOR N
      IF(IBL.EQ.1.OR.IBL.EQ.2)XND(1,3)=XND(1,2)/XND(1,1)
      IF(IBL.EQ.0)XND(1,3)=XND(1,2)/(XND(1,1)+0.57735033)
      IF(IBL.EQ.3)XND(1,3)=(XND(1,2)*(1.0+ALFT(IIG)))/(ALFT(IIG)*
     & (XND(1,1)-0.57735033) + 0.57735033 + XND(1,1))
C   *** COMPUTE N(I)
      DO 8 I=1,IM
      XND(I+1,3)=(XND(I,3)*(AA(I)*XND(I,1) - ST(I)) + AA(I+1)*XND(I+1,2)
     &  - AA(I)*XND(I,2) + SR(I)) / (AA(I+1)*XND(I+1,1) + ST(I))
      IF(XND(I+1,3).LT.0.)XND(I+1,3)=0.5*(XND(I+1,3)+XND(I,3))
    8 CONTINUE
      IF(IBR.NE.2.AND.IBL.NE.2)GO TO 10
C   *** EXTRA ADDED ATTRACTION FOR PERIODIC B.C. KNOWN AS TWO COMPONENT
C       METHOD TO ASSURE N(1)=N(IM)
      XNA(IP)=1.0
      I=IM
      DO 9 J=1,IM
C    *** XNA(I)=P-PRIME(I)
      XNA(I)=(XNA(I+1)*(XNE(I)*AA(I+1) - ST(I)*SAT(I)))/(ST(I)*SAT(I) +
     &  XNE(I)*AA(I) + 2.0*SAT(I)*XNE(I)*XND(I+1,1))
      IF(XNA(I).LT.0.)XNA(I)=0.5*(XNA(I+1)+XNA(I))
    9 I=I-1
      XNR(1)=(XNA(1)+1.0)/XND(1,1)
      DO 11 I=1,IM
C    *** XNR(I)=N-PRIME(I)
      XNR(I+1)=(XNR(I)*(AA(I)*XND(I,1) + ST(I)) + AA(I+1)*XNA(I+1) -
     &  AA(I)*XNA(I))/(AA(I+1)*XND(I+1,1) + ST(I))
      IF(XNR(I).LT.0.)XNR(I)=0.5*(XNR(I+1)+XNR(I))
   11 CONTINUE
      E1=(XND(1,3)-XND(IP,3))/(XNR(IP)-XNR(1))
C    *** COMBINE COMPONENTS
      DO 12 I=1,IM
      XND(I,2)=XND(I,2) + E1*XNA(I)
   12 XND(I,3)=XND(I,3) + E1*XNR(I)
C   *** COMPUTE CENTERED FLUX (XNN)
   10 DO 13 I=1,IM
   13 XNN(I)=0.5*(XND(I,3)+XND(I+1,3))
C   *** COMPUTE CURRENT (XND(I,1))  I=PN-Q
      DO 14 I=1,IP
   14 XND(I,1)=XND(I,1)*XND(I,3) - XND(I,2)
C   *** COMPUTE NET LEAKAGE(XNLGG)
      XNLGG=XND(IP,1)*AA(IP) - XND(1,1)*AA(1)
      IF(ISCT.EQ.0)GO TO 15
C   *** COMPUTE CENTERED CURRENTS (XNA)
      DO 16 I=1,IM
   16 XNA(I)= 0.5*(XND(I,1)+XND(I+1,1))
C    *** COMPUTE S2 ANGULAR FLUX   N(MU)=N + 3*MU*I
C        N(MU) NORMALIZED TO GIVE CORRECT LEAKAGE IN SUMMARY TABLES
   15 E2=-0.28867517/(WD(2))
      E3=+0.28867517/(WD(3))
      DO 17 I=1,IP
      E1=1.732051*XND(I,1)
      XND(I,1)=XND(I,3) - 3.0*XND(I,1)
      XND(I,2)=(XND(I,3) - E1)*E2
      XND(I,3)=(XND(I,3) + E1)*E3
      IF(MM.LT.4)GO TO 17
      DO 18 M=4,MM
   18 XND(I,M)=0.0
   17 CONTINUE
      RETURN
      END

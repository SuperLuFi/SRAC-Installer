CGINS --081 ***CITATION*** CALCULATION OF DRIVE FACTOR FOR SEARCH
C
      SUBROUTINE GINS(B1,B3,B4,B5,KVX,LVX,XLAMDA,MVX)
C
CDEL  INTEGER RGX , MSX , ZNEX , ZDX , WZX
CDEL  PARAMETER ( RGX=100, MSX=211, ZDX=200, ZNEX=1000, WZX=100 )
      INCLUDE  'CITPMINC'
C
      REAL*8 B1
      REAL*8 XLAMDA
      REAL*8 XAAMDA
      REAL*8 TXX1,TXX2,TXX3
      REAL*8 SUMXI,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,XLL1,
     & D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,B5LK,
     & D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,YRDB,
     & SPR50,XLAST
C
      COMMON/ADUBP/SUMXI(ZNEX)
     &                  ,TPTSA,XADB,XPDB,XS1DB,XS2DB, TL,XRDB,CS1S,CS2S,
     &  XLL1,D8,XADX,YADX, XLL2,XLL3,XLL4,XLL5,XLL6,XLEK,B2LK,B3LK,B4LK,
     &  B5LK,D1,D2,D3,D4,D5, D6,D7,YADB,YPDB,YLEK,YS1S,YS2S,YS1DB,YS2DB,
     &  YRDB,SPR50,XLAST
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     & LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     & IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     &  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     & IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     & XSRH1(6), XTR1(WZX),XTR2(WZX),NXTR1(WZX),NXTR2(WZX),SPARE(200),
     & IXPUT(200),XPUT(200)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     & ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     & XELK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     & IRECV,VRGABS,LO3,LO4,XLAMDB,EPI1,EPI2, BETTA,SAMXI,IX25,IX28,I,J,
     &  KB,K,ITMAX,ITIME, BET(MSX),DEL(MSX)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,ZDX),
     &  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     &  NZON(ZDX),NXSET(ZDX),NXODR(ZDX),IDXSET(ZDX),NCLASS(ZDX),NDP(ZDX)
     & , XNAME(3,ZDX)
C
      DIMENSION B1(MVX,KVX),B3(MVX,KVX),B4(MVX,KVX),B5(MVX,KVX)
C
      IF (IX(5).EQ.(-5)) GO TO 130
      CS1S=1.0
      CS2S=1.0
      IF (NSRH(20)) 108,108,100
  100 IF (XS1DB) 108,108,101
  101 D1=0
      D2=0
      D3=0
      DO 103K=1,KMAX
      DO 102 M=1,MMAX
      D1 = D1 + B4(M,K)*B1(M,1)
      D2 = D2 + B5(M,K)*B1(M,1)
      D3 = D3 + B3(M,K)*B1(M,1)
  102 CONTINUE
  103 CONTINUE
      IF (XS2DB) 105,104,105
  104 CS1S=1.0
      GO TO 106
  105 CS1S=XPDB*D2/D3/XS2DB
  106 CS2S=XPDB*D1/D3/XS1DB/CS1S
      IF (NSRH(20)-1) 108,108,107
  107 WRITE(IOUT,1000)CS1S,CS2S
  108 CONTINUE
  109 IF (NIT.GT.0) GO TO 110
      XKEF1 = XPDB/(XADX+XLEK+XLAMDA*XS1DB)
      VRGK1 = ABS(XKEF2/XKEF1-1.0)
      HOEY = 1.0-SPARE(51)/SPARE(57)*0.8
      HOEX = HOEY
      IF(HOEY.GE.1.0) HOEY = 0.9
      GO TO 129
  110 CONTINUE
      IF(XLAMDA.NE.0.0) GO TO 900
      HOEX = 1.0-SPARE(51)/SPARE(57)*0.8
      IF(HOEX.GE.1.0) HOEX = 0.9
  900 CONTINUE
      TL = XADX+XLEK+XLAMDA*XS1DB
      XKEF1 = (XPDB+XLAMDA*XS2DB)/TL
      XAAMDA=(SPR50*XPDB-XADX-XLEK)/(CS1S*(XS1DB*CS2S-SPR50*XS2DB))
      HOEZ = (1.0-HOEX)*SPARE(57)
      TXX1 = SPARE(51)
      TXX2 = HOEZ
      IF (SPARE(51).GT.0.0) GO TO 111
      XLAMDA = DMAX1(XAAMDA,TXX1,TXX2)
      GO TO 112
  111 XLAMDA = DMIN1(XAAMDA,TXX1,TXX2)
  112 CONTINUE
      IF (DABS(XAAMDA).GT.DABS(TXX2)) GO TO 113
      IF (DABS(XAAMDA).LE.DABS(TXX1)) GO TO 115
  113 IF (NIT.LT.12) GO TO 115
      SPARE(51)=1.05*SPARE(51)
      TXX1 = SPARE(51)
      IF (DABS(TXX1).LE.DABS(TXX2)) GO TO 115
      IF (HOEX.GT.0.9) GO TO 114
      HOEX = 0.9*HOEX
      GO TO 115
  114 HOEX = HOEX*HOEX
  115 VRGK1 = ABS(XKEF1/SPARE(50)-1.0)
      SPARE(44) = SPARE(45)
      SPARE(45) = XKEF1-SPARE(50)
      IF (SPARE(46)-1.0) 116,120,119
  116 XLAMDA = SPARE(46)*XLAMDA+(1.0-SPARE(46))*SPARE(43)
      IF (NIT.GT.05) GO TO 117
      SPR5X = SPR50
      IF (ABS(XKEF1*SPR5X-1.0)-0.05) 117,117,118
  117 SPARE(46) = 2.0*SPARE(46)
  118 IF (SPARE(46)-1.0) 129,129,119
  119 SPARE(46) = 1.0
      GO TO 129
  120 IF (VRGK1-EPI2) 129,129,121
  121 IF (SPARE(44)) 122,129,122
  122 IF (ABS(SPARE(45)/SPARE(44))-1.0) 125,123,123
  123 IF (VRGK1-0.0010) 125,125,124
  124 TXX3 = SPARE(43)
      IF (DABS(XLAMDA).GT.DABS(TXX3)) XLAMDA = 0.5*(XLAMDA+TXX3)
  125 IF (XKEF1/SPARE(50)-0.5) 126,127,127
  126 SPARE(46) = SPARE(46)*0.5
  127 IF (DABS(XLAMDA)-1.0E+38) 129,129,128
  128 IX(6) = 1
  129 CONTINUE
      GO TO 134
  130 CONTINUE
      IF (NIT.LE.0) IX(133) = 0
      SP46 = SPARE(46)
      HS = (XLEK + XADX - XPDB)/SPARE(88)
      IF (NIT.LE.0) GO TO 132
      IF (HS.GE.0.0) GO TO 131
      IF (IX(133).GT.0) GO TO 131
      SP46 = 0.1
      IX(133) = 1
  131 CONTINUE
      IF (SP46.EQ.1.0) GO TO 132
      XLAMDA = SP46*HS + (1.0 - SP46)*SPARE(43)
      SP46 = 2.0*SP46
      IF (SP46.GT.1.0) SP46 = 1.0
      GO TO 133
  132 CONTINUE
      XLAMDA = HS
  133 CONTINUE
      SPARE(89) = SPARE(43)/XLAMDA
      VRGK1 = ABS(SPARE(89) - 1.0)
      SPARE(46) = SP46
  134 CONTINUE
      RETURN
 1000 FORMAT(1H ,'      SEARCH WEIGHTING FACTORS',2F12.5)
      END

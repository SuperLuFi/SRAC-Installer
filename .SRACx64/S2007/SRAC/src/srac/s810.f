C **********************************************************************
      SUBROUTINE S810(R,RA,MA,RM,AA, RAV,DA,DB,DC,DS,DSN,W,WD,I1,V)
C *********************1987/5/11****************************************
C   ** S810 COMPUTES GEOMETRY DEPENDENT ARRAYS
      DIMENSION DA(I1,2),DB(I1,2),DC(I1,2),DS(I1,2),R(1),RA(1),MA(1),
     1          RM(1),AA(1),AF(3),VF(3),RAV(1),DSN(1),W(1),WD(1),V(1)
      COMMON /SN1C/
     &              D(1),LIM1,LR,LW,LDSN,LMA,LMZ,LMB,LMC,LXMD,LFIX,LFLT,
     1       LJ5,LRM,LDF,LJ3,LJ4,LIGT,LART,LALFT,
     2LFGP,LFGG,LEND,LV,LAA,LWD,LMR,LPNC,
     BID,ITH,ISCT,ISN,IGE,IBL,IBR,IZM,IM,IEVT,IGM,IHT,IHS,IHM,MS,MCR,MTP
     C,MT,IDFM,IPVT,IQM,IPM,IPP,IIM,ID1,ID2,ID3,ID4,ICM,IDAT1,IDAT2,IFG,
     DIFLU,IFN,IPRT,IXTR,
     EEV,EVM,EPS,BF,DY,DZ,DFM1,XNF,PV,RYF,XLAL,XLAH,EQL,XNPM,
     FT(12),NIN,NOU,NT1,NT2,NT3,NT4,NT5,NT6,NT7
      COMMON /WORK/ Z(1),LIM2,LXKI,LFD,LXN,LVE,LMTT,LCRX,LQ,LPA,
     2       LXJ,LCH,LCA,LCF,LCT,LCS,LTAB,
     3LXND,LSA,LSAT,LRAV,LRA,LXNN,LXNE,LXNR,LXNA,LSR,LST,LQG,LFG,LSG,
     4LXKE,LXNI,LXNO,LT3,LT5,LDA,LDB,LDC,LDS,LB,IGMP,IGMM,IIGG,NERR,IMJT
     5,IHG,IMP,MP,NDS,NUS,SDG,SCG,AG,XNLGG,XNLG,SNG,ALA,ASR,EAM,EPG,EQ,
     6E1,E2,E3,E4,E5,E6,E7,E8,E9,E10,E11,E12,E13,E14,E15,E16,E17,E18,E19
     7,E20,ESC,ESM,EVP,EVPP,FTP,IC,ICVT,IGP,IG,IHP,IIC,IIG,IP,IZP,I01,
     8I02,I03,I04,I05,I06,I07,I08,I09,I00,JT,LC,MG,MI,ML,MM,NFN,XITR,
     9XLAP,XLAPP,XLAR,XLA,XNIO,XNII,ZZ1,ZZ2,ZZ3,XNB,XKEP,XKIP,IH,I,K,L,
     AM,J,N,NN,ISV
      AF(1)=1.0
      AF(2)=6.2831854
      AF(3)=12.566371
      VF(1)=1.0
      VF(2)=0.5
      VF(3)=0.3333333
      IF(IC.NE.0)GO TO 2
C   *** ZZ3 USED IN WHITE B.C.
      ZZ3=0.0
      DO 14 M=1,MM
      IF(DSN(M).GT.0.0)ZZ3=ZZ3+WD(M)
   14 CONTINUE
      RA(1)=R(1)
C   *** R IS INITIAL RADIUS, RA IS CURRENT RADIUS
      DO 1 I=2,IP
      RA(I)=R(I)
C     IF(RA(I).LE.0.0)CALL ERRO( '8101',I)
      IF(RA(I).LE.0.0) THEN
               WRITE(NOU,3000) I
               STOP 7
               ENDIF
 3000 FORMAT('0***ERROR*** RADIUS (',I4,' ) LESS EQUAL TO 0.0')
C     IF(R(I-1).GE.R(I))CALL ERRO( '8102',I)
      IF(R(I-1).GE.R(I)) THEN
               WRITE(NOU,3010) I,I-1
               STOP 7
               ENDIF
 3010 FORMAT('0***ERROR*** RADIUS (',I4,' ) IS LESS EQUAL TO RADUS (',
     *       I4,' )'   )
    1 CONTINUE
      E19=DY
      E20=DZ
    2 IF(IEVT-4)8,3,5
    3 DO 4 I=1,IM
      K=MA(I)
      E1=1.0+EV*RM(K)
      RA(I+1)=RA(I) + (R(I+1)-R(I))*E1
C     IF(E1.LE.0.0)CALL ERRO( '8103',K)
      IF(E1.LE.0.0) THEN
               WRITE(NOU,3020) K
               STOP 7
               ENDIF
 3020 FORMAT('0***ERROR*** ZONE',I4,' DIMENSIONS HAVE BECOME NEGATIVE',
     *       ' IN ZONE WIDTH SEARCH' )
    4 CONTINUE
      GO TO 8
    5 IF(IEVT.GT.5)GO TO 7
      DO 6 I=2,IP
    6 RA(I)=EV*R(I)/R(IP)
      GO TO 8
    7 DY=EV*E19
      DZ=EV*E20
    8 IF(IC.NE.0 .AND. IEVT.LT.4)GO TO 999
      M=IGE-1
      N=(IGE+1)/IGE
C     N PREVENTS ERROR TRACE FOR 0**0 WHEN IGE=1 AND R(1)=0
C   *** AA IS TRANSVERSE AREA
      DO 9 I=N,IP
    9 AA(I)=AF(IGE)*RA(I)**M
      IF(IGE.EQ.1)AA(1)=AF(1)
C   *** RAV IS INTERVAL MIDPOINT, V IS INTERVAL VOLUME
      DO 10 I=1,IM
      RAV(I)=VF(2)*(RA(I+1)+RA(I))
   10 V(I)=VF(IGE)*(AA(I+1)*RA(I+1)-AA(I)*RA(I))
C
C   *** DA,DB,DC, AND DS ARE COMBINATIONS OF SN CONSTANTS AND AREAS
C       WHICH ARE CONVENIENT IN FLUX CALCULATION
CM 11 DO 13 M=1,MM
CM    I=IM
CM 12 DA(I,M)=ABS(DSN(M))*(AA(I+1)+AA(I))
CM    DS(I+1,M)=ABS(DSN(M))*AA(I+1)
CM    DC(I,M)=0.0
CM    IF(W(M).GT.0.0)DC(I,M)=((AA(I)-AA(I+1))*(WD(M)+WD(M-1))+DC(I,M-1)
CM   1*W(M-1))/W(M)
CM    DB(I,M)=DA(I,M)+DC(I,M)
CM    I=I-1
CM    IF(I.GT.0)GO TO 12
CM    DS(I+1,M)=ABS(DSN(M))*AA(I+1)
CM 13 CONTINUE
C
      DO 1012 I=IM,1,-1
      DA(I,1)=ABS(DSN(1))*(AA(I+1)+AA(I))
      DS(I+1,1)=ABS(DSN(1))*AA(I+1)
      DC(I,1)=0.0
      DB(I,1)=DA(I,1)+DC(I,1)
 1012 CONTINUE
      DS(1,1)=ABS(DSN(1))*AA(1)
C
      IF(MM.LT.2) GO TO 999
C
      DO 13 M=2,MM
      RSAVE  = 0.0000
      IF(W(M).GT.0.0)  RSAVE = 1.00000 / W(M)
      DO 12 I=IM,1,-1
      DA(I,M)=ABS(DSN(M))*(AA(I+1)+AA(I))
      DS(I+1,M)=ABS(DSN(M))*AA(I+1)
      DC(I,M)=((AA(I)-AA(I+1))*(WD(M)+WD(M-1))+DC(I,M-1)*W(M-1))*RSAVE
      DB(I,M)=DA(I,M)+DC(I,M)
   12 CONTINUE
      DS(1,M)=ABS(DSN(M))*AA(1)
   13 CONTINUE
C
C
C
  999 RETURN
      END

      SUBROUTINE TUD1
C
      COMMON /TUD1C/ NRMAX,NMP,NGMAX,NGUP,NGKMAX,NNMAX,
     &               IG,IBOUND,
     &               IGUESS,ID,ITMAX,ITMOUT,ITBG,LCMX,ITDM,IPT,
     &               EPSI,EPSO,EPSG,RELCA,OVERX,FACTOR,XLAMD,BSQ1,
     &               IPTXEC,ITFLUX,IPTS,IDOPT,NXR,LCIK,LCNK,LCXR,
     &               LCRK,LCNN1,LCVOLR,LCMTM,LCMTR,LCVLMT,
     &               DUMT(12),II(1000)
C
      COMMON /MAINC/ IOPT(20),JNFSTL(2),FNFSTL(2),JNTHEL(2),FNTHEL(2)
     &    ,JNEFST(2),FNEFST(2),JNETHE(2),FNETHE(2),JNMACR(2),FNMACR(2)
     &    ,JNMCRS(2),FNMCRS(2),JNEMIC(2),FNEMIC(2),JNFLUX(2),FNFLUX(2)
     &   ,NEFL     ,NETL     ,NEF      ,NET      ,NERF     ,NERT
     &   ,NMAT     ,NETL1    ,BSQ      ,NIN1     ,NIN2     ,NOUT1
     &   ,NOUT2,IT0,NEFL1    ,NEFL2    ,NEFL3    ,NEF1     ,NEF2
     &   ,NEF3     ,ISTEP    ,DUMMY1(3),IFIX,DUMM12(3)
     &   ,LCNEGF   ,LCNEGT   ,LCNECF   ,LCNECT   ,LCMTNM   ,LCNISO
     &   ,LCTEMP   ,LCXL     ,LCXCDC   ,LCLISO   ,LCIDNT   ,LCDN
     &   ,LCIRES   ,LCIXMC   ,DUMMY2(3),IRANG,ICF,DUM100
     &   ,CASEID(2),TITLE(18)
     &   ,III(380)
      DIMENSION       IDUMY(15),AA(1000)
C
      EQUIVALENCE    (II(1),AA(1))
C
C  ** START OF PROCESS
C
      MXDIM = 1000
      CALL  CLEA( AA , MXDIM , 0.0 )
C
C * * * READ SIZE PARAMETER * * *
C
      WRITE(NOUT1,6050)
      CALL REAI(IDUMY,9,'BLOC','K1  ')
      NRMAX = IDUMY( 1)
      IG    = IDUMY( 2)
      IBOUND= IDUMY(3)
      IGUESS= IDUMY(4)
      IPTXEC= IDUMY(5)
      ITFLUX= IDUMY(6)
      IPTS  = IDUMY(7)
      IDOPT = IDUMY(8)
      NXR   = IDUMY(9)
      CALL REAI(ITMAX,6,'BLOC','K2  ')
      CALL REAG(EPSI ,6,'BLOC','K3  ')
      NRMAX1= NRMAX + 1
      LCIK  = 1
      LCNK  = LCIK  + NRMAX
      LCXR  = LCNK  + NRMAX
      LCRK  = LCXR  + NRMAX
C
      CALL REAI(II(LCNK),NRMAX,'MESH',' /R ')
      CALL REAI(II(LCIK),NRMAX,'M-NO','./R ')
      CALL REAI(II(LCXR),NRMAX,'X RE','GION')
      CALL REAG(AA(LCRK),NRMAX,'RADI','I   ')
      CALL REAG(BSQ1    ,1    ,'BUCK','LING')
C     WRITE(NOUT2,6030) BSQ1
      IF(IBOUND.EQ.2) CALL REAG(XLAMD,1,'XLAM','BDA ')
C     IF(IBOUND.EQ.2) WRITE(NOUT2,6040) XLAMD
C
      NNMAX   = 0
      LCNK1   = LCNK  - 1
      DO 40 I = 1,NRMAX
      LCNK1   = LCNK1 + 1
      NNMAX   = NNMAX + II(LCNK1)
   40 CONTINUE
      NNMAX1  = NNMAX + NRMAX
      LCVOLR  = LCRK  + NRMAX
      LCMTR   = LCVOLR+ NRMAX
      LCMTM   = LCMTR + NRMAX
      NMM     = 0
      NMP     = 0
      LCIKL   = LCIK  + NRMAX - 1
      LCMTR1  = LCMTR - 1
      DO 58 I = LCIK,LCIKL
      LCMTR1  = LCMTR1+1
      IM      = II(I)
      IF(I.EQ.LCIK) GO TO 56
      IF(NMM.EQ.IM) GO TO 57
      ICO     = 0
      DO 52 J = LCIK,I - 1
      JM      = II(J)
      IF(IM.NE.JM) GO TO 52
      ICO     = ICO    + 1
      II(LCMTR1) = II(LCMTR-LCIK+J)
   52 CONTINUE
      IF(ICO.NE.0) GO TO 58
   56 CONTINUE
      NMP     = NMP   + 1
      NMM     = IM
      LCMTM1  = LCMTM + NMP - 1
      II(LCMTM1) = IM
   57 II(LCMTR1) = NMP
   58 CONTINUE
C     MATERIAL NUMBER = POSITION IN MATERIAL SPECIFICATION
C     IK  MATERIAL NUMBER BY REGION
C     MTR MATERIAL REGION BY REGION
C     MTM MATERIAL NUMBER BY MATERIAL REGION
C     NMP NOMBRE OF MATERIAL USED IN TUD
C
      LCVLMT= LCMTM + NMP
      LAST  = LCVLMT+ NMP
      IF(LAST.LE.MXDIM) GO TO 70
      LAST  = LAST  - MXDIM
      WRITE(NOUT1,6000) LAST,MXDIM
C     WRITE(NOUT2,6000) LAST,MXDIM
      STOP
C
   70 CONTINUE
      WRITE(NOUT1,6010) LAST,MXDIM
C
C     WRITE(NOUT2,6010) LAST,MXDIM
C     WRITE(NOUT2,2)
C     DO 80 NR=1,NRMAX
C     LCNK1=LCNK+NR-1
C     LCIK1=LCIK+NR-1
C     LCRK1=LCRK+NR-1
C  80 WRITE(NOUT2,3)    NR,    II(LCNK1), II(LCIK1),AA(LCRK1)
C   2 FORMAT(/10X50H  REGION     MESH    MATERIAL      RADIUS          )
C   3 FORMAT(/5X,3I10,4X,E14.5   )
C
CADD FOR BURNUP
C
      IG1      = IG + 1
      DR       = 0.
      GCOEF    = 1.0
      IF(IG.EQ.1)  GCOEF = 3.141592
      IF(IG.EQ.2)  GOCEF = 4.000000*3.141592*0.33333333
C
      DO 80  NR = 1 , NRMAX
      SAVE               = ( AA( LCRK + NR-1 )**IG1 - DR**IG1 )/GCOEF
      AA( LCVOLR + NR-1) = SAVE
      NM  = II( LCMTR + NR-1 )
      AA( LCVLMT + NM-1 ) =  AA( LCVLMT + NM-1 ) + SAVE
      DR  = AA( LCRK + NR-1 )
   80 CONTINUE
C
 6030 FORMAT(10X,'BUCKLING ',E12.5)
 6040 FORMAT(10X,'XLAMD ',E12.5)
 6050 FORMAT(10X,'STEP - TUD INPUT -')
 6000 FORMAT('0//DIMENSION OVER.',I10,' FROM ',I10/)
 6010 FORMAT(10X,'STRAGE USED ',I10,' FROM ',I10,' IN TUD1 STEP')
C
      RETURN
      END

C             INPT11                             DATE=88.05.24
      SUBROUTINE INPT11 (NMAT,MTNAME,NGR)
C
      COMMON /TW1C/ DD(1),LIM1,IA(210)
      COMMON /WORK/AAA(1),LIM2,AA(130)
      DIMENSION D(212),A(132)
      EQUIVALENCE (D(1),DD(1)),(AAA(1),A(1))
      DIMENSION MTNAME(2,NMAT)
C
C     INPUT INTEGERS
C
      EQUIVALENCE (IA(1),ITH),(IA(2),ISCT),(IA(3),ISN),(IA(4),IGM),
     1(IA(5),IM),(IA(6),JM),(IA(7),IBL),(IA(8),IBR),(IA(9),IBB),
     2(IA(10),IBT),(IA(11),IEVT),(IA(12),ISTART),(IA(13),MT),
     3(IA(14),MIN),(IA(15),MS),(IA(16),IHT),(IA(17),IHS),(IA(18),IHM),
     4(IA(19),IQOPT),(IA(20),IQAN),(IA(21),IQB),(IA(23),IPVT),
     5(IA(24),IANG),(IA(26),IITL),(IA(28),IRBM),(IA(29),IXM),
     6(IA(30),IYM),(IA(31),IEDOPT),(IA(32),IGEOM),(IA(33),IQR),
     7(IA(34),IQT),(IA(35),ISDF)
C
C     INPUT FLOATING POINT NUMBERS
C
      EQUIVALENCE (IA(37),EV),(IA(38),EVM),(IA(39),PV),(IA(40),XLAL),
     1(IA(41),XLAH),(IA(42),XLAX),(IA(43),EPSO),(IA(48),NORM),
     2(IA(49),POD),(IA(50),BHGT)
C
C     COMPUTED CONVERGENCE NUMBERS
C
      EQUIVALENCE (IA(44),EPSI),(IA(45),EPSR),(IA(46),EPSX)
C
C     COMPUTED INTEGERS
C
      EQUIVALENCE (IA(51),IUP),(IA(52),IHF),(IA(53),IHA),(IA(54),IHTR),
     1(IA(55),IHNN),(IA(56),IMJM),(IA(57),MM),(IA(58),NM),(IA(59),NMQ),
     2(IA(60),IP),(IA(61),JP),(IA(62),IGP),(IA(63),IJMM),(IA(64),IT),
     3(IA(65),JT),(IA(66),ITJT),(IA(67),ITMM),(IA(68),JTMM),
     4(IA(69),NMIJ),(IA(70),NMM),(IA(71),ISPANC),(IA(72),IHMT),
     5(IA(73),ISPANF),(IA(74),ISCP),(IA(75),IMJP),(IA(76),IPJM),
     6(IA(77),ITP),(IA(78),JTP),(IA(79),ICLIM),(IA(81),NN),
     7(IA(82),NLIMIT),(IA(83),IANGPR),(IA(84),MCRRDS),( A(51),NOSGUP)
C
C     FIRST WORD ADDRESSES
C
      EQUIVALENCE (A(61),LC),(A(62),LA1),(A(63),LA2),(A(64),LA3),
     1(A(65),LA4),(A(66),LA5),(A(67),LQ),(A(68),LQR1),(A(69),LQR2),
     2(A(70),LQT1),(A(71),LQT2),(A(72),LBR1),(A(73),LBR2),(A(74),LBT1),
     3(A(75),LBT2),(A(76),LFL),(A(77),LFIS),(A(78),LFISA),(A(79),LXH),
     4(A(80),LYH),(A(81),LWE),(A(82),LFD),(A(83),LFR),(A(84),LFLL),
     5(A(85),LAB),(A(86),LQQ),(A(87),LQQG),(A(88),LFUT),(A(89),LFDT),
     6(A(90),LFRT),(A(91),LFLT),(A(92),LABT),(A(93),LHA),(A(94),LGA),
     7(A(95),LQG),(A(96),LFG),(A(97),LSIN),(A(98),LSS),(A(99),LSOUT),
     8(A(100),LHL),(A(101),LVL),(A(102),LTL),(A(103),LNL),(A(104),LRL),
     9(A(105),LABG),(A(106),LBAL),(A(107),LCHI),(A(108),LCHIA)
      EQUIVALENCE (A(109),LVEL),(A(110),LSOU),(A(111),LANF),(A(112),LAA)
     1,(A(113),LB1),(A(114),LAL1),(A(115),LAL2),(A(116),LALF),
     2(A(117),LQB1),(A(118),LQB2),(A(119),LCTOT),(A(120),LBT3),
     3(A(121),LBT4),(A(122),LFU),(A(123),LVMESH),(A(124),LZMESH),
     4(A(125),LFLUXM)
      EQUIVALENCE (D(181),LDC)
C
C     DEFINITION OF MATERIAL MESH (WHEN SEPARATE FROM REBALANCE MESH)
C
      EQUIVALENCE (IA(25),IMC),(IA(27),JMC),(IA(80),MESH)
C
C     /FWBGN1/ , /FWBGN2/ , /LOCAL/ , /UNIYS/
C
      EQUIVALENCE (D(110),IPFL),(D(112),IPFX),(D(130),IPHAF),
     1(D(120),IPQS),(D(108),IPSO),(D(131),IPVAF),(D(115),IPXS),
     2(D(116),IPXSCT),(D(167),ISOTXS),(D(129),ISPANQ),(D(106),LASTEC),
     3(A( 52),LAST2),(D(155),LENCLR),(D(154),LIMIT),(D(149),LMTP),
     4(D(119),LTAXS),(D(111),LTFL),(D(113),LTFX),(D(132),LTHAF),
     5(D(118),LTOXS),(D(121),LTQS),(D(109),LTSO),(D(133),LTVAF),
     6(D(117),LTXS),(D(114),LXFX),(D(139),MAXECS),(D(147),MTPS),
     7(D(159),NDUMP1),(D(148),NISOXS),(D(157),NOUT),(D(145),MCR),
     8(D(205),LZRDUC),(D(170),NMPW)
      DIMENSION E28(4),E29(5),E30(6)
      DIMENSION ISPEC(9)
      DIMENSION IWORK(42)
C
      REAL NORM
C
      CHARACTER*8 TDATE,E28,E29,E30
C
CKSK  DATA E28/6HCORE S,6HTORAGE,6H EXCEE,6HDED   /
CKSK  DATA E29/6HEXTEND,6HED COR,6HE STOR,6HAGE EX,6HCEEDED/
CKSK  DATA E30/6HTEMP S,6HTORAGE,6H INPUT,6H X-SEC,6HTS TOO,6H LARGE/
      DATA E28/'CORE S','TORAGE',' EXCEE','DED   '/
      DATA E29/'EXTEND','ED COR','E STOR','AGE EX','CEEDED'/
      DATA E30/'TEMP S','TORAGE',' INPUT',' X-SEC','TS TOO',' LARGE'/
      CALL CLEARW(0.0,AA,LIM2)
C    ***** NUMBER OF GROUPS SET
      IGM=NGR
      IGP=IGM+1
C    ***** DATA POOL FISSION SPECTRUM & VELOCITIES READ
      LVEL=131
      LCHI=LVEL+IGP
      LCHIA=LCHI+IGP
CKSK  CALL FSPVEW(A(LCHIA),A(LCHIA),A(LCHI),A(LVEL),NGR,MTNAME,NMAT,
CKSK *            D(LZRDUC),NOUT,LIM2-LCHIA,NMPW)
      CALL FSPVEW(AAA(LCHIA),AAA(LCHIA),AAA(LCHI),AAA(LVEL),NGR,MTNAME,
     &     NMAT,DD(LZRDUC),NOUT,LIM2-LCHIA,NMPW)
C    ***** DATA POOL X-SECCONVERSION
      LMTP=LCHIA+IGP
      I00=LMTP+(ISCT+1)*NMPW
CKSK  CALL CVMASW(A(I00),A(I00),A(I00),D(LZRDUC),MTNAME,NMAT,
CKSK *            NGR,IHT,IHS,IHM,LIM2-I00,ISOTXS,NOUT,MTPS,A(LMTP),ISCT
CKSK +    +1     ,               NMPW)
C    +    +1     ,D(LDC),IMC*JMC,NMPW)
      CALL CVMASW(AAA(I00),AAA(I00),AAA(I00),DD(LZRDUC),MTNAME,NMAT,
     &            NGR,IHT,IHS,IHM,LIM2-I00,ISOTXS,NOUT,MTPS,AAA(LMTP),
     &            ISCT+1,NMPW )
      MTP=MTPS*(ISCT+1)
      MT=MTP+MCR
      MIN=MT
      NOSGUP=-IHT
      IHT=IABS(IHT)
      IF (IABS(ISTART).NE.6) GO TO 140
C
C     READ RESTART DUMP FROM JNIT NFLUX
C
      CALL DUMPRD (NDUMP1)
      GO TO 180
C
C     READJUST INPUT VALUES OF CROSS SECTION POSITIONS
C
  140 CONTINUE
  180 CONTINUE
      IF (IHT+1.EQ.IHS) GO TO 200
      IF (NOSGUP.LT.0) GO TO 200
      IHS=IHS-1
      IHM=IHM-1
  200 CONTINUE
C
C     IF ISN.LT.0 USER SUPPLIES SN CONSTANTS
C
      ISNT=ISN
      ISN=IABS(ISN)
C
C     COMPUTE USEFUL INTEGERS
C
      IUP=IHS-IHT-1
      IHF=IHT-1
      IHA=IHT-2
      IHTR=IHT-3
      IHNN=IHT-4
      IHMT=MT*IHM
      ICLIM=IHMT+MT
C
C
C     FORM ADDRESS OF SN CONSTANTS AND SCATTER COEFFICIENTS
C
      LAL1=LMTP+MTPS
      LAL2=LAL1+MM
C
C     MAJOR STORAGE REQUIREMENTS
C
CKH
      LVMESH=LAL2+MM
      LZMESH=LVMESH+ITJT
      LFLUXM=LZMESH+ITJT
      LC=LFLUXM+NM*IGM*IMJM
CKH   LC=LAL2+MM
      LAA=LC+IHMT
      LCTOT=LAA+MT
      LQ=LCTOT+ITJT
      LSOU=LQ
      LQR1=LQ+MAX0(NMIJ,IPJM)
      LQR2=LQR1+IQR*JTMM
      LQT1=LQR2+IQR*JTMM
      LQT2=LQT1+IQT*ITMM
      LQB1=LQT2+IQT*ITMM
      LQB2=LQB1+IQB*ITMM
      LFL=LQB2+IQB*ITMM
      LBR1=LFL+NMIJ
      LBR2=LBR1+JTMM
      LBT1=LBR2+JTMM
      LBT2=LBT1+ITMM
      NULL=1
      IF (IBT.NE.3) NULL=0
      LBT3=LBT2+ITMM
      LBT4=LBT3+ITMM*NULL
C
C     LAST WORDS OF MAJOR BLOCKS TO BE WRITTEN ON PERIPHERAL UNITS
C     OR ADDRESSED DIRECTLY FROM A
C
      ISPANC=LQ-1
      ISPANQ=0
      IF (IEVT.EQ.0) ISPANQ=LFL-1
      ISPANF=LBR1-1
      IF ((IBR.GT.0).OR.(IBT.GT.0)) ISPANF=ISPANF+2*(ITMM+JTMM)
      IF (IBT.EQ.3) ISPANF=ISPANF+2*ITMM
C
C     CONTINUE WITH STORAGE ALLOCATION
C
      LFIS=LBT4+ITMM*NULL
      LFISA=LFIS
C
C     GEOMTRY AND ANGULAR ARRAYS
C
      LXH=LFISA+ITJT
      LYH=LXH+IMC
      LA1=LYH+JT
      LA2=LA1+ITP
      LA3=LA2+ITP
      LA4=LA3+ITP
      LA5=LA4+ITP
      LB1=LA5+ITP
      LALF=LB1+JT
      LWE=LALF+NN*IT
C
C     GROUP ARRAYS
C
      LQG=LWE+MM
      LFG=LQG+IGP
      LSIN=LFG+IGP
      LSS=LSIN+IGP
      LSOUT=LSS+IGP
      LHL=LSOUT+IGP
      LVL=LHL+IGP
      LTL=LVL+IGP
      LNL=LTL+IGP
      LRL=LNL+IGP
      LABG=LRL+IGP
      LBAL=LABG+IGP
C     LCHI=LBAL+IGP
C     LCHIA=LCHI+IGP
C     LVEL=LCHIA+IGP
C
C     REBALANCE REQUIREMENTS
C
      LFU=LBAL+IGP
      LFD=LFU+IMJP
      LFR=LFD+IMJP
      LFLL=LFR+IPJM
      LAB=LFLL+IPJM
      LABT=LAB+IMJM
      LQQ=LABT+IMJM
      LQQG=LQQ+IMJP
      LFUT=LFU
      LFDT=LFD
      LFRT=LFR
      LFLT=LFLL
      LHA=LQQG
      IF (IEVT.EQ.0) LHA=LQQG+IMJM
      LGA=LHA+IM
      LANF=LGA+IM
      LAST2=LANF+ITP*MM*IANG*2
C
C     PREPARE CROSS SECTION INPUT STORAGE REQUIREMENTS
C
      IHMUP=IHM
      IF (IHS.GT.IHT+1) IHMUP=IHMUP+1
      LIMIT=LQ+IHMUP*IGM*MIN
      IF (MTPS.EQ.0) GO TO 280
C
C     READ ISOTXS FILE FOR SPECIFICATION BLOCK
C
      CALL REED (ISOTXS,0,0.0,0,4)
      CALL REED (ISOTXS,0,DUM,1,2)
      CALL REED (ISOTXS,ISPEC,0.0,9,5)
C
C     COMPUTE MAXIMUM ADDITIONAL CORE REQUIRED
C
      NISOXS=ISPEC(2)
      LIMIT=LIMIT+2*NISOXS
      ITEMP1=2*(12+NISOXS)
      ITEMP2=15+ISPEC(7)*(2*IGM+2)
      ITEMP3=IGM*(IGM+11)
      ITEMP4=IGM*IGM*(ISCT+1)
      ITEMP1=MAX0(ITEMP1,ITEMP2+ITEMP3,ITEMP2+ITEMP4)
      LIMIT=LIMIT+ITEMP1
  280 CONTINUE
      IF(LIMIT.GT.LIM2) CALL ERROR(2,E30,6)
C
C     COMPUTE LCM BLOCK LENGTHS
C
      LTFX=ISPANF-LFL+1
      LTSO=NM*ITJT
      LTFL=2*(IPJM+IMJP)
      LTXS=LQ-LC
      LTQS=0
      IF (IEVT.EQ.0) LTQS=LFL-LQ
      LTHAF=ITP*MM*IANG*2
      LTVAF=IT*MM*IANG*2
C
C     COMPUTE LCM BLOCK POINTERS
C
      IPFX=1
      IPSO=IPFX+IGM*LTFX
      IPXS=IPSO+LTSO
      IPQS=IPXS+IGM*LTXS
      IPFL=IPQS+IGM*LTQS
      IPHAF=IPFL+IGM*LTFL
      IPVAF=IPHAF+LTHAF*2*JT
      LASTEC=IPVAF+LTVAF*2*JTP
C
C     COMPUTE FLUX AND CROSS SECTION SUB BLOCK LENGTHS AND POINTERS
C
      LXFX=LBR1-LFL
      LTOXS=LAA-LC
      LTAXS=LCTOT-LC
      IPXSCT=IPXS+LCTOT-LC
C
C     FIRST WORD OF ECS NOT USED
C
      LASTEC=LASTEC+1
C
C     MAXIMUM STORAGE REQUIREMENTS INCLUDING TEMPORARIES
C
      LAST2 = MAX0(LAST2,LIMIT)
C
C     CLEAR COUNT
      LENCLR=LAST2-LC+1
C
C     COMPUTE REMAINDER OF BLOCK A TO BE USED AS LCM
C
      MAXECS = LIM2 - LAST2
      IF ( MAXECS .LE. 0 ) MAXECS = 0
      WRITE(6,450) LAST2,LIM2,LASTEC,MAXECS
      WRITE (NOUT,450) LAST2,LIM2,LASTEC,MAXECS
C
C     CHECK STORAGE LIMITATIONS ECS/CORE/TEMP. FOR ANISO SCATTER
C
      IF (LASTEC.GT.MAXECS) CALL ERROR (2,E29,5)
      IF (LAST2.GT.LIM2) CALL ERROR (2,E28,4)
C
C     DEFINE AUXILIARY CONVERGENCE PRECISIONS
C
  290 CONTINUE
      EPSR=0.5*EPSO
      EPSI=EPSO
      EPSX=EPSO
C
C     SET MAXIMUM NUMBER OF REBALANCE ITERATIONS
C
      IRBM=200
      RETURN
C
C
  450 FORMAT (//8H0STORAGE,4X,8HREQUIRED,8H ALLOWED/11H SMALL CORE,2(1X,
     1I7)/11H LARGE CORE,2(1X,I7))
      END

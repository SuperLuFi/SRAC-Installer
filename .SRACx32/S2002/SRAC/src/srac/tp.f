C             TP                  LEVEL=12       DATE=82.10.26
      SUBROUTINE TP(CRX,CRXX,Q,XN,FD,XKI,IH1,IH2,IG1,M1,M2,IM1,I1)
      DIMENSION CRX(IH1,IG1,1 ),CRXX(IH2,IG1,1 ),Q(M2,IM1,1  ),XN(I1,1)
      DIMENSION FD(1),XKI(1)
C   ***  TP  READS X-SECT, SOURCE IF IEVT=0,   FLUX OR FISSION GUESS,
C       AND PREPARES TAPES WHEN IDAT1.NE.0
      COMMON /REAMIO/ NOUT6, NDTLS 
      COMMON /SKPBUF/ LOCATN,JUMP,LFAST,LSLOW,JMP1,JMP2,JMP3
      COMMON /MAINC/ III(1000)
      COMMON /SN1C/
     &              D(1),LIM1,LR,LW,LDSN,LMA,LMZ,LMB,LMC,LXMD,LFIX,LFLT,
     &       LJ5,LRM,LDF,LJ3,LJ4,LIGT,LART,LALFT,
     &LFGP,LFGG,LEND,LV,LAA,LWD,LMR,LPNC,
     &ID,ITH,ISCT,ISN,IGE,IBL,IBR,IZM,IM,IEVT,IGM,IHT,IHS,IHM,MS,MCR,MTP
     &,MT,IDFM,IPVT,IQM,IPM,IPP,IIM,ID1,ID2,ID3,ID4,ICM,IDAT1,IDAT2,IFG,
     &IFLU,IFN,IPRT,IXTR,
     &EV,EVM,EPS,BF,DY,DZ,DFM1,XNF,PV,RYF,XLAL,XLAH,EQL,XNPM,
     &T(12),NIN,NOU,NT1,NT2,NT3,NT4,NT5,NT6,NT7,NT8
      COMMON /WORK/ Z(1),LIM2,LXKI,LFD,LXN,LVE,LMTT,LCRX,LQ,LPA,
     &       LXJ,LCH,LCA,LCF,LCT,LCS,LTAB,
     &LXND,LSA,LSAT,LRAV,LRA,LXNN,LXNE,LXNR,LXNA,LSR,LST,LQG,LFG,LSG,
     &LXKE,LXNI,LXNO,LT3,LT5,LDA,LDB,LDC,LDS,LB,IGMP,IGMM,IIGG,NERR,IMJT
     &,IHG,IMP,MP,NDS,NUS,SDG,SCG,AG,XNLGG,XNLG,SNG,ALA,ASR,EAM,EPG,EQ,
     &E1,E2,E3,E4,E5,E6,E7,E8,E9,E10,E11,E12,E13,E14,E15,E16,E17,E18,E19
     &,E20,ESC,ESM,EVP,EVPP,FTP,IC,ICVT,IGP,IG,IHP,IIC,IIG,IP,IZP,I01,
     &I02,I03,I04,I05,I06,I07,I08,I09,I00,JT,LC,MG,MI,ML,MM,NFN,XITR,
     &XLAP,XLAPP,XLAR,XLA,XNIO,XNII,ZZ1,ZZ2,ZZ3,XNB,XKEP,XKIP,IH,I,K,L,
     &M,J,N,NN,ISV
      EQUIVALENCE (III(74),NSOUC),(III(75),NFIN)
      JMP4=JUMP
      IF(IFG.NE.2 .AND. IFG.NE.4)GO TO 28
      READ (NT8) II,MAT
      N3=IHM*IGM
      N2=0
      DO 26 M=1,MAT
      READ (NT8) N1
      IF(N1.GT.ISCT)GO TO 27
      N2=N2+1
      READ (NT8) (CRX (IH,1,N2),IH=1,N3)
      GO TO 26
   27 READ (NT8)
   26 CONTINUE
      WRITE (NOU,30) N2
   30 FORMAT(1H0,I3,' ANISN WEIGHTED X-SEC. SETS READ')
      REWIND NT8
   28 IF(ID2.EQ.2)GO TO 11
      IF(ID2.EQ.0)GO TO 22
      IF(ID2.EQ.-1) GO TO 22
      DO 23 I=1,IGM
      READ (NT7) ((CRXX(IH,M,1),IH=1,IHP),M=1,MTP)
   23 WRITE (NT4) ((CRXX(IH,M,1),IH=1,IHP),M=1,MTP)
      WRITE (NOU,40)MTP
   40 FORMAT(1H0,I3,' X-SEC. SETS READ FROM GRP. INDEPENDENT TAPE')
      REWIND NT7
      GO TO 9
C   *** READ X-SECT AND/OR TAPE ID NUMBERS  14*/13&
   22 JUMP=JMP1
      IF(MCR.EQ.0) GO TO 100
CKSK  READ(NIN,1000)
      READ(NDTLS,1000)
      CALL REAM(CRX,CRX,CRX,0,0,IHM*IGM*MCR)
      JUMP=JMP4
  100 CONTINUE
      IF(MTP.GT.0) CALL S966(CRX(1,1,MCR+1),Z(LMTT),IHM*IGM,IHM,IGM,
     &                      MCR,MTP,NT6,NOU )
      M=ML
      DO 2 M3=1,ML
      I=IGM
      DO 3 I3=1,IGM
      IH=IHM
      DO 4 IH3=1,IHM
      CRXX(IH,I,M)=CRX(IH,I,M)
    4 IH=IH-1
    3 I=I-1
    2 M=M-1
C   *** IHP IS POSITION OF TOTAL UPSCATTER CROSS SECTION WHICH IS
C       COMPUTED HERE  (IHP=IHM+1 IF THERE IS UPSCATTER)
      IF(IHP.EQ.IHM)GO TO 1
      DO 24 M=1,ML
      DO 24 I=1,IGM
   24 CRXX(IHP,I,M)=0.0
      DO 5 M=1,ML
      DO 6 I=1,IGM
      IH=IHS-1
    7 K=I + IHS - IH
      IF(K.GT.IGM)GO TO 6
      CRXX(IHP,K,M)=CRXX(IHP,K,M) + CRXX(IH,I,M)
      IH=IH-1
      IF(IH.GT.IHT)GO TO 7
    6 CONTINUE
    5 CONTINUE
C   *** COMPUTE ADJOINT CROSS SECTIONS
    1 IF(ITH.GT.0)CALL S805(CRX,IHP,IGM)
      IF(IDAT1.EQ.0)GO TO 9
      DO 8 I=1,IGM
    8 WRITE (NT4) ((CRXX(IH,I,M),IH=1,IHP),M=1,ML)
    9 REWIND NT4
C     WRITE(6,6060) IEVT,IQM
C6060 FORMAT(10X,'IEVT=',I3,' IQM=',I3)
      IF(IEVT.NE.0)GO TO 18
C   *** READ SOURCE  17* OR 18*
      IF(IQM.GT.0) GO TO 110
C     JUMP=JMP2
CKSK  READ(NIN,1000)
      READ(NDTLS,1000)
      CALL REAG(Z(LPA),IPM*MM*IGM,'SHEL','L SR')
C     JUMP=JMP4
      GO TO 115
  110 CONTINUE
C     DISTRIBUTED SOURCE READ IN CARD OR SRAC SYSTEM FILE
      IF (IQM.EQ.1) GO TO 111
CKSK  READ(NIN,1000)
      READ(NDTLS,1000)
      CALL REAG(Q,IGM*IM,'DIST','R SR')
      GO TO 115
  111 CONTINUE
      REWIND NSOUC
      READ(NSOUC) (Q(I,1,1),I=1,IGM*IM)
C     WRITE(99,6000) (Q(I,1,1),I=1,IGM*IM)
C6000 FORMAT(1H0,10X,'FSOURC E.G (SN)',/(15X,1P6E16.8))
  115 CONTINUE
      IF(ITH.NE.0)CALL ADJNT(Q,IMP*MP,IGM)
   10 IF(IDAT1.EQ.0)GO TO 11
      DO 12 I=1,IGM
      READ (NT4) ((CRXX(IH,M,1),IH=1,IHP),M=1,ML)
      WRITE (NT3) ((CRXX(IH,M,1),IH=1,IHP),M=1,ML)
                   WRITE (NT3) ((Q(M,II,I),M=1,MP),II=1,IMP)
   12 CONTINUE
      REWIND NT3
      REWIND NT4
      GO TO 11
   18 I00=NT4
      NT4=NT3
      NT3=I00
   11 IF(IFN.EQ.2) GO TO 13
      I00=LR - 1
      CALL CLEAR(0.0,Z(LFD),IM)
      CALL CLEAR(0.0,Z(LXN),IG)
C   *** READ FLUX OR FISSIONS  2* OR 3*
      JUMP=JMP3
   25 REWIND NFIN
C     WRITE(6,1191)  IFN
C1191 FORMAT('        IFN=',I2)
      IF (IFN.NE.0) GO TO 19
      READ(NFIN) (Z(I),I=LFD,LFD+IM-1)
      WRITE(99,6005) (Z(I),I=LFD,LFD+IM-1)
      GO TO 20
   19 READ(NFIN)((XN(I,J),I=1,IM),J=1,IGM)
C     WRITE(99,6100) ((XN(I,J),I=1,IM),J=1,IGM)
 6005 FORMAT(10X,'FISSION GUESS'/(15X,1P6E14.5))
 6100 FORMAT(10X,'FLUX GUESS'/(15X,1P6E14.5))
   20 CONTINUE
      JUMP=JMP4
      IF(ITH.NE.0 .AND. IFN.NE.0)CALL ADJNT(XN,IM,IGM)
   14 IF(IDAT1.NE.2)GO TO 13
      E1=0.0
      DO 17 IIG=1,IGM
      WRITE (NT1) (XN(I,IIG),I=1,IM),(E1,I=1,MM)
      IF(ISCT.GT.0)WRITE (NT1) (E1,I=1,IMJT)
   17 CONTINUE
      REWIND NT1
   13 ISV=IDAT1
      RETURN
 1000 FORMAT(1X)
      END

       SUBROUTINE  BURNP2 ( NOWSTP , IBEDIT , LAPSE  , MATDPL , NMAT   ,
     1                      NXR    , VOLM   , VOLX   , TITLE  , CASEID ,
     2                      NTNUC  , NTDEPZ ,          TWTHVY , STDNUC ,
     3                      LAPSET , NOUT2  , MTYP   , SRACID , GAMAV  ,
     4                      YDXE   , YDIO   , YDSM   , YDPM   , DNSITY ,
     5                      SIGXE  , SIGIO  , SIGSM  , SIGPM  , MTYPX  ,
     6                      POWRX  , EXPSX  , U235FX , HMINVX , GAMAVX ,
     7                      YDXEX  , YDIOX  , YDSMX  , YDPMX  , DENSX  ,
     8                      SIGXEX , SIGIOX , SIGSMX , SIGPMX , AFISSX ,
     9                      CFERTX , FLUXX  , AFISSM , CFERTM , FLUXM  ,
     A                      NTFISS , LASTFP , MTNAME , ABSMAT , ABSXRG ,
     B                      IPRT  )
C
C      THIS SUBROUTINE WAD ADDED FOR NEW BUNRUP SUMMARY TO 98 LOGICAL
C      UNIT BY K.KANEKO 2002/9/22
C
      INCLUDE  'BURNPINC'
C
       REAL*4         INSCR,INTCR
C
      COMMON /DEPLET/ AKEFF (MXSTEP),AKINF (MXSTEP),
     1                PERIOD(MXSTEP),POWERL(MXSTEP),
     2                DAYS  (MXSTEP),U235F (MXSTEP),
     3                EXPST (MXSTEP),CUMMWD(MXSTEP),
     4                INSCR (MXSTEP),INTCR (MXSTEP),
     5                FLXNRM(MXSTEP),FACNRM(MXSTEP),
     6                FISABS(MXSTEP),FRTCAP(MXSTEP),
     7                FDECAY(MXSTEP),CDECAY(MXSTEP),
     8                POWRZN(MXSTEP,MXDEPL),
     9                EXPSZN(MXSTEP,MXDEPL),
     A                HMINV (MXSTEP,MXDEPL),
     B                DMWZON(MXSTEP,MXDEPL)
C
      CHARACTER*8     IHOL,MEMBER
C
      COMMON /BURNC1/ IBC(46),LNMAX
      COMMON /BURNC4/ IHOL(MXNUC)
C
C **** LOCAL ARRAY
C
       REAL*4       SWORK(MXSTEP) , FPWORK(MXSTEP) , TWTHVY(MXSTEP)
C
       INTEGER*4    IDORIG(MXNUC)
       CHARACTER*6  IDNEW(MXNUC)
C
C **** ARRAY DECLEARATION FOR ARGUMENT ARRAY
C
       INTEGER*4    MTYP(NMAT),MATDPL(NMAT),MTYPX(NXR)
       REAL*4       VOLM(NMAT),VOLX(NXR)
C
       CHARACTER*4  STDNUC,TITLE(18)
       CHARACTER*8  CASEID
C
       CHARACTER*4  SRACID(NTNUC)
       CHARACTER*8  MTNAME(NMAT)
C
       REAL*4       GAMAV (NOWSTP,NTDEPZ)
       REAL*4       YDXE  (NOWSTP,NTDEPZ),YDIO  (NOWSTP,NTDEPZ)
       REAL*4       YDSM  (NOWSTP,NTDEPZ),YDPM  (NOWSTP,NTDEPZ)
       REAL*4       DNSITY(NOWSTP,NTNUC,NTDEPZ)
       REAL*4       SIGXE (LAPSE,NOWSTP,NTDEPZ)
       REAL*4       SIGIO (LAPSE,NOWSTP,NTDEPZ)
       REAL*4       SIGSM (LAPSE,NOWSTP,NTDEPZ)
       REAL*4       SIGPM (LAPSE,NOWSTP,NTDEPZ)
       REAL*4       FLUXM (LAPSE,NOWSTP,NMAT)
       REAL*4       FLUXX (LAPSE,NOWSTP,NXR )
       REAL*4       ABSMAT(NOWSTP,NTNUC,NTDEPZ)
       REAL*4       ABSXRG(NOWSTP,NTNUC,NXR )
C
       REAL*4       POWRX (NOWSTP,NXR) , EXPSX (NOWSTP,NXR)
       REAL*4       U235FX(NOWSTP,NXR) , HMINVX(NOWSTP,NXR)
       REAL*4       GAMAVX(NOWSTP,NXR)
       REAL*4       YDXEX (NOWSTP,NXR) , YDIOX (NOWSTP,NXR)
       REAL*4       YDSMX (NOWSTP,NXR) , YDPMX (NOWSTP,NXR)
       REAL*4       DENSX (NOWSTP,NTNUC,NXR)
       REAL*4       SIGXEX(LAPSE,NOWSTP,NXR)
       REAL*4       SIGIOX(LAPSE,NOWSTP,NXR)
       REAL*4       SIGSMX(LAPSE,NOWSTP,NXR)
       REAL*4       SIGPMX(LAPSE,NOWSTP,NXR)
       REAL*4       AFISSX(LAPSE,NOWSTP,NXR)
       REAL*4       CFERTX(LAPSE,NOWSTP,NXR)
       REAL*4       AFISSM(LAPSE,NOWSTP,NTDEPZ)
       REAL*4       CFERTM(LAPSE,NOWSTP,NTDEPZ)
C
       CHARACTER*8  IDMTYP(3)
       CHARACTER*12 LINE
C
       DATA    IDMTYP / 'NOBURNUP'   , 'FUEL    '    , 'ABSORBER'  /
C
C ***  DEFINE ORIGEN CODE NUMBER
C
      CALL  ICLEA( IDORIG , MXNUC , 0 )
C
      NISO     = 1
      DO  76 I = 1 , LNMAX
      MEMBER   = IHOL(I)
      IF(MEMBER(2:2).EQ.' ') MEMBER(2:2)='-'
C
      IF(MEMBER(6:6).NE.'M'.and.MEMBER(6:6).NE.' ') MEMBER(6:6)= ' '
C
C               1) Pseudo F.P. nuclides (ZZsnn)
C                  ZZ : Pseudo FP
C                  s  : =0 for thermal reactor / =1 for fast reactor
C                  nn : ID number for Pseudo types (chain model types)
C
      IF(MEMBER(1:5).EQ.'PSDT2') MEMBER = 'ZZ032   '
      IF(MEMBER(1:5).EQ.'PSDU3') MEMBER = 'ZZ033   '
      IF(MEMBER(1:5).EQ.'PSDU5') MEMBER = 'ZZ035   '
      IF(MEMBER(1:5).EQ.'PSDU8') MEMBER = 'ZZ038   '
      IF(MEMBER(1:5).EQ.'PSDP9') MEMBER = 'ZZ039   '
      IF(MEMBER(1:5).EQ.'PSDP1') MEMBER = 'ZZ031   '
C
      IF(MEMBER(1:3).EQ.'S26')   MEMBER = 'ZZ032   '
      IF(MEMBER(1:3).EQ.'S36')   MEMBER = 'ZZ033   '
      IF(MEMBER(1:3).EQ.'S56')   MEMBER = 'ZZ035   '
      IF(MEMBER(1:3).EQ.'S86')   MEMBER = 'ZZ038   '
      IF(MEMBER(1:3).EQ.'S96')   MEMBER = 'ZZ039   '
      IF(MEMBER(1:3).EQ.'S16')   MEMBER = 'ZZ031   '
CMOD  IF(MEMBER(1:3).EQ.'P67')   MEMBER = 'ZZ067   '
      IF(MEMBER(1:2).EQ.'P6' )   MEMBER = 'ZZ067   '
C
      CALL  ZZMMM( 0,NISO,IDORIG(I),MEMBER)
      CALL  ZZMMM( 2,NISO,IDORIG(I),MEMBER)
      IDNEW(I) = MEMBER(1:6)
   76 CONTINUE
C
CM    WRITE(IPRT,*) ' *** SRACID & ORIGEN CODE LISTING **** '
CM    DO  77 I = 1 , LNMAX
CM    WRITE(IPRT,78) I,SRACID(I),IHOL(I),IDORIG(I),IDNEW(I)
CM 77 CONTINUE
C
   78 FORMAT(1H ,I6,2X,A4,2X,A8,2X,I10,2X,A6)
C
C ***   PRINT OUT PROCESS ****
C
      LINE   = ' -----------'
      NLINE  = NOWSTP
      IF(NLINE.GT.100) NLINE = 100
C
 3600 CONTINUE
      WRITE(IPRT,4101)
      WRITE(IPRT,4102) CASEID(1:4),(TITLE(I),I=1,18)
CKSK --- NOTE FOR USERS
      WRITE(IPRT,7020)
      WRITE(IPRT,7021)
      WRITE(IPRT,7022)
      WRITE(IPRT,7023)
      WRITE(IPRT,7024)
CKSK --- NOTE
      WRITE(IPRT,4103) (DAYS (I),I=1,NOWSTP)
      WRITE(IPRT,4104) (EXPST(I),I=1,NOWSTP)
      WRITE(IPRT,4105) STDNUC(2:4),(U235F(I),I=1,NOWSTP)
      IF(AKEFF(1).GT.0.0) THEN
                          WRITE(IPRT,4106) (AKEFF (I),I=1,NOWSTP-1)
                          WRITE(IPRT,4107) (AKINF (I),I=1,NOWSTP-1)
                          ENDIF
      WRITE(IPRT,4108) (INSCR(I),I=1,NOWSTP-1)
      WRITE(IPRT,4109) (INTCR(I),I=1,NOWSTP-1)
      WRITE(IPRT,4110) (CUMMWD(I),I=1,NOWSTP)
      WRITE(IPRT,4111) (POWERL(I),I=1,NOWSTP-1)
      WRITE(IPRT,4112) (TWTHVY(I),I=1,NOWSTP)
      WRITE(IPRT,4113) (FLXNRM(I),I=1,NOWSTP-1)
      WRITE(IPRT,6001) (FISABS(I),I=1,NOWSTP-1)
      WRITE(IPRT,6002) (FDECAY(I),I=1,NOWSTP-1)
      WRITE(IPRT,6003) (FRTCAP(I),I=1,NOWSTP-1)
      WRITE(IPRT,6004) (CDECAY(I),I=1,NOWSTP-1)
C
 4101 FORMAT(//1X,'<<<< RESULT-OF-DEPLETION-CALCULATION >>>>' )
C4101 FORMAT(1H1,/40X,31(1H-),/40X,'RESULT OF DEPLETION CALCULATION'/
C    1            40X,31(1H-))
 4102 FORMAT(1X,'CASEID=',A4,/,1X,'TITLE: ',18A4)
C
C4103 FORMAT(/' DAYS       ',1P100E12.5:/(12X,1P100E12.5:))
 4103 FORMAT(/' * DAYS       ',1P100E12.5:/(12X,1P100E12.5:))
 4104 FORMAT( ' * MWD/TON    ',1P100E12.5:/(12X,1P100E12.5:))
C4105 FORMAT(' ',A3,'-%      ',1P100E12.5:/(12X,1P100E12.5:))
 4105 FORMAT( ' * ',A,'-%      ',T15,1P100E12.5:/(12X,1P100E12.5:))
 4106 FORMAT(/' * K-EFF      ',F9.6,99F12.6:/(9X,0P100F12.6:))
 4107 FORMAT( ' * K-INF      ',F9.6,99F12.6:/(9X,0P100F12.6:))
 4108 FORMAT(/' * INST.-C.R. ',F9.6,99F12.6:/(9X,0P100F12.6:))
 4109 FORMAT( ' * INTE.-C.R. ',F9.6,99F12.6:/(9X,0P100F12.6:))
 4110 FORMAT( ' * MWD        ',1P100E12.5:/(12X,1P100E12.5:))
 4111 FORMAT( ' * POWER(MW)  ',1P100E12.5:/(12X,1P100E12.5:))
 4112 FORMAT( ' * TON-HM     ',1P100E12.5:/(12X,1P100E12.5:))
 4113 FORMAT( ' * FLUX-LEVEL ',1P100E12.5:/(12X,1P100E12.5:))
 6001 FORMAT( ' * FIS.-ABSOR ',1P100E12.5:/(12X,1P100E12.5:))
 6002 FORMAT( ' * FIS.-DECAY ',1P100E12.5:/(12X,1P100E12.5:))
 6003 FORMAT( ' * FER.-CAPTR ',1P100E12.5:/(12X,1P100E12.5:))
 6004 FORMAT( ' * PRE.-DECAY ',1P100E12.5:/(12X,1P100E12.5:))
C--------- FOR NOTE
 7020 FORMAT(//,1X,36('-'),' NOTE ',37('-') )
 7021 FORMAT(' U05-%      : DEPLETED FRACTION ON NUMBER DENSITY OF ',
     &       'U-235(OR DEFINED NUCLIDE)' )
 7022 FORMAT(' INST.-C.R. : INSTANTANEOUS CONVERSION RATIO(OR USER',
     &       ' DEFINED REACT.RATE RATIO)',/,
     &   14X,'=(FER.-CAPTR + PRE.-DECAY)/(FIS.-ABSOR + FIS.-DECAY)',/,
     &       ' INTE.-C.R. : TIME-INTEGRATED CONVERSION RATIO',
     &       '(OR USER DEFINED REACT.RATE RATIO)',/,
     &   14X,'=INTEG[(FER.-CAPTR + PRE.-DECAY)]/INTEG[(FIS.-ABSOR + ',
     &       'FIS.-DECAY)]' )
 7023 FORMAT(' FIS.-ABSOR : ABSORPTION RATE OF FISSILE NUCLIDES FOR ',
     &       'CONVERSION RATIO CAL.',/,
     &       ' FIS.-DECAY : DECAY RATE OF FISSILE NUCLIDES FOR ',
     &       'CONVERSION RATIO CAL.',/,
     &       ' FER.-CAPTR : CAPTURE RATE OF FERTILE NUCLIDES FOR ',
     &       'CONVERSION RATIO CAL.',/,
     &       ' PRE.-DECAY : DECAY RATE OF PRECURSOR NUCLIDES FOR ',
     &       'CONVERSION RATIO CAL.',/,
     &       ' TON-HM     : INVENTORY(TON) OF HEAVY NUCLIDES',/,
     &       ' ENRGY/FIS. : RELEASED ENERGY(J) PER FISSION',/,
     &       ' NUCNAM-YD. : FISSION YIELD OF FISSION PRODUCT(NUCNAM)')
 7024 FORMAT(1X,79('-'),/ )
C=======================================================================
C
C4103 FORMAT(/' DAYS       ',1P10E12.5:/(12X,1P10E12.5:))
C4104 FORMAT(' MWD/TON    ',1P10E12.5:/(12X,1P10E12.5:))
C4105 FORMAT(' ',A3,'-%      ',1P10E12.5:/(12X,1P10E12.5:))
C4106 FORMAT(/' K-EFF      ',F9.6,9F12.6:/(9X,0P10F12.6:))
C4107 FORMAT(' K-INF      ',F9.6,9F12.6:/(9X,0P10F12.6:))
C4108 FORMAT(/' INST. C.R. ',F9.6,9F12.6:/(9X,0P10F12.6:))
C4109 FORMAT(' INTE. C.R. ',F9.6,9F12.6:/(9X,0P10F12.6:))
C4110 FORMAT(' MWD        ',1P10E12.5:/(12X,1P10E12.5:))
C4111 FORMAT(' POWER (MW) ',1P10E12.5:/(12X,1P10E12.5:))
C4112 FORMAT(' TON-HM     ',1P10E12.5:/(12X,1P10E12.5:))
C4113 FORMAT(' FLUX LEVEL ',1P10E12.5:/(12X,1P10E12.5:))
C6001 FORMAT(' FIS. ABSOR ',1P10E12.5:/(12X,1P10E12.5:))
C6002 FORMAT(' FIS. DECAY ',1P10E12.5:/(12X,1P10E12.5:))
C6003 FORMAT(' FER. CAPTR ',1P10E12.5:/(12X,1P10E12.5:))
C6004 FORMAT(' FER. DECAY ',1P10E12.5:/(12X,1P10E12.5:))
C
C *** MATERIAL-WIZE PRINT OUT
C
      DO 4300 M = 1 , NMAT
      MN        = MATDPL(M)
      IF(MN.LE.0) GO TO 4300
C
      VOL       = VOLM(M)
      WRITE(IPRT,4301)
     1            M,VOL,HMINV(1,MN),IDMTYP(MTYP(M)+1),MTNAME(M)(1:4)
      WRITE(IPRT,4103) (DAYS (I),I=1,NOWSTP)
      WRITE(IPRT,4104) (EXPSZN(I,MN),I=1,NOWSTP)
      WRITE(IPRT,4302) (POWRZN(I,MN),I=1,NOWSTP-1)
      WRITE(IPRT,5307) (GAMAV (I,MN),I=1,NOWSTP-1)
      WRITE(IPRT,5308) (YDXE  (I,MN),I=1,NOWSTP-1)
      WRITE(IPRT,5309) (YDIO  (I,MN),I=1,NOWSTP-1)
      WRITE(IPRT,5310) (YDSM  (I,MN),I=1,NOWSTP-1)
      WRITE(IPRT,5311) (YDPM  (I,MN),I=1,NOWSTP-1)
      WRITE(IPRT,4305) (LINE        ,I=1,NLINE)   
      DO 4100 N = 1 , NTNUC
CM    WRITE(IPRT,4303) N,SRACID(N),(DNSITY(I,N,MN),I=1,NOWSTP)
      WRITE(IPRT,4303) N,IDNEW (N),(DNSITY(I,N,MN),I=1,NOWSTP)
 4100 CONTINUE
      WRITE(IPRT,4305) (LINE        ,I=1,NLINE)   
C
CKSK  WRITE(IPRT,5313) LAPSE,LAPSET
C
      IF(IBEDIT.GE.1) THEN
        WRITE(IPRT,'(/A)') ' MACRO FISSILE ABSORPTION XS BY GROUP'
        DO 4115 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(AFISSM(IG,NST,MN),IG=1,LAPSE)
 4115   CONTINUE
C
        WRITE(IPRT,'(/A)') ' MACRO FERTILE CAPTURE XS BY GROUP'
        DO 4120 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(CFERTM(IG,NST,MN),IG=1,LAPSE)
 4120   CONTINUE
C
        WRITE(IPRT,'(/A)') ' XE-135 EFFECTIVE MICRO. XS BY GROUP'
        DO 4130 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(SIGXE (IG,NST,MN),IG=1,LAPSE)
 4130   CONTINUE
C
        WRITE(IPRT,'(/A)') ' I-135  EFFECTIVE MICRO. XS BY GROUP'
        DO 4140 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(SIGIO (IG,NST,MN),IG=1,LAPSE)
 4140   CONTINUE
C
        WRITE(IPRT,'(/A)') ' SM-149 EFFECTIVE MICRO. XS BY GROUP'
        DO 4150 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(SIGSM (IG,NST,MN),IG=1,LAPSE)
 4150   CONTINUE
C
        WRITE(IPRT,'(/A)') ' PM-149 EFFECTIVE MICRO. XS BY GROUP'
        DO 4160 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(SIGPM (IG,NST,MN),IG=1,LAPSE)
 4160   CONTINUE
C
        WRITE(IPRT,'(/A)') ' FLUX (N/SEC/CM/CM)  BY GROUP'
        DO 4170 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(FLUXM (IG,NST,M ),IG=1,LAPSE)
 4170   CONTINUE
C
                      ENDIF
      IF(IBEDIT.LE.1) GO TO 4300
C
      WRITE(IPRT,4304) '  ++ MACROSCOPIC ABSORPTION CROSS SECTION'
     1                  ,' : SIGA(ID)/SIGA ++'
      WRITE(IPRT,4305)  (LINE ,I=1,NLINE)   
C
      CALL  CLEA (  SWORK , MXSTEP  , 0.0 )
      CALL  CLEA ( FPWORK , MXSTEP  , 0.0 )
C
      DO 4250 I = 1 , NOWSTP - 1
      DO 4230 N = 1 , NTNUC
      SWORK (I) = SWORK(I) + ABSMAT(I,N,MN )
 4230 CONTINUE
C
      IF(SWORK(I).LE.0.0)  SWORK(I) = 1.0000
      DO 4240 N = NTFISS+1 , LASTFP
      FPWORK(I) = FPWORK(I) + ABSMAT(I,N,MN )
 4240 CONTINUE
      FPWORK(I) = FPWORK(I) / SWORK(I)
 4250 CONTINUE
C
      DO 4260  N = 1 , NTNUC
CMOD  WRITE(IPRT,4303) N,SRACID(N),
      WRITE(IPRT,4303) N,IDNEW (N),
     1                  (ABSMAT(I,N,MN)/SWORK(I),I=1,NOWSTP-1)
 4260 CONTINUE
C
      WRITE(IPRT,4305)  (LINE,I=1,NLINE)   
      WRITE(IPRT,4306) '  FP  TOTAL  ',(FPWORK(I),I=1,NOWSTP-1)
C
 4300 CONTINUE
C
 4301 FORMAT(//,1X,'MATERIAL-NO.=',I3,
     1       3X,'VOLUME=',1PE12.5,' (CC)   WEIGHT=',1PE12.5,
     2       ' (TON/CC)   MATERIAL-TYPE IS ',A8,
     3       '     MATERIAL-NAME IS ',A4/)
C
 4302 FORMAT(' * POW(MW/CC) ',1P100E12.5:/(12X,1P100E12.5:))
C4303 FORMAT(1X,I4,1X,A4,2X,1P100E12.5:/(12X,1P100E12.5:))
C4303 FORMAT(1X,I4,1X,A6   ,1P100E12.5:/(12X,1P100E12.5:))
 4303 FORMAT(1X,I4,1X,A6,2X,1P100E12.5:/(12X,1P100E12.5:))
 4304 FORMAT(/A,A)
C4305 FORMAT(2(1X,4(1H-)),2X,40(1X,11(1H-)))
C4305 FORMAT(2(1X,4(1H-)),2X,100A12)
 4305 FORMAT(1X,4(1H-),1X,8(1H-),100A12)
C4306 FORMAT(A11,1X,1P100E12.5:/(12X,1P100E12.5:))
 4306 FORMAT(A,1X,1P100E12.5:/(12X,1P100E12.5:))
C
C4302 FORMAT(' POW (MW/CC)',1P10E12.5:/(12X,1P10E12.5:))
C4303 FORMAT(1X,I4,1X,A4,2X,1P10E12.5:/(12X,1P10E12.5:))
C4304 FORMAT(/A,A)
C4305 FORMAT(2(1X,4(1H-)),2X,10(1X,11(1H-)))
C4306 FORMAT(A11,1X,1P10E12.5:/(12X,1P10E12.5:))
C
C *** X-REGION-WIZE PRINT OUT
C
      DO 5300 M = 1 , NXR
      VOL       = VOLX(M)
      WRITE(IPRT,5301) M,VOL,HMINVX(1,M),IDMTYP(MTYPX(M)+1)
      WRITE(IPRT,5302) (DAYS (I),I=1,NOWSTP)
CMOD  WRITE(IPRT,5303) (EXPSX(I,M),I=1,NOWSTP)
      IF(MTYPX(M).EQ.2) THEN
      WRITE(IPRT,5303) (EXPSX(I,M),I=1,NOWSTP)
                        ELSE
      WRITE(IPRT,4104) (EXPSX(I,M),I=1,NOWSTP)
                        ENDIF
      WRITE(IPRT,5304) STDNUC(2:4),(U235FX(I,M),I=1,NOWSTP)
      WRITE(IPRT,5305) (POWRX(I,M),I=1,NOWSTP-1)
CM    WRITE(IPRT,5306) (HMINVX(I,M),I=1,NOWSTP)
      WRITE(IPRT,5306) (HMINVX(I,M)*VOL,I=1,NOWSTP)
      WRITE(IPRT,5307) (GAMAVX (I,M),I=1,NOWSTP-1)
      WRITE(IPRT,5308) (YDXEX (I,M),I=1,NOWSTP-1)
      WRITE(IPRT,5309) (YDIOX (I,M),I=1,NOWSTP-1)
      WRITE(IPRT,5310) (YDSMX (I,M),I=1,NOWSTP-1)
      WRITE(IPRT,5311) (YDPMX (I,M),I=1,NOWSTP-1)
      WRITE(IPRT,4305) (LINE       ,I=1,NLINE)   
      DO 5100 N = 1 , NTNUC
CMOD  WRITE(IPRT,5312) N,SRACID(N),(DENSX(I,N,M),I=1,NOWSTP)
      WRITE(IPRT,5312) N,IDNEW (N),(DENSX(I,N,M),I=1,NOWSTP)
 5100 CONTINUE
      WRITE(IPRT,4305) (LINE       ,I=1,NLINE)   
C
      IF(IBEDIT.GE.1) THEN
        WRITE(IPRT,5313) LAPSE,LAPSET
        WRITE(IPRT,'(/A)') ' MACRO FISSILE ABSORPTION XS BY GROUP'
        DO 5110 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(AFISSX(IG,NST,M),IG=1,LAPSE)
 5110   CONTINUE
C
        WRITE(IPRT,'(/A)') ' MACRO FERTILE CAPTURE XS BY GROUP'
        DO 5120 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(CFERTX(IG,NST,M),IG=1,LAPSE)
 5120   CONTINUE
C
        WRITE(IPRT,'(/A)') ' XE-135 EFFECTIVE MICRO. XS BY GROUP'
        DO 5130 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(SIGXEX(IG,NST,M),IG=1,LAPSE)
 5130   CONTINUE
C
        WRITE(IPRT,'(/A)') ' I-135  EFFECTIVE MICRO. XS BY GROUP'
        DO 5140 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(SIGIOX(IG,NST,M),IG=1,LAPSE)
 5140   CONTINUE
C
        WRITE(IPRT,'(/A)') ' SM-149 EFFECTIVE MICRO. XS BY GROUP'
        DO 5150 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(SIGSMX(IG,NST,M),IG=1,LAPSE)
 5150   CONTINUE
C
        WRITE(IPRT,'(/A)') ' PM-149 EFFECTIVE MICRO. XS BY GROUP'
        DO 5160 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(SIGPMX(IG,NST,M),IG=1,LAPSE)
 5160   CONTINUE
C
        WRITE(IPRT,'(/A)') ' FLUX (N/SEC/CM/CM)  BY GROUP'
        DO 5170 NST=1,NOWSTP-1
          WRITE(IPRT,5314) NST-1,(FLUXX (IG,NST,M ),IG=1,LAPSE)
 5170   CONTINUE
C
                      ENDIF
C
      IF(IBEDIT.LE.1) GO TO 5300
C
      WRITE(IPRT,4304) '  ++ MACROSCOPIC ABSORPTION CROSS SECTION'
     1                  ,' : SIGA(ID)/SIGA ++'
      WRITE(IPRT,4305) (LINE,I=1,NLINE)   
C
      CALL  CLEA (  SWORK , MXSTEP  , 0.0 )
      CALL  CLEA ( FPWORK , MXSTEP  , 0.0 )
C
      DO 5250 I = 1 , NOWSTP - 1
      DO 5230 N = 1 , NTNUC
      SWORK (I) = SWORK(I) + ABSXRG(I,N,M)
 5230 CONTINUE
C
      IF(SWORK(I).LE.0.0)  SWORK(I) = 1.0000
      DO 5240 N = NTFISS+1 , LASTFP
      FPWORK(I) = FPWORK(I) + ABSXRG(I,N,M )
 5240 CONTINUE
      FPWORK(I) = FPWORK(I) / SWORK(I)
 5250 CONTINUE
C
      DO 5260  N = 1 , NTNUC
CMOD  WRITE(IPRT,4303) N,SRACID(N),
      WRITE(IPRT,4303) N,IDNEW (N),
     1                  (ABSXRG(I,N,M)/SWORK(I),I=1,NOWSTP-1)
 5260 CONTINUE
C
      WRITE(IPRT,4305)  (LINE,I=1,NLINE)   
      WRITE(IPRT,4306) '  FP  TOTAL  ',(FPWORK(I),I=1,NOWSTP-1)
C
 5300 CONTINUE
C
 5301 FORMAT(//,1X,'X-REGION NO.=',I3,
     1       3X,'VOLUME=',1PE12.5,' (CC)   WEIGHT=',1PE12.5,
     2       ' (TON/CC)   MATERIAL-TYPE IS ',A8/)
 5313 FORMAT(/1X,'NUMBER OF ENERGY GROUP = ',I3,
     1           ' : NUMBER OF THERMAL ENERGY GROUP = ',I3/)
C
 5302 FORMAT(/' * DAYS       ',1P100E12.5:/(12X,1P100E12.5:))
 5303 FORMAT( ' * ABS./CC    ',1P100E12.5:/(12X,1P100E12.5:))
 5304 FORMAT( ' * ',A,'-%      ',T15,1P100E12.5:/(12X,1P100E12.5:))
 5305 FORMAT( ' * POW(MW/CC) ',1P100E12.5:/(12X,1P100E12.5:))
 5306 FORMAT( ' * TON-HM     ',1P100E12.5:/(12X,1P100E12.5:))
 5307 FORMAT( ' * ENRGY/FIS. ',1P100E12.5:/(12X,1P100E12.5:))
 5308 FORMAT( ' * XE-135-YD. ',1P100E12.5:/(12X,1P100E12.5:))
 5309 FORMAT( ' *  I-135-YD. ',1P100E12.5:/(12X,1P100E12.5:))
 5310 FORMAT( ' * SM-149-YD. ',1P100E12.5:/(12X,1P100E12.5:))
 5311 FORMAT( ' * PM-149-YD. ',1P100E12.5:/(12X,1P100E12.5:))
C5312 FORMAT(1X,I4,1X,A4,2X,1P100E12.5:/(12X,1P100E12.5:))
C5312 FORMAT(1X,I4,1X,A6   ,1P100E12.5:/(12X,1P100E12.5:))
 5312 FORMAT(1X,I4,1X,A6,2X,1P100E12.5:/(12X,1P100E12.5:))
C5314 FORMAT(1X,'NSTEP-1:',I2,1X,1P100E12.5:/(12X,1P100E12.5))
 5314 FORMAT(1X,'NSTEP-1: ',I3,1X,1P100E12.5:/(12X,1P100E12.5))
C
C
C5302 FORMAT(/' DAYS       ',1P10E12.5:/(12X,1P10E12.5:))
C5303 FORMAT(' ABS./CC    ',1P10E12.5:/(12X,1P10E12.5:))
C5304 FORMAT(' ',A3,'-%      ',1P10E12.5:/(12X,1P10E12.5:))
C5305 FORMAT(' POW (MW/CC)',1P10E12.5:/(12X,1P10E12.5:))
C5306 FORMAT(' TON-HM     ',1P10E12.5:/(12X,1P10E12.5:))
C5307 FORMAT(' ENERGY/FIS.',1P10E12.5:/(12X,1P10E12.5:))
C5308 FORMAT(' XE-135 YD. ',1P10E12.5:/(12X,1P10E12.5:))
C5309 FORMAT('  I-135 YD. ',1P10E12.5:/(12X,1P10E12.5:))
C5310 FORMAT(' SM-149 YD. ',1P10E12.5:/(12X,1P10E12.5:))
C5311 FORMAT(' PM-149 YD. ',1P10E12.5:/(12X,1P10E12.5:))
C5312 FORMAT(1X,I4,1X,A4,2X,1P10E12.5:/(12X,1P10E12.5:))
C5314   FORMAT(1X,'NSTEP-1:',I2,1X,1P10E12.5:/(12X,1P10E12.5))
C
C ***   END OF PROCESS ****
C
        RETURN
        END

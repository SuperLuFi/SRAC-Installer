C-----------------------------------------------------------------------
C     MAIN PROGRAM TO
C     CONVERT PDS TO TEXT FOR SRAC95-UNIX
C     OUTPUT TEXT FORMAT :
C      (1) FIRST LINE IS COMMENT
C      (2) COMMAND LINE FORMAT IS AS FOLLOWING:
C          *PUT  'MENBER'  N  'LENG'
C      (3) DATA FORMAT (12A=1PE12.5) FOR FLOATING NUMBER
C      (4) DATA FORMAT (12A=1X,I7,1X) FOR INTEGER NUMBER
C      (5) DATA FORMAT (12A=1X,A4,7X) FOR CHARACTER DATA
C      (6) 1-6 DATA(FLOATING OR INTEGER OR CHARACTER) IN A LINE
C      (7) FLOATING NUMBER ALWAYS INCLUDE '.' IN A DATA(A12)
C      (8) DATA LENGTH OF A MEMBER =< 999999(I6)
C
C      SAMPLE :
C      COMMENT(1 LINE)
C      *PUT CU050000 N      9
C                0           0  1.00000E-01.........
C                1 -2.00000E-04        125 .........
C      *PUT MU050000 N     14
C       1.00000E+02 2.00000E-02-3.00000E-04.........
C       1.00000E+02 2.00000E-02-3.00000E-04.........
C      -1.00000E+02 2.00000E-02
C      ...........
C      ...........
C      *FIN
C
C   SPECIAL TREATMENT WILL BE DONE TO TREAT CHARACTER DATA FOR THE
C   MEMBERS : ----DN-T IN MACRO/MACROWRK
C             ----BNUP IN MACRO/MACROWRK
C             ----REST IN MACRO/MACROWRK
C-----------------------------------------------------------------------
C     TO EXECUTE THIS PROGRAM, USER MUST PREPARE MEMBER LIST FILE
C     WHICH CONTAIN LIST OF MEMBERS IN THE PDS FILE
C     THE MEMBER LIST FILE CAN EASILY GENERATED BY UNIX COMMAND
C         ALIAS LS LS
C         LS -C > MLIST.DAT
C         CAT MLIST.DAT
C         CU050000   CU08000   CPU00000   CPU10000  CPU20000
C         CPU90000   CAM1000
C     FORMAT OF MEMBER LIST IS FREE, BUT LENGTH OF MEMBER NAME MUST
C     BE LESS OR EQUAL 8, MEMBER NAME MUST BE DIVIDED BY SOME BLANKS,
C     MEMBER LIST MUST BE WRITTEN WITH IN 255 COLUMNS.
C-----------------------------------------------------------------------
      PARAMETER (MAXWK=300000)
      PARAMETER (MAXME=4000)
      CHARACTER LINE*72,MEMBER*8,DIRNAM*72,MEMNAM*8,CMD*4,TYPE*1,ALENG*6
      DIMENSION WORK(MAXWK)
      DIMENSION DATA(6)
      DIMENSION MEMNAM(MAXME)
      COMMON /SETDT/ NTNUC1,NTNUC2,NZON2,NZON3
C
C----- IO DEVICE
C     IOTXT : TEXT PDS (WRITE)
C     IOMLS : MEMBER LIST (READ)
C      IOUT : STANDARD OUTPUT (WRITE)
C       49  : DEVICE FOR PDS MEMBER, INTERNALLY OPENED AND CLOSED (READ)
C        5  : STANDARD INPUT FOR DIRECTORY NAME OF PDS FILE
C
      CALL UIOSET
      IOTXT = 10
      IOMLS = 11
      IOUT  = 6
C
      NRED = 0
      CMD  = '*PUT'
      TYPE = 'N'
C********************
C  READ INPUT DATA  *
C********************
C     DIRNAM : FULL NAME OF DIRECTORY FOR PDS
C     EX:/DG05/UFS02/J9347/SRAC95/LIB/PDS/PFAST/PFASTJ2
      READ(5,'(A72)') DIRNAM
      IF(DIRNAM(1:1).EQ.' ') THEN
        WRITE(6,*) ' ERROR(MAIN) : DIRECTORY NAME IS INVALID'
        WRITE(6,*) ' THE FIRST COLUMN SHOULD BE NON-BLANK'
        WRITE(6,*) ' DIRNAM = ',DIRNAM
        STOP
      ENDIF
C************************
C  WRITE HEADER IN TEXT *
C************************
      REWIND IOTXT
      LINE = '  3        PDSEDT INPUT R/W MODE  '
      WRITE(IOTXT,'(A72)') LINE
C********************
C  READ MEMBER LIST *
C********************
      CALL MEMLST(IOMLS,NMEM,MEMNAM)
      IF(NMEM.GT.MAXME) THEN
        WRITE(6,*) ' ERROR (MAIN) : MAX OF MEMBER(MAXME=',MAXME,
     &             ') IS LESS THAN REQUIRED SIZE(=',NMEM
        STOP
      ENDIF
C********************
C  LOOP ON MEMBER   *
C********************
      DO 1000 M=1,NMEM
        MEMBER = MEMNAM(M)
        NTNUC1 = 0
        NTNUC2 = 0
        NZON2  = 0
        NZON3  = 0
C***************************
C  READ CONTENTS OF MEMBER *
C***************************
        CALL PDSIN(DIRNAM,MEMBER,WORK,LENG,IRC,IOUT)
        IF(IRC.NE.0) THEN
          WRITE(6,*) ' PDS ERROR : ERROR CODE = ',IRC
          WRITE(6,*) ' MEMBER = ',MEMBER
          STOP
        ELSE
          NRED = NRED+1
        ENDIF
        IF(LENG.GT.MAXWK) THEN
          WRITE(6,*) ' ERROR (MAIN) : WORK AREA(MAXWK=',MAXWK,
     &             ') IS LESS THAN REQUIRED SIZE(=',LENG,' IN MEMBER:',
     &             MEMBER
          STOP
        ENDIF
C*****************
C  WRITE IN TEXT *
C*****************
C----- WRITE MEMBER NAME AND LENGTH
        WRITE(ALENG,'(I6)') LENG
        LINE = CMD//' '//MEMBER//' '//TYPE//' '//ALENG
        WRITE(IOTXT,'(A72)') LINE
C----- SET NUMBER OF LINES TO WRITE IN TEXT FOR DATA OF A MEMBER
        CALL TXTLIN(LENG,LDATA)
C----- SET LINE DATA AND WRITE IN TEXT
        DO 100 L=1,LDATA
          KPOS = (L-1)*6+1
          IF(L.NE.LDATA) THEN
            LD = 6
          ELSE
            LD = LENG - 6*(LDATA-1)
          ENDIF
          DO 110 I=1,LD
            IPOS = 6*(L-1)+I
            DATA(I) = WORK(IPOS)
  110     CONTINUE
          IF(MEMBER(5:6).EQ.'DN' .AND. MEMBER(8:8).EQ.'T') THEN
            CALL SETLI1(LINE,LD,DATA,KPOS)
          ELSEIF(MEMBER(5:8).EQ.'BNUP') THEN
            CALL SETLI2(LINE,LD,DATA,KPOS)
          ELSEIF(MEMBER(5:8).EQ.'REST') THEN
            CALL SETLI3(LINE,LD,DATA,KPOS)
          ELSE
            CALL SETLIN(LINE,LD,DATA)
          ENDIF
          WRITE(IOTXT,'(A72)') LINE
  100   CONTINUE
C
 1000 CONTINUE
C***********
C  FINISH  *
C***********
      LINE = '*FIN'
      WRITE(IOTXT,'(A72)') LINE
      WRITE(IOUT,*)
      WRITE(IOUT,*) ' NUMBER OF MEMBERS READ FROM PDS=',NRED
      WRITE(IOUT,*) ' ********** JOB END **********'
      STOP
      END
C***********************************************************************
C
C  UIOUNT   : SET UNFORMATED(0) OR FORMATED(1)
C             FOR EACH I/O DEVICE
C
C***********************************************************************
C
      SUBROUTINE UIOUNT(IOFORM)
      DIMENSION IOFORM(100)
      DO 100 I=1,100
        IOFORM(I) = -1
  100 CONTINUE
      IOFORM(5)  = 1
      IOFORM(6)  = 1
      IOFORM(10) = 1
      IOFORM(11) = 1
      RETURN
      END

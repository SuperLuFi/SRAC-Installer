C **********************************************************************
                      SUBROUTINE OUTER
C **********************************************************************
     & ( Q,CHIA,FISSA,IDCS,IDX,IDY,C,FLUX,QQ,A3,YH,SIN,
     1QG,FG,SS,SOUT,ABG,ABT,IDYA,FISS,NM,IT,JT,IHM,MT,IM,JM,WMU,WETA,
     2QR1,QR2,QT1,QT2,MM,AAJ,QB1,QB2,A4,A5,CTOT,XDF,YDF )
C
      COMMON /TW1C/ DD(1),LIM1,IA(210)
      COMMON /WORK/AAA(1),LIM2,AA(130)
      DIMENSION D(212),A(132)
      EQUIVALENCE (D(1),DD(1)),(AAA(1),A(1))
      EQUIVALENCE (D(107),IGCDMP),(D(110),IPFL),(D(112),IPFX),
     1(D(120),IPQS),(D(108),IPSO),(D(115),IPXS),
     2(D(113),LTFX),(D(132),LTHAF),(D(111),LTFL),(D(118),LTOXS),
     3(D(121),LTQS),(D(109),LTSO),(D(133),LTVAF),(D(117),LTXS),
     4(D(114),LXFX),(D(158),NAFLUX),(D(159),NDUMP1),(D(157),NOUT),
     5(D(137),TIMOFF),(D(135),TIMBDP),(D(136),TIMSLD)
C
      DIMENSION Q(NM,IT,JT),CHIA(1),FISSA(IT,JT),IDX(1),IDY(1),IDCS(1),
     1C(IHM,MT),FLUX(NM,IT,JT),QQ(IM,JM),A3(1),YH(1),SIN(1),QG(1),FG(1),
     2SS(1),SOUT(1),ABG(1),ABT(1),IDYA(1),FISS(IT,JT),WMU(1),WETA(1),
     3QR1(JT,MM),QR2(JT,MM),QT1(IT,MM),QT2(IT,MM),AAJ(1),QB1(IT,MM),
     4QB2(IT,MM),A4(1),A5(1),CTOT(IT,JT),XDF(1),YDF(1)
      DIMENSION NA(1)
      DIMENSION IDMP01(4), IDMP02(4)
C
C     MATERIAL MESH INDEXING
C
CKSK  EQUIVALENCE (NA(1), D(1))
      EQUIVALENCE (NA(1), DD(1))
      EQUIVALENCE (D(177),LDXC),(D(178),LDYC)
C
      INTEGER G,PBAR
C
      EQUIVALENCE (IA(1),ITH),(IA(4),IGM),(IA(11),IEVT),(IA(16),IHT),
     1(IA(17),IHS),(IA(21),IQB),(IA(33),IQR),(IA(34),IQT),(IA(37),EV),
     2(IA(50),BHGT),(IA(52),IHF),(IA(53),IHA),(IA(55),IHNN),
     3(IA(56),IMJM),(IA(59),NMQ),(IA(60),IP),(IA(61),JP),(IA(66),ITJT),
     4(IA(71),ISPANC),(IA(73),ISPANF),(IA(74),ISCP),(IA(75),IMJP),
     5(IA(76),IPJM),(IA(77),ITP),(A(61),LC),(A(62),LA1),(A(63),LA2),
     6(A(64),LA3),(A(67),LQ),(A(72),LBR1),(A(73),LBR2),(A(74),LBT1),
     7(A(75),LBT2),(A(76),LFL),(D(180),LFLA),(D(188),LCM),(D(189),LCE),
     8(D(198),LF),(A(122),LFU),(A(82),LFD),(A(83),LFR),(A(84),LFLL),
     9(A(85),LAB)
      EQUIVALENCE (IA(26),IITL),(A(88),LFUT),(A(89),LFDT),(A(90),LFRT),
     1(A(91),LFLT),(A(100),LHL),(A(101),LVL),(A(102),LTL),(A(103),LNL),
     2(A(104),LRL),(A(106),LBAL),(A(109),LVEL),(A(113),LB1),
     3  (A(114),LAL1),(A(115),LAL2),(A(116),LALF),(A(8),JCONV),(A(9),TN2
     4N),(A(20),IITNO),(A(21),TS),(A(22),G),(A(23),ICONV),(A(27),IITOT),
     5(D(83),NN),(A(47),ERR)
      EQUIVALENCE (IA(23),IPVT),(IA(39),PV),(D(181),LDC),(D(184),LDX),
     1(D(185),LDY),(D(186),LDYA),(A(80),LYH),(D(187),LW),(D(190),LWM),
     2(A(81),LWE),(D(191),LP1),(D(192),LP2),(D(193),LP3),(D(194),LP4),
     3(A(86),LQQ),(A(110),LSOU),(A(29),TIN),(A(50),TIMACC),(IA(78),JTP),
     4(A(111),LANF)
C
      CHARACTER*8 IDMP01,IDMP02
C
CKSK  DATA IDMP01/8H*TIME LI,8HMIT*DUMP,8H TAKEN O,8HN UNIT  /
      DATA IDMP01/ '*TIME LI','MIT*DUMP',' TAKEN O','N UNIT  '/
CKSK  DATA IDMP02/8H*PERIODI,8HC*DUMP T,8HAKEN ON ,8HUNIT    /
      DATA IDMP02/ '*PERIODI','C*DUMP T','AKEN ON ','UNIT    '/
C
      IF (IGCDMP.EQ.0) GO TO 100
C
C     A RESTART DUMP HAS BEEN LOADED
C
      G=IGCDMP
      IGCDMP=0
      IF (G.NE.1) GO TO 110
C
C     INITALIZE FOR FIRST GROUP
C
  100 CONTINUE
      IITOT=0
      G=1
      CALL CLEARW(0.0,ABT,IMJM)
C     OBTAIN STARTING TIME
  110 CALL SECOND (TOUT)
C
C     BEGINNING OF GROUP LOOP
C
  120 CONTINUE
C
C     CHECK TO SEE IF TIME LIMIT DUMP REQUIRED
C
      IF (TIMOFF.EQ.0.0) GO TO 130
      IF (TIMOFF+TIN.GT.TOUT) GO TO 130
C     TIME LIMIT EXCEEDED
      ITEMP=1
      GO TO 140
C
C     CHECK TO SEE IF PERIODIC DUMP REQUIRED
C
  130 IF (TIMBDP.EQ.0.0) GO TO 160
      IF (TIMBDP+TIMSLD.GT.TOUT) GO TO 160
C     PERIODIC DUMP IS REQUIRED
      TIMSLD=TOUT
      ITEMP=0
  140 IGCDMP=G
      TIME=TIMACC
      TIMACC=TOUT-TIN+TIMACC
      IOP=0
      IF (JCONV.EQ.2) IOP=IGCDMP-1
C
C     TAKE DUMP
C
      CALL DUMPER (NDUMP1,IOP)
      IGCDMP=0
C     RESTORE TIME
      TIMACC=TIME
      IF (ITEMP.EQ.0) GO TO 150
C     TIME LIMIT DUMP TAKEN---RETURN
      CALL ERROR (5,IDMP01,4)
      IGCDMP=G
      RETURN
C     PERIODIC DUMP TAKEN
  150 CONTINUE
      CALL ERROR (5,IDMP02,4)
  160 CONTINUE
C
C     CALCULATE SOURCE TO GROUP
C          1. READ CROSS SECTIONS, GEOMETRIC FUNCTIONS AND
C             SOURCES, IF ANY
C
      IF (IEVT.EQ.0) CALL REED (0,IPQS+(G-1)*LTQS,Q,LTQS,1)
      CALL REED (0,IPXS+(G-1)*LTXS,C,LTXS,1)
C
C          2.ZERO THE APPROPRIATE PORTION OF THE SOURCE ARRAY
C
      IF ((IEVT.EQ.0).AND.(NMQ.EQ.NM)) GO TO 180
      NT=NMQ+1
      IF (IEVT.GT.0) NT=1
      DO 170 J=1,JT
      DO 170 I=1,IT
      DO 170 N=NT,NM
  170 Q(N,I,J)=0.0
C
C          3. ADD CONTRIBUTION FROM FISSION
C
  180 IF (ITH.GT.0) GO TO 200
      DO 190 J=1,JT
      DO 190 I=1,IT
  190 Q(1,I,J)=Q(1,I,J)+CHIA(G)*FISSA(I,J)
      GO TO 220
  200 DO 210 J=1,JT
      DO 210 I=1,IT
      IZ=NA(LDXC+I-1)+NA(LDYC+J-1)
      IC=IABS(IDCS(IZ))
  210 Q(1,I,J)=Q(1,I,J)+C(IHF,IC)*XDF(I)*YDF(J)*FISSA(I,J)
C
C          4. CALCULATE SCATTERING SOURCE
C
  220 CONTINUE
      PBAR=IHT+1
  230 CONTINUE
      IFWB=G+IHS-PBAR
      IF (IFWB.LT.1) GO TO 270
      IF (IFWB.EQ.G) GO TO 270
      IF (IFWB.GT.IGM) GO TO 270
CKSK  CALL REED (0,IPFX+(IFWB-1)*LTFX,A(LFL),LXFX,1)
      CALL REED (0,IPFX+(IFWB-1)*LTFX,AAA(LFL),LXFX,1)
      DO 260 J=1,JT
      DO 260 I=1,IT
      IZ=NA(LDXC+I-1)+NA(LDYC+J-1)
      IC=IDCS(IZ)
      IF (IC.LT.0) GO TO 240
      Q(1,I,J)=Q(1,I,J)+C(PBAR,IC)*XDF(I)*YDF(J)*FLUX(1,I,J)
      GO TO 260
  240 K=1
      DO 250 N=1,ISCP
      T=(2*N-1)*C(PBAR,N-1-IC)*XDF(I)*YDF(J)
      DO 250 L=1,N
      Q(K,I,J)=Q(K,I,J)+T*FLUX(K,I,J)
  250 K=K+1
  260 CONTINUE
  270 CONTINUE
      PBAR=PBAR+1
      IF (PBAR.LE.IHM) GO TO 230
C
C     SOURCE TO GROUP IS NOW CALCULATED, READ OLD FLUX ARRAYS
C
CKSK  CALL REED (0,IPFX+(G-1)*LTFX,A(LFL),LTFX,1)
      CALL REED (0,IPFX+(G-1)*LTFX,AAA(LFL),LTFX,1)
C
C     CALCULATE TOTAL COARSE MESH SOURCE TO GROUP FOR REBALANCE
C
      CALL CLEARW(0.0,QQ,IMJM)
      DO 280 JA=1,JT
      J=IDYA(JA)
      DO 280 IB=1,IT
      I=IDX(IB)
  280 QQ(I,J)=QQ(I,J)+Q(1,IB,JA)*A5(IB)*YH(JA)
C
C     ADD BOUNDARY SOURCE TO QQ
C
      IF (IQR.EQ.0) GO TO 300
      DO 290 J=1,JT
      K=IDYA(J)
      DO 290 M=1,MM
  290 QQ(IM,K)=QQ(IM,K)+WMU(M)*YH(J)*(QR1(J,M)+QR2(J,M))*A4(ITP)
  300 IF (IQB.EQ.0) GO TO 320
      DO 310 I=1,IT
      K=IDX(I)
      DO 310 M=1,MM
  310 QQ(K,1)=QQ(K,1)+WETA(M)*(QB1(I,M)+QB2(I,M))*A3(I)
  320 IF (IQT.EQ.0) GO TO 340
      DO 330 I=1,IT
      K=IDX(I)
      DO 330 M=1,MM
  330 QQ(K,JM)=QQ(K,JM)+WETA(M)*(QT1(I,M)+QT2(I,M))*A3(I)
  340 CONTINUE
C
C     CALCULATE TOTAL INTEGRATED SOURCE TO GROUP
C
      TS=0.0
      DO 350 J=1,JM
      DO 350 I=1,IM
  350 TS=TS+QQ(I,J)
C
C     GENERATE INSCATTER FOR GROUP
C
      SIN(G)=TS-FG(G)-QG(G)
      IITNO=0
      IF (TS.LE.0.) GO TO 360
C
C     STORE SOURCE TO GROUP
C
      CALL RITE (0,IPSO,Q,LTSO,1)
C
C     PERFORM INNER ITERATION
C
CKSK  CALL INNER ( C,Q,FLUX,A(LBR1),A(LBR2),A(LBT1),A(LBT2),D(LFLA),
CKSK 1D(LCM),D(LCE),A(LAL1),A(LAL2),A(LALF),A(LB1),D(LF),A(LAB),A(LFU),
CKSK 2A(LFD),A(LFR),A(LFLL),A(LQQ),A(LWE),D(LWM),D(LW),D(LP1),D(LP2),
CKSK 3D(LP3),D(LP4),A(LA1),A(LA2),A(LA3),A4,A5,D(LDX),D(LDY),D(LDYA),
CKSK 4D(LDC),NN,A(LYH),A(LSOU),CTOT,XDF,YDF,IHM,MT,NM,IT,JT,MM,IM,JM,IP,
CKSK 5JP )
      CALL INNER ( C,Q,FLUX,AAA(LBR1),AAA(LBR2),AAA(LBT1),AAA(LBT2),
     &DD(LFLA),DD(LCM),DD(LCE),AAA(LAL1),AAA(LAL2),AAA(LALF),AAA(LB1),
     &DD(LF),AAA(LAB),AAA(LFU),AAA(LFD),AAA(LFR),AAA(LFLL),AAA(LQQ),
     &AAA(LWE),DD(LWM),DD(LW),DD(LP1),DD(LP2),DD(LP3),DD(LP4),AAA(LA1),
     &AAA(LA2),AAA(LA3),A4,A5,DD(LDX),DD(LDY),DD(LDYA),DD(LDC),NN,
     &AAA(LYH),AAA(LSOU),CTOT,XDF,YDF,IHM,MT,NM,IT,JT,MM,IM,JM,IP,JP )
C
C     BUMP ITERATION COUNT
C
      IITOT=IITOT+IITNO
      GO TO 380
C
C     NO SOURCE IN GROUP - ZERO ALL FLUXES AND PART OF SYSTEM BALANCE
C     TABLE - REMAINDER ZEROED IN GSUMS
C
  360 DO 370 I=LFL,ISPANF
CK370 A(I)=0.0
  370 AAA(I)=0.0
      SIN(G)=0.0
      SS(G)=0.0
      ABG(G)=0.0
      SOUT(G)=0.0
CKSK  CALL CLEARW(0.0,A(LFUT),LTFL)
      CALL CLEARW(0.0,AAA(LFUT),LTFL)
      IF ( JCONV .NE. 2 ) GO TO 380
C
C     WRITE ZERO ANGULAR FLUX ON NAFLUX
C
CKSK  CALL CLEARW( 0.0, A(LBT1), LTVAF )
      CALL CLEARW( 0.0, AAA(LBT1), LTVAF )
CKSK  CALL CLEARW( 0.0, A(LANF), LTHAF )
      CALL CLEARW( 0.0, AAA(LANF), LTHAF )
      IF ( G .EQ. 1 ) CALL REED ( NAFLUX, 0, 0.0, 0, 4 )
      DO 371 J = 1, JTP
CKSK  CALL RITE ( NAFLUX, 0, A(LBT1), LTVAF, 2 )
      CALL RITE ( NAFLUX, 0, AAA(LBT1), LTVAF, 2 )
CKSK  CALL RITE ( NAFLUX, 0, A(LBT1), LTVAF, 2 )
      CALL RITE ( NAFLUX, 0, AAA(LBT1), LTVAF, 2 )
  371 CONTINUE
      DO 372 J = 1, JT
CKSK  CALL RITE ( NAFLUX, 0, A(LANF), LTHAF, 2 )
      CALL RITE ( NAFLUX, 0, AAA(LANF), LTHAF, 2 )
CKSK  CALL RITE ( NAFLUX, 0, A(LANF), LTHAF, 2 )
      CALL RITE ( NAFLUX, 0, AAA(LANF), LTHAF, 2 )
  372 CONTINUE
  380 CONTINUE
C
C     STORE NEW FLUX ARRAYS
C
CKSK  CALL RITE (0,IPFX+(G-1)*LTFX,A(LFL),LTFX,1)
      CALL RITE (0,IPFX+(G-1)*LTFX,AAA(LFL),LTFX,1)
C
C     STORE COARSE MESH FLOWS FOR OVER ALL GROUPS REBALANCE
C
CKSK  CALL RITE (0,IPFL+(G-1)*LTFL,A(LFUT),LTFL,1)
      CALL RITE (0,IPFL+(G-1)*LTFL,AAA(LFUT),LTFL,1)
C
C     IF NO SOURCE IN GROUP GO DIRECTLY TO GSUMS
C
      IF (TS.LE.0.0) GO TO 400
C
C     GROUP SUMS    FG IS CALCULATED IN FISCAL,QG IN READQF
C     VOLUME INTEGRAL OF IN, SELF AND OUT-SCATTERING,
C     ABSORPTION,LEAKAGES AND SOURCES. ACCUMULATION OF COARSE
C     MESH PARTIAL CURRENTS AND ABSORPTION OVER GROUPS
C
      SS(G)=0.0
      ABG(G)=0.
      SOUT(G)=0.
      TN2N=0.
      DO 390 J=1,JT
      DO 390 I=1,IT
      IB=IDX(I)
      IZ=NA(LDXC+I-1)+NA(LDYC+J-1)
      IC=IABS(IDCS(IZ))
      DEN=XDF(I)*YDF(J)
      FV=FLUX(1,I,J)*A5(I)*YH(J)
      IF (IHT.GE.5) TN2N=TN2N+FV*DEN*C(IHNN,IC)
      TA=0.0
      IF (BHGT.GT.0.0)
     @TA=((1.8138/(BHGT*C(IHT-3,IC)*DEN+1.4209))**2)*C(IHT-3,IC)*DEN
C
C     EXTRAPOLATION DISTANCE OMITTED
C
      IF (BHGT.LT.0.0)
     @TA=((1.8138/(BHGT*C(IHT-3,IC)*DEN))**2)*C(IHT-3,IC)*DEN
CKSK  IF (IEVT.EQ.2) TA=TA+EV/A(LVEL+G-1)
      IF (IEVT.EQ.2) TA=TA+EV/AAA(LVEL+G-1)
CKSK  IF (IPVT.EQ.2) TA=TA+PV/A(LVEL+G-1)
      IF (IPVT.EQ.2) TA=TA+PV/AAA(LVEL+G-1)
      T=AAJ(IC)*DEN
      IZ=IDX(I)+IDY(J)
      ABT(IZ)=ABT(IZ)+FV*(T+TA)
      ABG(G)=ABG(G)+FV*(C(IHA,IC)*DEN+TA)
      SS(G)=SS(G)+FV*C(IHS,IC)*DEN
  390 SOUT(G)=SOUT(G)+FV*(C(IHT,IC)*DEN+TA)
CK400 CALL GSUMS ( QG,FG,SIN,SS,SOUT,A(LHL),A(LRL),A(LVL),A(LTL),A(LNL),
CKSK 1ABG,A(LBAL),A(LFU),A(LFD),A(LFR),A(LFLL),A(LFUT),A(LFDT),A(LFRT),
CKSK 2A(LFLT),IM,JM,IP,JP )
  400 CALL GSUMS ( QG,FG,SIN,SS,SOUT,AAA(LHL),AAA(LRL),AAA(LVL),
     &AAA(LTL),AAA(LNL),ABG,AAA(LBAL),AAA(LFU),AAA(LFD),AAA(LFR),
     &AAA(LFLL),AAA(LFUT),AAA(LFDT),AAA(LFRT),AAA(LFLT),IM,JM,IP,JP )
C
C     CALCULATE TIME REQUIRED FOR GROUP COMPUTATION
C
      TIME=TOUT
      CALL SECOND (TOUT)
      TIME=(TOUT-TIME)/60.0
      IF (JCONV.GT.0) GO TO 410
C
C     MONITOR OF CONVERGENCE INFORMATION
C
      IF (IITNO.LE.IITL) WRITE (NOUT,500)TIME,G,IITNO
      IF (IITNO.GT.IITL) WRITE (NOUT,500)TIME,G,IITNO,ERR
  410 G=G+1
C
C     END OF THE GROUP LOOP
C
      IF (G.LE.IGM) GO TO 120
C
C     GENERATE NEW FISSIONS AND COARSE MESH FLOW TOTALS
C
      CALL CLEARW(0.0,FISSA,ITJT)
CKSK  CALL CLEARW(0.0,D(LF),IMJP)
      CALL CLEARW(0.0,DD(LF),IMJP)
CKSK  CALL CLEARW(0.0,A(LQQ),IMJP)
      CALL CLEARW(0.0,AAA(LQQ),IMJP)
CKSK  CALL CLEARW(0.0,A(LQ),IPJM)
      CALL CLEARW(0.0,AAA(LQ),IPJM)
CKSK  CALL CLEARW(0.0,D(LFLA),IPJM)
      CALL CLEARW(0.0,DD(LFLA),IPJM)
      DO 470 G=1,IGM
C
C     ACCUMULATE COARSE MESH TOTAL FLOWS
C
CKSK  CALL REED (0,IPFL+(G-1)*LTFL,A(LFUT),LTFL,1)
      CALL REED (0,IPFL+(G-1)*LTFL,AAA(LFUT),LTFL,1)
      DO 420 I=1,IMJP
CKSK  D(LF+I-1)=D(LF+I-1)+A(LFDT+I-1)
      DD(LF+I-1)=DD(LF+I-1)+AAA(LFDT+I-1)
CK420 A(LQQ+I-1)=A(LQQ+I-1)+A(LFUT+I-1)
  420 AAA(LQQ+I-1)=AAA(LQQ+I-1)+AAA(LFUT+I-1)
      DO 430 I=1,IPJM
CKSK  A(LQ+I-1)=A(LQ+I-1)+A(LFRT+I-1)
      AAA(LQ+I-1)=AAA(LQ+I-1)+AAA(LFRT+I-1)
CK430 D(LFLA+I-1)=D(LFLA+I-1)+A(LFLT+I-1)
  430 DD(LFLA+I-1)=DD(LFLA+I-1)+AAA(LFLT+I-1)
C
C     FISSIONS
C
CKSK  CALL REED (0,IPFX+(G-1)*LTFX,A(LFL),LXFX,1)
      CALL REED (0,IPFX+(G-1)*LTFX,AAA(LFL),LXFX,1)
      CALL REED (0,IPXS+(G-1)*LTXS,C,LTOXS,1)
      IF (ITH.GT.0) GO TO 450
      DO 440 J=1,JT
      DO 440 I=1,IT
      IZ=NA(LDXC+I-1)+NA(LDYC+J-1)
      IC=IABS(IDCS(IZ))
  440 FISSA(I,J)=FISSA(I,J)+C(IHF,IC)*XDF(I)*YDF(J)*FLUX(1,I,J)
      GO TO 470
  450 DO 460 J=1,JT
      DO 460 I=1,IT
  460 FISSA(I,J)=FISSA(I,J)+CHIA(G)*FLUX(1,I,J)
  470 CONTINUE
C
C     RELOCATE COARSE MESH TOTAL FLOWS
C
      DO 480 I=1,IMJP
CKSK  A(LFDT+I-1)=D(LF+I-1)
      AAA(LFDT+I-1)=DD(LF+I-1)
CK480 A(LFUT+I-1)=A(LQQ+I-1)
  480 AAA(LFUT+I-1)=AAA(LQQ+I-1)
      DO 490 I=1,IPJM
CKSK  A(LFRT+I-1)=A(LQ+I-1)
      AAA(LFRT+I-1)=AAA(LQ+I-1)
CK490 A(LFLT+I-1)=D(LFLA+I-1)
  490 AAA(LFLT+I-1)=DD(LFLA+I-1)
      RETURN
C
C
  500 FORMAT (3X,1PE9.2,15X,I3,I4,E9.2)
      END

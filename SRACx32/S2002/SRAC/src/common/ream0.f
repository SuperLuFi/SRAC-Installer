C
C =====================================================================
C    REAM0 : REALLY WORKING ROUTINE UNDER REAG,REAI & REAM.
C =====================================================================
C
      SUBROUTINE REAM0(ROUTE, AV, IV, V,  NCA, NCI, NCR )
C
      IMPLICIT REAL*8 (D)
C
      CHARACTER*4 ROUTE
      CHARACTER*4 AV(*)
      INTEGER     IV(*)
      REAL        V(*)
C
C  ... LOCAL DATA ...
C
      PARAMETER ( MXCOL = 72 )
      CHARACTER*80 LINE
      CHARACTER*32 TEMP
C
C
C    LINE : INPUT BUFFER TO STORE A LINE FROM STANDARD INPUT (UNIT IIN)
C           ( LINE(MXCOL+1:MXCOL+1) IS ASSUMED AS BLANK ALWAYS )
C    IPOS : CURRENT POSITION IN INPUT BUFFER.
C    NCHAR : NUMBER OF EFFECTIVE CHARACTERS IN BUFFER.
C
C    TEMP : TEMPORARY AREA FOR INTERNAL READ OPERATION.
C
C    NREP : NUMBER OF REPETETION IN N( ... ) TYPE INPUT. ( > 0 )
C           OR NUMBER OF DATA GENERATED BY ADDITION ( < 0 )
C    IREP : COUNTER OF REPEATED DATA.
C
C
C -------------------------------------------------------------------
C  ... INPUT CHARACTER , INTEGER & REAL DATA IN THIS ORDER ...
C
C
C
CKSK
CMOD  PARAMETER ( IIN = 5, IPR = 6 )
CMOD  PARAMETER ( IIN =95, IPR = 6 )
      COMMON /REAMIO/ NOUT6, NDTLS
      IIN = NDTLS
      IPR = NOUT6
CKSK                
      LINE  = ' '
      NLINE = 0
      IPOS  = 0
      NCHAR = 0
C
C ----------------------------------------------------------------------
C    CHARACTER INPUT
C ----------------------------------------------------------------------
C
      IF( NCA.NE.0 ) THEN
          INCA = 0
C
  100     IPOS = 1
          READ(IIN,'(A)',END=999)  LINE(:MXCOL)
          NLINE = NLINE + 1
C
          NCHAR = INDEX( LINE(:MXCOL), '/' ) -1
          IF( NCHAR.LT.0 ) NCHAR = MXCOL
C
          DO 110 I=IPOS,NCHAR,LEN(AV(1))
              IF( INCA.LT.NCA ) THEN
                  INCA = INCA + 1
                  IEE = MIN( NCHAR, IPOS + LEN(AV(1))-1)
                  AV(INCA) = LINE(IPOS:IEE)
                  IPOS = IEE + 1
              ELSE
                  GOTO 2000
              ENDIF
  110     CONTINUE
          IF( INCA.EQ.NCA ) GOTO 2000
C
          GOTO 100
      ENDIF
C
 2000 IF( NCI.EQ.0 .AND. NCR.EQ.0 ) RETURN
C
C
C ----------------------------------------------------------------------
C  ... INPUT INTEGER & REAL NUMBERS ....
C ----------------------------------------------------------------------
C
C     IF( NCI.GT.0 .OR. NCR.GT.0 ) THEN
C
      NDATA = NCI + NCR
      INCI  = 0
      INCR  = 0
C
C     ... IDATA : COUNTER OF INPUT DATA (INTEGER+REAL)
C
      IDATA = 0
      NREP  = 0
      JLAST = 0
C
C
C ... INPUT LOOP RETURNS HERE AND JUMP TO LABEL 900 AFTER INPUT ...
C
C
  200 CONTINUE
C
      IF( IDATA.GE.NDATA ) GOTO 900
C
C    ... INPUT NEW LINE ...
C
      IF( IPOS.EQ.0.OR.IPOS.GT.NCHAR ) THEN
          IPOS = 1
          IF( JLAST .NE. 0 ) GOTO 900
C
          READ(IIN,'(A)',END=999)  LINE(:MXCOL)
          NLINE = NLINE + 1
C
C    ... CHARACTERS AFTER DOLLAR (&) OR SLASH (/) IS NOT EFFECTIVE
C    ... IF JLAST .NE. 0 , TERMINATE INPUT ON THE CURRENT LINE.
C
          LDLR = INDEX( LINE, '&' )
          LSLSH = INDEX( LINE, '/' )
          IF( LSLSH .NE. 0 .AND. INDEX(LINE(:LSLSH),'&').EQ.0) THEN
              JLAST = 1
              NCHAR = LSLSH - 1
          ELSE
              NCHAR = LDLR - 1
              IF( NCHAR.LT.0 ) NCHAR = MXCOL
          ENDIF
      ENDIF
C
C    ... FIND STARTING & ENDING POSITION OF A WORD ...
C
      IS = 0
      DO 210 I=IPOS, NCHAR
          IF( IS.EQ.0 ) THEN
              IF(LINE(I:I).NE.' ') IS = I
C
C     ... A WORD ENDS BEFORE " ",COMMA,"(",")","*","+","-" OR "E"
C
CKSK      ELSE IF( INDEX( ' ,*()+-E',LINE(I:I) ).NE.0 ) THEN
          ELSE IF( INDEX( ' ,*()+-Ee',LINE(I:I) ).NE.0 ) THEN
              IPOS = I
C
C                ... SEARCH NEXT NON BLANK CHARACTERS WHEN TERMINATED
C                    BY BLANK ...
C
              IF( LINE(I:I).EQ.' ' .AND. I.LT.NCHAR ) THEN
                  DO 211 J=IPOS+1,NCHAR
                      IF( LINE(J:J).NE.' ' ) THEN
                          IPOS = J
                          GOTO 205
                      ENDIF
  211             CONTINUE

  205             CONTINUE
              ENDIF
C
C       ... GET "E+-NN" AS PART OF THE WORD TO
C           AVOID NUMERICAL ERROR CAUSED BY MULTIPLYING 10**NN
C           TO THE PRECEEDING DATA.
C
CKSK          IF(LINE(IPOS:IPOS).EQ.'E' ) THEN
       IF((LINE(IPOS:IPOS).EQ.'E').OR.(LINE(IPOS:IPOS).EQ.'e')) THEN
                  IF( INDEX('+-',LINE(IPOS+1:IPOS+1)).NE.0)
     &                  IPOS=IPOS + 1
                  DO 212 J=IPOS+1,NCHAR
                     IF( INDEX( ' ,)+-',LINE(J:J)).NE.0 ) THEN
                        IPOS = J
                        GOTO 215
                     ENDIF
  212             CONTINUE
                  IPOS = J
              ENDIF
C
              GOTO 215
          ENDIF
  210 CONTINUE
C
      IPOS = I
C
  215 CONTINUE
C
CHECK % % % % %
C       WRITE(IPR,*) ' IS IPOS ',IS,IPOS , ' NCHAR ',NCHAR
C       WRITE(IPR,*) ' LINE ',LINE
C
      IF( IS.EQ.0 ) GOTO 200
C
C
C  ... LINE(IS:IPOS-1) IS EXTRACTED WORD HERE.
C
C
      IE   = IPOS - 1
      LN   = 0
      TEMP = ' '
C
      DO 320 I=IS,IE
          IF(LINE(I:I).NE.' ') THEN
              LN = LN + 1
              IF( LN .GT. LEN(TEMP) ) THEN
                  WRITE(IPR,*)
     &         ' *** TOO LONG NUMERICAL DATA IN FREE FORM INPUT: <',
     &               LINE(IS:IE),'>'
                  WRITE(IPR,7900) LINE, IS,IE

                  STOP 888
              ENDIF
              TEMP(LN:LN) = LINE(I:I)
          ENDIF
  320 CONTINUE
C
C
C
C    ... READ AS NUMERICAL DATA
C        BEWARE THAT LINE(MXCOL+1:MXCOL+1) IS ASSUMED TO BE BLANK
C        WHEN IPOS=MXCOL+1
C
C      ... REPETETION NUMBER :  NNN( ... )
C      ... ADDTION : NNN*XXX
C
C
C
      IF( LINE(IPOS:IPOS).EQ.'(' .OR.
     &    LINE(IPOS:IPOS).EQ.'*' ) THEN

C         ... 'BN' FORMAT DESCRIPTOR MEANS IGNORING BLANKS ..
          READ( TEMP,'(BN,I32)',ERR=911) NREP
          IF( LINE(IPOS:IPOS) .EQ. '*' ) NREP = -NREP
CHECK % % %
C       WRITE(IPR,*) 'NREP ',NREP
C % % % % %
          IREP = 0
          IPOS = IPOS + 1
          GOTO 200
C
C      ... INPUT AS INCREMENT VALUE FOR ADDITION  ...
C
      ELSE
          IF( NREP .LT.0 ) THEN
              READ(TEMP,'(BN,D32.0)',ERR=912) DINC
          ELSE
C
C      ... INPUT AS NUMERICAL DATA VALUE ...
C
              IDATA = IDATA + 1
              IF( IDATA .LE. NCI ) THEN
                  INCI = INCI + 1
                  READ(TEMP,'(BN,I32)',ERR=912) IV(INCI)
              ELSE IF( IDATA.LE.NDATA ) THEN
                  INCR = INCR + 1
                  READ(TEMP,'(BN,E32.0)',ERR=913) V(INCR)
              ENDIF
          ENDIF
C
C   ... TREATMENT FOR REPETETION OR ADDITION ...
C
          IF( NREP.GT.0 ) IREP = IREP + 1

          IF( LINE(IPOS:IPOS).EQ.')' ) THEN
              IF( NREP .LE. 0 ) THEN
                  WRITE(IPR,*) '***** INVALID RIGHT PARENSIS :'
                  WRITE(IPR,7910) LINE, IPOS
              ENDIF
C
C
CM            WRITE(IPR,*) ' ** NCI IDATA IREP NREP ** '
CM            WRITE(IPR,*)      NCI,IDATA,IREP,NREP
C
              IF( IDATA .LE. NCI ) THEN
              IF( NCI.GT.0 .AND.IDATA-IREP.LE.NCI.AND.
     &            IDATA+(NREP-1)*IREP.GT.NCI ) THEN
                  WRITE(IPR,*)
     &         '<CAUTION> INTEGER REPETETION EXCEEDS NUMBER LIMIT',
     &         ' IN FREE FORM INPUT.',
     &         ' USE INTEGER DATA AS REAL DATA.'
                  WRITE(IPR,7910) LINE,IPOS
              ENDIF
              ENDIF
              DO 310 J=1,NREP-1
              DO 310 I=1,IREP
                  IDATA = IDATA + 1
                  IF( IDATA.LE.NDATA ) THEN
                      IF( IDATA.LE.NCI ) THEN
                          INCI = INCI + 1
                          IV(INCI) = IV(INCI - IREP)
                      ELSE
                          INCR = INCR + 1
                          IF( INCR-IREP .LE. 0 ) THEN
                              V(INCR) = IV(NCI+INCR-IREP)
                          ELSE
                              V(INCR) = V(INCR-IREP)
                          ENDIF
                      ENDIF
                  ENDIF
  310         CONTINUE
C
              NREP = 0
C
              IPOS = IPOS + 1
              GOTO 200
C
C  ... ADDITION ...
C
          ELSE IF( NREP .LT. 0 ) THEN
C
              IF( IDATA.LE.0 ) THEN
                  WRITE(IPR,2022)
 2022             FORMAT(/6X,'NO PREVIOUS VALUE FOR ADDITION')
                  WRITE(IPR,7900)  LINE,IS,IE
                  STOP 888
              ENDIF
              NREP = -NREP
C
              DO 340 I=1,NREP
                  IDATA = IDATA + 1
                  IF( IDATA .LE. NCI ) THEN
                      INCI = INCI + 1
                      IV(INCI) = IV(INCI-1) + INT(DINC)
                  ELSE IF( IDATA.LE.NDATA ) THEN
                      INCR = INCR + 1
                      IF( INCR.LE.1 ) THEN
                         V(INCR) = IV(NCI) + REAL(DINC)
                      ELSE
                         V(INCR) = V(INCR-1) + REAL(DINC)
                      ENDIF
                  ENDIF
  340         CONTINUE
              NREP = 0
              GOTO 200
          ENDIF
C
C
C
          IF( LINE(IPOS:IPOS).EQ.',' ) IPOS = IPOS + 1
          GOTO 200
      ENDIF
C
C
C   ... END OF NUMERICAL DATA INPUT ...
C
C
  900 IF( IDATA .GT. NDATA ) THEN
          WRITE(IPR,7920)  NDATA, IDATA
 7920     FORMAT(/1X,'EXCESS DATA ENCOUNTERD (REQUIRED ',I8,
     &           ' INPUT ',I8,' )')
          WRITE(IPR,7930) LINE, NLINE-1
 7930     FORMAT(1X,'LINE( ',A,')'/
     &           1X,5X,'<AND PRECEEDING ',I3,' LINES>')
          STOP 901
      ELSE IF( IDATA.LT.NDATA ) THEN
          WRITE(IPR,7940)  NDATA, IDATA
 7940     FORMAT(/1X,'MORE DATA REQUIRED (REQUIRED ',I8,
     &           ' INPUT ',I8,' )')
          WRITE(IPR,7930) LINE, NLINE-1
          STOP 901
      ENDIF
C
      IF( ROUTE.EQ.'REAI') WRITE(IPR,'(10X,10I12)') (IV(I),I=1,INCI)
      IF( ROUTE.EQ.'REAG') WRITE(IPR,'(10X,10E12.5)') (V(I),I=1,INCR)

      RETURN
C
C
C
 7900 FORMAT(1X,' LINE: ',A/1X,7X,8('....+....*')/
     &       1X,8X,'(INVALID DATA FROM COLUMN ',I3,' TO ',I3,' )'/)
 7910 FORMAT(1X,' LINE: ',A/1X,7X,8('....+....*')/
     &       1X,8X,'(INVALID DATA ON COLUMN ',I3,' )'/)
C
C
C  ... INPUT ERROR DURING READ OPERATION ...
C
  911 WRITE(IPR,*) '*** INVALID DATA AS REPEATER : <',LINE(IS:IE),'>'
      WRITE(IPR,7900) LINE,IS,IE
      STOP 888
C
  912 WRITE(IPR,*) '*** INVALID DATA AS INTEGER : <',LINE(IS:IE),'>'
      WRITE(IPR,7900) LINE,IS,IE
      STOP 888
C
  913 WRITE(IPR,*) '*** INVALID DATA AS REAL : <',LINE(IS:IE),'>'
      WRITE(IPR,7900) LINE,IS,IE
      STOP 888
C
  999 WRITE(IPR,*) '*** UNEXPECTED END OF INPUT DATA : ',ROUTE
      STOP 888
      END

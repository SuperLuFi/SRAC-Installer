C             S814                LEVEL=2        DATE=85.01.25
      SUBROUTINE S814(QG,CRX,Q,V,WD,AA,M1,IM1,R,XKE,XKI,VE)
C   *** S814  COMPUTES AREAS AND VOLUMES FOR INITIAL PRINT AND SOURCE
C       NORMALIZATION, SUMS FISSION SPECTRUM, AND IF IEVT=0, COMPUTES
C       TOTAL FIXED SOURCE BY GROUP AND NORMALIZES SOURCE.
      DIMENSION QG(1),CRX(1)  ,Q(M1,IM1,1),V(1),WD(1),AA(1)
     &,R(1),AF(3),VF(3),XKE(1),XKI(1),VE(1)
      COMMON /SN1C/
     &              D(1),LIM1,LR,LW,LDSN,LMA,LMZ,LMB,LMC,LXMD,LFIX,LFLT,
     &       LJ5,LRM,LDF,LJ3,LJ4,LIGT,LART,LALFT,
     &LFGP,LFGG,LEND,LV,LAA,LWD,LMR,LPNC,
     &ID,ITH,ISCT,ISN,IGE,IBL,IBR,IZM,IM,IEVT,IGM,IHT,IHS,IHM,MS,MCR,MTP
     &,MT,IDFM,IPVT,IQM,IPM,IPP,IIM,ID1,ID2,ID3,ID4,ICM,IDAT1,IDAT2,IFG,
     &IFLU,IFN,IPRT,IXTR,
     &EV,EVM,EPS,BF,DY,DZ,DFM1,XNF,PV,RYF,XLAL,XLAH,EQL,XNPM,
     &T(12),NIN,NOU,NT1,NT2,NT3,NT4,NT5,NT6,NT7
      COMMON /WORK/ Z(1),LIM2,LXKI,LFD,LXN,LVE,LMTT,LCRX,LQ,LPA,
     &       LXJ,LCH,LCA,LCF,LCT,LCS,LTAB,
     &LXND,LSA,LSAT,LRAV,LRA,LXNN,LXNE,LXNR,LXNA,LSR,LST,LQG,LFG,LSG,
     &LXKE,LXNI,LXNO,LT3,LT5,LDA,LDB,LDC,LDS,LB,IGMP,IGMM,IIGG,NERR,IMJT
     &,IHG,IMP,MP,NDS,NUS,SDG,SCG,AG,XNLGG,XNLG,SNG,ALA,ASR,EAM,EPG,EQ,
     &E1,E2,E3,E4,E5,E6,E7,E8,E9,E10,E11,E12,E13,E14,E15,E16,E17,E18,E19
     &,E20,ESC,ESM,EVP,EVPP,FTP,IC,ICVT,IGP,IG,IHP,IIC,IIG,IP,IZP,I01,
     &I02,I03,I04,I05,I06,I07,I08,I09,I00,JT,LC,MG,MI,ML,MM,NFN,XITR,
     &XLAP,XLAPP,XLAR,XLA,XNIO,XNII,ZZ1,ZZ2,ZZ3,XNB,XKEP,XKIP,IH,I,K,L,
     &M,J,N,NN,ISV
      AF(1)=1.0
      AF(2)=6.2831854
      AF(3)=12.566371
      VF(1)=1.0
      VF(2)=0.5
      VF(3)=0.3333333
      M=IGE-1
      N=(IGE+1)/IGE
C     N PREVENTS ERROR TRACE FOR 0**0 WHEN IGE=1 AND R(1)=0
      DO 16 I=N,IP
   16 AA(I)=AF(IGE)*R(I)**M
      IF (IGE.EQ.1) AA(1)=AF(1)
      DO 17 I=1,IM
   17 V(I)=VF(IGE)*(AA(I+1)*R(I+1) - AA(I)*R(I))
      E1=PV
      IF(IPVT.NE.1 .OR. PV.EQ.0.0)E1=1.0
      DO 14 I=1,IGM
      XKE(I)=XKI(I)/E1
C     IF(IEVT.EQ.2 .AND. VE(I).EQ.0.0)CALL ERRO(  'VEL.',I)
      IF(IEVT.EQ.2 .AND. VE(I).EQ.0.0) THEN
               WRITE(NOU,3000) I
               STOP 7
               ENDIF
 3000 FORMAT('0***ERROR*** IEVT = 2 AND VE(',I4,' ) = 0.0')
   14 XKEP=XKEP + XKE(I)
      XKIP=XKEP
      IF(IEVT.NE.0)GO TO 12
      I02=IHP*ML
      QG(IGP)=0.0
      DO 1 IIG=1,IGM
      IIGG=IIG
      QG(IIG)=0.0
      IF(IDAT1.EQ.0)GO TO 2
      IIGG=1
      READ (NT3) (CRX(I),I=1,I02)
      READ (NT3) ((Q(M,I,1  ),M=1,MP),I=1,IMP)
    2 IF(IPM.NE.0)GO TO 815
  814 DO 3 I=1,IM
    3 QG(IIG)=QG(IIG) + Q(1,I,IIGG)*V(I)
      QG(IGP)=QG(IGP)+QG(IIG)
      GO TO 7
  815 DO 4 I=1,IM
      E1=0.0
      DO 5 M=1,MM
    5 E1=E1 + Q(M,I,IIGG)*ABS(WD(M))
      IF(IPP.EQ.0)GO TO 4
      QG(IIG)=QG(IIG) + E1*AA(IPP+1)
      GO TO 6
    4 QG(IIG)=QG(IIG) + E1*AA(I+1)
    6 QG(IGP)=QG(IGP)+QG(IIG)
    7 IF(IDAT1.EQ.0)GO TO 1
      WRITE(NT4) (CRX(I),I=1,I02)
      WRITE(NT4) ((Q(M,I,1  ),M=1,MP),I=1,IMP)
    1 CONTINUE
      IF(IDAT1.EQ.0)GO TO 13
      REWIND NT3
      REWIND NT4
C  13 IF(QG(IGP).LE.0.0)CALL ERRO(  'SRCE',-0)
   13 IF(QG(IGP).LE.0.0) THEN
                WRITE(NOU,3010)
                STOP 7
                ENDIF
 3010 FORMAT('0***ERROR*** IEVT = 0 AND TOTAL FIXED SOURCE IS 0.0 OR',
     &       ' NEGATIVE VALUE'  )
      IF(XNF.NE.0.0)GO TO 11
      I01=NT3
      NT3=NT4
      NT4=I01
      GO TO 12
   11 E1=XNF/QG(IGP)
      QG(IGP)=XNF
      DO 8 IIG=1,IGM
      QG(IIG)=QG(IIG)*E1
      IIGG=IIG
      IF(IDAT1.EQ.0)GO TO 9
      IIGG=1
      READ (NT4) (CRX(I),I=1,I02)
      READ (NT4)((Q(M,I,1  ),M=1,MP),I=1,IMP)
    9 DO 10 I=1,IMP
      DO 10 M=1,MP
   10 Q(M,I,IIGG)=Q(M,I,IIGG)*E1
      IF(IDAT1.EQ.0)GO TO 8
      WRITE (NT3)(CRX(I),I=1,I02)
      WRITE (NT3)((Q(M,I,1  ),M=1,MP),I=1,IMP)
    8 CONTINUE
      IF(IDAT1.EQ.0)GO TO 12
      REWIND NT3
      REWIND NT4
   12 RETURN
      END

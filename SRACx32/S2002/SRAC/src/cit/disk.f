CDISK --057***CITATION*** REMOVES INPUT SECTION FROM IO10/ CF-IPTM
C     CF-IPRT,SRCH
C
C     NSEC IS THE SECTION TO BE REMOVED
C
      SUBROUTINE DISK(CONC,ZONEN,NSEC,MVX,NVX,NVO, HOX,NFO,NNFO,NIC,
     & NSETVX)
C
CDEL  INTEGER RGX , MSX , ZNEX , ZDX , WZX
CDEL  PARAMETER ( RGX=100, MSX=211, ZDX=200, ZNEX=1000, WZX=100 )
      INCLUDE  'CITPMINC'
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     & LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     & IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     &  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     & IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     & XSRH1(6), XTR1(WZX),XTR2(WZX),NXTR1(WZX),NXTR2(WZX),SPARE(200),
     & IXPUT(200),XPUT(200)
C
      DIMENSION CONC(NVX,MVX), ZONEN(NVO)
      DIMENSION HOX(NVX,NSETVX,20),NFO(20,NSETVX),NNFO(20,NSETVX),
     & NIC(1000)
C
  100 REWIND IO1
      IND = NSEC
      NSEC = IABS(NSEC)
      IO10 = IX(77)
      REWIND IO10
      WRITE(IO1)((CONC(N,M),N=1,NMAX),M=1,MMAX), (ZONEN(I),I=1,NVO)
      END FILE IO1
      REWIND IO1
  101 READ(IO10,END=134) INSEC,NREC,NSET,I1,I2
      IF (INSEC.EQ.28) GO TO 102
      IF (INSEC.EQ.40) GO TO 114
      IF (INSEC.EQ.36) GO TO 125
      IF (INSEC.EQ.30) GO TO 129
C******ADD AN IF FOR EACH NEW SECT. ON IO10
      WRITE(IO3) INSEC,NREC,NSET,I1,I2
      GO TO 101
  102 IF (NSEC.EQ.INSEC) GO TO 103
      WRITE(IO3) INSEC,NREC,NSET,I1,I2
  103 IF (NSET.EQ.0) GO TO 101
      DO 113 N=1,NSET
      READ(IO10) (NSRH(I),I=1,24),(XSRH1(I),I=1,6)
      IF (NSEC.EQ.INSEC) GO TO 104
      WRITE(IO3) (NSRH(I),I=1,24),(XSRH1(I),I=1,6)
  104 CONTINUE
      IF (NSRH(2).EQ.3) GO TO 108
      IF (NSRH(10).NE.(-1)) GO TO 113
      READ(IO10) (NXTR1(I),I=1,5),(XTR1(I),I=1,5)
      NXZ = NXTR1(1)
      IF (NSEC.EQ.INSEC) GO TO 105
      WRITE(IO3) (NXTR1(I),I=1,5),(XTR1(I),I=1,5)
  105 CONTINUE
      READ(IO10) (NXTR1(I),I=1,NXZ)
      IF (NSEC.EQ.INSEC) GO TO 106
      WRITE(IO3) (NXTR1(I),I=1,NXZ)
  106 CONTINUE
      DO 107 M=1,NXZ
      READ(IO10) (XTR1(I),I=1,I1)
      IF (NSEC.EQ.INSEC) GO TO 107
      WRITE(IO3) (XTR1(I),I=1,I1)
  107 CONTINUE
      GO TO 113
  108 CONTINUE
      READ(IO10) (NXTR1(I),I=1,7),(XTR1(I),I=1,5)
      NXJ = NXTR1(1)
      NXI = NXTR1(2)
      NXKB = NXTR1(3)
      IF (NSEC.EQ.INSEC) GO TO 109
      WRITE(IO3) (NXTR1(I),I=1,7),(XTR1(I),I=1,5)
  109 IF (NXJ.LE.0) GO TO 110
      READ(IO10) (XTR1(I),I=1,NXJ)
      IF (NSEC.EQ.INSEC) GO TO 110
      WRITE(IO3) (XTR1(I),I=1,NXJ)
  110 IF (NXI.LE.0) GO TO 111
      READ(IO10) (XTR1(I),I=1,NXI)
      IF (NSEC.EQ.INSEC) GO TO 111
      WRITE(IO3) (XTR1(I),I=1,NXI)
  111 IF (NXKB.LE.0) GO TO 112
      READ(IO10) (XTR1(I),I=1,NXKB)
      IF (NSEC.EQ.INSEC) GO TO 112
      WRITE(IO3) (XTR1(I),I=1,NXKB)
  112 CONTINUE
  113 CONTINUE
      GO TO 101
  114 IF (NSEC.EQ.INSEC) GO TO 115
      WRITE(IO3) INSEC,NREC,NSET,I1,I2
  115 IF (NREC.EQ.0) GO TO 117
      DO 116 N = 1,NREC
      READ(IO10)I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
      IF (NSEC.EQ.INSEC) GO TO 116
      WRITE(IO3)I1,I2,J1,T1,J2,T2,J3,T3,J4,T4,J5,T5
  116 CONTINUE
  117 READ(IO10) INSEC,NREC,KAAX,I1,I2
      IF (NSEC.EQ.INSEC) GO TO 118
      WRITE(IO3) INSEC,NREC,KAAX,I1,I2
  118 IF (NREC.EQ.0) GO TO 120
      DO 119 N = 1,NREC
      READ(IO10)(XTR1(K),K=1,KAAX)
      IF (NSEC.EQ.INSEC) GO TO 119
      WRITE(IO3)(XTR1(K),K=1,KAAX)
  119 CONTINUE
  120 READ(IO10)INSEC,NREC,NN,NAAX,MAAX
      IF (NSEC.EQ.INSEC) GO TO 121
      WRITE(IO3)INSEC,NREC,NN,NAAX,MAAX
  121 IF (NREC.EQ.0) GO TO 101
      IF (NN.EQ.0) GO TO 122
      READ(IO10)(NXTR1(N),N=1,NN)
  122 CONTINUE
      READ(IO10)((CONC(N,M),N=1,NAAX),M=1,MAAX)
      IF (NSEC.EQ.INSEC) GO TO 124
      IF (NN.EQ.0) GO TO 123
      WRITE(IO3)(NXTR1(N),N=1,NN)
  123 CONTINUE
      WRITE(IO3)((CONC(N,M),N=1,NAAX),M=1,MAAX)
  124 GO TO 120
  125 CONTINUE
      IF (NSEC.EQ.INSEC) GO TO 126
      WRITE(IO3)INSEC,NREC,NSET,I1,I2
  126 CONTINUE
      IF (IND.GT.0) GO TO 127
      READ(IO10)
      READ(IO10)
      READ(IO10)
      READ(IO10)
      GO TO 128
  127 CONTINUE
      READ(IO10)(((HOX(NV,NS,I20),NV=1,NSET),NS=1,I1),I20=1,20)
      READ(IO10)((NFO(I20,NS),I20=1,20),NS=1,I1)
      READ(IO10)((NNFO(I20,NS),I20=1,20),NS=1,I1)
      READ(IO10)NIC
  128 CONTINUE
      IF (NSEC.EQ.INSEC) GO TO 101
      WRITE(IO3)(((HOX(NV,NS,I20),NV=1,NSET),NS=1,I1),I20=1,20)
      WRITE(IO3)((NFO(I20,NS),I20=1,20),NS=1,I1)
      WRITE(IO3) ((NNFO(I20,NS),I20=1,20),NS=1,I1)
      WRITE(IO3)NIC
      GO TO 101
  129 IF (NSEC.EQ.INSEC) GO TO 130
      WRITE(IO3) INSEC,NREC,NSET,I1,I2
  130 READ(IO10) (NXTR1(I),I=1,24)
      IF (NSEC.EQ.INSEC) GO TO 131
      WRITE(IO3) (NXTR1(I),I=1,24)
  131 READ(IO10) (NXTR1(I),I=1,24)
      IF (NSEC.EQ.INSEC) GO TO 132
      WRITE(IO3) (NXTR1(I),I=1,24)
  132 DO 133 II=1,NSET
      READ(IO10) J1,J2,J3,(NXTR1(I),I=1,J2)
      IF (NSEC.EQ.INSEC) GO TO 133
      WRITE(IO3) J1,J2,J3,(NXTR1(I),I=1,J2)
  133 CONTINUE
      GO TO 101
  134 REWIND IO10
      END FILE IO3
      REWIND IO3
      IREAD = IO3
      IRITE = IO10
      CALL TRAN(CONC,MVX,NVX,IREAD,IRITE,HOX,NFO,NNFO,NIC,NSETVX)
  135 END FILE IO10
      REWIND IO3
      REWIND IO10
      READ(IO1)((CONC(N,M),N=1,NMAX),M=1,MMAX), (ZONEN(I),I=1,NVO)
      REWIND IO1
      RETURN
      END

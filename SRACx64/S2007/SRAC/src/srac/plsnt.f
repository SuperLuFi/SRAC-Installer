C **********************************************************************
                     SUBROUTINE PLSNT
C **********************1987/5/1****************************************
C   *** PLSNT CONTROLS LINK 1 WHICH DOES EVERYTHING PRIOR TO ITERATION
C        360 VERSION OF SUBROUTINE PLSNT REVISED  10-28-68
     *  (NMAT,IMX,MTNAME,NGR  )
      COMMON /SKPBUF/ LOCATN,JUMP,LFAST,LSLOW,JMP1,JMP2,JMP3
      COMMON /SN1C/ D(1),LIM1,LR,LW,LDSN,LMA,LMZ,LMB,LMC,LXMD,LFIX,LFLT,
     1       LJ5,LRM,LDF,LJ3,LJ4,LIGT,LART,LALFT,
     2LFGP,LFGG,LEND,LV,LAA,LWD,LMR,LPNC,
     BID,ITH,ISCT,ISN,IGE,IBL,IBR,IZM,IM,IEVT,IGM,IHT,IHS,IHM,MS,MCR,MTP
     C,MT,IDFM,IPVT,IQM,IPM,IPP,IIM,ID1,ID2,ID3,ID4,ICM,IDAT1,IDAT2,IFG,
     DIFLU,IFN,IPRT,IXTR,
     EEV,EVM,EPS,BF,DY,DZ,DFM1,XNF,PV,RYF,XLAL,XLAH,EQL,XNPM,
     FNMP,T(2),LCMAC,T1(8),NIN,NOU,NT1,NT2,NT3,NT4,NT5,NT6,NT7
      DIMENSION IDIQ(1)
      COMMON /WORK/ Z(1),LIM2,LXKI,LFD,LXN,LVE,LMTT,LCRX,LQ,LPA,
     2       LXJ,LCH,LCA,LCF,LCT,LCS,LTAB,
     3LXND,LSA,LSAT,LRAV,LRA,LXNN,LXNE,LXNR,LXNA,LSR,LST,LQG,LFG,LSG,
     4LXKE,LXNI,LXNO,LT3,LT5,LDA,LDB,LDC,LDS,LB,IGMP,IGMM,IIGG,NERR,IMJT
     5,IHG,IMP,MP,NDS,NUS,SDG,SCG,AG,XNLGG,XNLG,SNG,ALA,ASR,EAM,EPG,EQ,
     6E1,E2,E3,E4,E5,E6,E7,E8,E9,E10,E11,E12,E13,E14,E15,E16,E17,E18,E19
     7,E20,ESC,ESM,EVP,EVPP,FTP,IC,ICVT,IGP,IG,IHP,IIC,IIG,IP,IZP,I01,
     8I02,I03,I04,I05,I06,I07,I08,I09,I00,JT,LC,MG,MI,ML,MM,NFN,XITR,
     9XLAP,XLAPP,XLAR,XLA,XNIO,XNII,ZZ1,ZZ2,ZZ3,XNB,XKEP,XKIP,IH,I,K,L,
     AM,J,N,NN,ISV
      COMMON/MAINC/ III(1000)
      EQUIVALENCE (D(1),IDIQ(1)),(III(64),NOUT1),(III(77),ITYPE)
      DIMENSION MTNAME(2,NMAT),IMX(1)
   50 FORMAT(2H1 ,12A4)
      IFN=ITYPE
CI--
      IDAT1 = 0
C     IF (ITYPE.EQ.1) GO TO 1000
C     IEVT  = 1
C     IQM   = 0
C     GO TO 1001
C1000 CONTINUE
C     IEVT  = 0
C     IQM   = 1
C1001 CONTINUE
      IF (IEVT.EQ.0.AND.IQM.GT.0) GO TO 1002
      IF (IEVT.EQ.0.AND.IPM.GT.0) GO TO 1002
      IF (IEVT.EQ.1.AND.IQM.EQ.0 .AND.IPM.EQ.0) GO TO 1002
      WRITE(NOUT1,1003)
      STOP
 1003 FORMAT('0***** ERROR ANISN2 STEP IEVT=0 , BUT IQM=0 AND IPM=0')
 1002 CONTINUE
CI--
      IGM   =   NGR
      XLA=0.0
      REWIND NT3
      REWIND NT4
      REWIND NT1
      REWIND NT2
C     ** DATA POOL FISSION SPECTRUM   VELOCITY READ
      LXKI = 150
      LVE = LXKI + IGM
      LMTT = LVE + IGM
      CALL FSPVEL(Z(LMTT),Z(LMTT),Z(LXKI),Z(LVE),NGR,MTNAME,NMAT,
     *            IMX,NOU,LIM2-LMTT ,NMP)
C     C  *** DATA POOL MACRO X-SEC CONVERSION
      LCWT=LMTT+(ISCT+1)*NMP
      LCFG=LCWT+IGM
CI--- 7/10/83
      LCFGI=LCFG+(ISCT+1)*NMP
      I00=LCFGI+IM
C *** I00 TEMPORARY SPACE FOR P0 P1 TOTAL CROSS SECTIONS
      I01=I00+2*IGM*NMP
C *** MATERIAL NUMBER BY ZONE (LCMAC ARRAY) POSITION IN TAPE
      CALL CVMASN(Z(I00),Z(I01),Z(I01),IMX,MTNAME,NMAT,
     *             NGR,IHT,IHS,IHM,LIM2-I01,NT6,NOU,MTP,Z(LMTT),
     *             ISCT+1,D(LCMAC),IZM,IM,D(LMA),Z(LCWT),Z(LCFG),
     *             Z(LCFGI),NMP)
      CALL CLEAR(0.0,Z(LMTT+MTP),LIM2-LMTT-MTP+1)
C     CALL REAG(Z(LXKI),IGM,4HXKI ,4H    )
C     CALL REAG(Z(LVE ),IGM,4HVELO,4HCITY)
    7 IGMM  = 1
      IF(IDAT1.EQ.0) IGMM=IGM
      MT=MCR+MTP
      I01=1
      IF(IDAT1.NE.2) I01=IGM
    2 MP=1
      IMP=0
      MM=ISN+1
      IF(IGE.EQ.2) MM=(ISN*(ISN+4))/4
      MG=MM*I01
      IG=IM*I01
      IP=IM+1
      IGP=IGM+1
      MI=MM*IP
      IZP=IZM+1
      ML=MCR+MTP
      JT=1
      IF(ISCT.GT.0) JT=ISCT
      IF(IGE.EQ.2) JT=(JT*(JT+4))/4
      IMJT=IM*JT
      NDS=IHM-IHS
      NUS=IHS-IHT-1
      IHP=IHM
      IF(NUS.GT.0) IHP=IHM+1
      IHG=IHP*IGMM
      IF(IQM.GT.0) IMP=IM
      IF(IPM.EQ.0) GO TO 5
      MP=MM
      IMP=IPM
    5 CONTINUE
C   *** COMPUTE BASE ADDRESS  ( SN1C )
  103 IF(LIGT.NE.0) GO TO 104
      LIGT=LEND
      IF(IDAT2.NE.0) LEND=LIGT+IGM
  104 IF(LART.NE.0) GO TO 105
      LART=LEND
      IF(IBR.EQ.3) LEND=LART+IGM
  105 IF(LALFT.NE.0)  GO TO 106
      LALFT=LEND
      IF(IBL.EQ.3) LEND=LALFT+IGM
  106 CONTINUE
C
      IF(LIM1.GE.LEND-1) GO TO 107
      WRITE(NOUT1,7000) LIM1,LEND
 7000 FORMAT('0*** ERROR LACK OF MEMORY , COMMON /SN1C/  ALLOCATED =',
     *       I10,' USED =',I10)
      STOP 7
  107 CONTINUE
      WRITE(NOU,6000) LEND
 6000 FORMAT(1H0,I6,' LOCATIONS WILL BE USED FOR THIS PROBLEM ( ',
     1       '/SN1C/ ''SN2'' )' )
      LCRX = LMTT + MTP
      LFD = LCRX + IHG*MT
      LXN = LFD + IM
      LQ = LXN + IG
      IQM1 = 0
      IF(IQM.GT.0) IQM1=1
      LPA = LQ + IQM1*IM*IGMM
      LCH = LPA + IPM*MM*IGMM
      IF(ISCT.EQ.0) GO TO 13
      LXJ=LCH
      LCH=LXJ+IG*JT
   13 LCA=LCH+IM*ISCT
      LCF=LCA + IM
      LCT=LCF
      LCS=LCT + IM
      LTAB=LCS + IM
      LXND=LTAB + IGM
      LSA=LXND + MI
      LSAT=LSA + IMJT
      LRAV=LSAT + IMJT
      LRA=LRAV + IM
      LXNN=LRA + IP
      LXNE=LXNN + IM
      LXNR=LXNE + IM
      LXNA=LXNR + IP
      LSR=LXNA + IMJT+1
      LST=LSR + IM
      LQG=LST + IM
      LFG=LQG + IGP
      LSG=LFG + IGP
      LXKE=LSG + IGM
      LXNI=LXKE + IGM
      LXNO=LXNI + MM
      LT3=LXNO + IM*MM
      LT5=LT3
      LDA=LT5
      LDB=LDA + MI
      LDC=LDB + MI
      LDS=LDC + MI
      LB=LDS + MI
      I01=LB + MM*I01
      IGMP=I01
      CALL ADDR(3,68,I03,JUMP)
      IF(I03.NE.0)WRITE(NOU,140) I03,JUMP
  140 FORMAT('0  ARRAY',I3,' IS FIRST ARRAY IN BULK.',I6,' LOCATIONS SKI
     1PPED')
      I01=IGMP
      IF(I01.LE.LIM2)GO TO 6
C     CALL ERRO(4HSN2C,I01)
      WRITE(NOUT1,7010) LIM2,I01
 7010 FORMAT('0*** ERROR LACK OF MEMORY , COMMON /SN2C/  ALLOCATED =',
     *       I10,' USED =',I10)
      STOP 7
    6 WRITE (NOU,20) I01
   20 FORMAT(1H0,I6,40H LOCATIONS WILL BE USED FOR THIS PROBLEM,
     *        ' ( /SN2C/ ) ' )
    9 JTEMP=IGM
      IF(ID2.GT.0) JTEMP=1
      ITEMP=IHP*ML*JTEMP+LCRX
      WRITE(NOU,75)ITEMP
   75 FORMAT(1H0,I6,46H LOCATIONS WILL BE USED TO READ CROSS SECTIONS,
     *       ' ( /SN2C/ )' )
C     IF (ITEMP.GT.LIM2) CALL ERRO(4HXSEC,ITEMP)
      IF (ITEMP.GT.LIM2) THEN
                WRITE(NOUT1,7010) LIM2,ITEMP
                STOP 7
                ENDIF
C   ***TP READS X-SECT., SOURCE, FLUX, FISSION GUESS
      CALL TP(Z(LCRX),Z(LCRX),Z(LQ),Z(LXN),Z(LFD),Z(LXKI),IHM,IHP,IGM,
     1ML,MP,IMP,IM)
      DO 12 I=1,IGM
      I01=LART+I-1
      I02=LALFT+I-1
      IF(IBR.EQ.3)D(I01)=1.0
   12 IF(IBL.EQ.3)D(I02)=1.0
C   *** COMPUTE ADJOINT REVERSALS
      IF(ITH.EQ.0)GO TO 15
      CALL ADJNT(Z(LXKI),1,IGM)
      CALL ADJNT(Z(LVE),1,IGM)
      IF(IBR.EQ.3)CALL ADJNT(D(LART),1,IGM)
      IF(IBL.EQ.3)CALL ADJNT(D(LALFT),1,IGM)
      IF(IDAT2.NE.0)CALL ADJNT(D(LIGT),1,IGM)
C   *** NORMALIZE FIXED SOURCE - DISTRIBUTED OR SHELL
   15 CALL S814(Z(LQG),Z(LCRX),Z(LQ),D(LV),D(LWD),D(LAA),MP,IMP,D(LR),
     1Z(LXKE),Z(LXKI),Z(LVE))
C   *** PRINT INPUT DATA
      DO 21 I=1,IZM
      I01=LJ5+I-1
      I02=I01+IZM
      IF(ISCT.EQ.0)D(I01)=0.0
   21 IF(IEVT.NE.4)D(I02)=0.0
C     WRITE (NOU,50) T
C     WRITE (NOU,100)
C      WRITE (NOU,10000) (D(I),I=1,149)
C     WRITE (NOU,10000) (Z(I),I=1,150)
      RETURN
C0000 FORMAT(1X,10I12)
      END

      SUBROUTINE FINPR(MA,RA,RAV,AA,V,FD,XN,Q,PA,M1,J3,J4,T3,T5,I1,IZ1,
     1           IH1,IGM1,DF,MB,MC,XMD,CRX,X,MZ,VOLZ,FVZ,I2,XJ,I3,NFFL)
C
C   *** FINAL OUTPUT AND ACTIVITIES
C
      CHARACTER*4  FILENM,IDENT,IDCASE
C
      COMMON /PDSPDS/ BUF(540),IFLSW,FILENM(3),ECODE,TEMPRY
      COMMON /MAINC / III(1000)
      COMMON /SN1C  /
     &              D(1),LIM1,LR,LW,LDSN,LMA,LMZ,LMB,LMC,LXMD,LFIX,LFLT,
     1       LJ5,LRM,LDF,LJ3,LJ4,LIGT,LART,LALFT,
     2LFGP,LFGG,LEND,LV,LAA,LWD,LMR,LPNC,
     BID,ITH,ISCT,ISN,IGE,IBL,IBR,IZM,IM,IEVT,IGM,IHT,IHS,IHM,MS,MCR,MTP
     C,MT,IDFM,IPVT,IQM,IPM,IPP,IIM,ID1,ID2,ID3,ID4,ICM,IDAT1,IDAT2,IFG,
     DIFLU,IFN,IPRT,IXTR,
     EEV,EVM,EPS,BF,DY,DZ,DFM1,XNF,PV,RYF,XLAL,XLAH,EQL,XNPM,
     FT(12),NIN,NOU,NT1,NT2,NT3,NT4,NT5,NT6,NT7
      COMMON /WORK/ Z(1),LIM2,LXKI,LFD,LXN,LVE,LMTT,LCRX,LQ,LPA,
     2       LXJ,LCH,LCA,LCF,LCT,LCS,LTAB,
     3LXND,LSA,LSAT,LRAV,LRA,LXNN,LXNE,LXNR,LXNA,LSR,LST,LQG,LFG,LSG,
     4LXKE,LXNI,LXNO,LT3,LT5,LDA,LDB,LDC,LDS,LB,IGMP,IGMM,IIGG,NERR,IMJT
     5,IHG,IMP,MP,NDS,NUS,SDG,SCG,AG,XNLGG,XNLG,SNG,ALA,ASR,EAM,EPG,EQ,
     6E1,E2,E3,E4,E5,E6,E7,E8,E9,E10,E11,E12,E13,E14,E15,E16,E17,E18,E19
     7,E20,ESC,ESM,EVP,EVPP,FTP,IC,ICVT,IGP,IG,IHP,IIC,IIG,IP,IZP,I01,
     8I02,I03,I04,I05,I06,I07,I08,I09,I00,JT,LC,MG,MI,ML,MM,NFN,XITR,
     9XLAP,XLAPP,XLAR,XLA,XNIO,XNII,ZZ1,ZZ2,ZZ3,XNB,XKEP,XKIP,IH,I,K,L,
     AM,J,N,NN,ISV
C
      CHARACTER *4 ICF0,ICF1,ICF2,ICF3,ICF,IRANGE
C
      DIMENSION MA(1),RA(1),RAV(1),AA(1),V(1),FD(1),      Q(1),PA(M1,1),
     1 J3(1),J4(1),T5(I1,1),T3(IZ1,1),XN(I1,1),CRX(IH1,IGM1,1),X(I1,1)
     2 ,MB(1),MC(1),XMD(1),DF(1),MZ(1),AF(3),VOLZ(1),FVZ(I2,1),IDENT(2),
     3  IRANGE(3),IDCASE(1),TITLE(18),XJ(I3,1)
      DIMENSION WT1(108),WT(107)
C
      EQUIVALENCE (III(101),IDCASE),(III(98),IRANG),(III(99),ICF),
     1            (III(103),TITLE(1)),(WT1(2),WT(1))
C
      DATA        IRANGE    /'FAST','THER','ALL '/
      DATA        ICF0,ICF1,ICF2,ICF3 /'0000','0001','0002','0003'/
C
C     START OF PROCESS
C
      AF(1)    =  1.0000000
      AF(2)    =  6.2831854
      AF(3)    = 12.566371
C
      WRITE (NOU,170) TITLE
      WRITE (NOU,10) (I,MA(I),RA(I),RAV(I),AA(I),V(I),FD(I),I=1,IM)
      WRITE (NOU,20) IP,RA(IP),AA(IP)
C
C     EDIT ACTIVITY WHEN ID3>0
C
      IF(ID3.EQ.0)  GO TO 1
      WRITE (NOU,170)TITLE
      WRITE (NOU,30) (I,J3(I),J4(I),I=1,ID3)
C   *** COMPUTE ACTIVITIES
      I01    = ID3*IZP
      DO 2 I = 1,I01
    2 T3(I,1)= 0.0
      IF(ID4.EQ.0)  GO TO 3
      I01    = ID3*IM
      DO 4 I = 1,I01
    4 T5(I,1)= 0.0
C
    3 CONTINUE
      DO 5 IIG = 1,IGM
      IGMP     = IIG
      IIGG     = IIG
      IF(IDAT1.EQ.0) GO TO 6
      IIGG     = 1
      READ (NT3) ((CRX(IH,1,M),IH=1,IHP),M=1,MT)
      IF(IEVT .EQ.0) READ(NT3)
      IF(IDAT1.NE.2) GO TO 6
      IGMP     = 1
      READ (NT1) (XN(I,1),I=1,IM)
      IF(ISCT.GT.0)READ(NT1) (XJ(I,1),I=1,IMJT)
    6 CONTINUE
      DO 7 J = 1,ID3
      L      = IABS(J3(J))
      N      = IABS(J4(J))
      E1     = CRX(N,IIGG,L)
      DO 8 I = 1,IM
      E4     = XN(I,IGMP)
      KK     = MA(I)
      K      = IABS(MZ(KK))
      E2     = 0.0
      E3     = 0.0
      IF(K.EQ.L .OR. J3(J).LT.0) GO TO 9
      DO 11 M= 1,MS
      IF(K    .NE.MB(M)) GO TO 11
      IF(MC(M).EQ.    0) GO TO 12
      IF(MB(M).EQ.MC(M)) GO TO 13
      IF(L    .NE.MC(M)) GO TO 11
      E2     = E2 + XMD(M)
      GO TO 11
   12 E2     = E2*XMD(M)
      GO TO 11
   13 E2     = E2*EV
   11 CONTINUE
      GO TO 14
C
    9 E2     = 1.0
   14 E2     = E2*E4*E1
      IF(IDFM.EQ.0)GO TO 15
      E2     = E2*DF(I)
   15 E3     = E2*V(I)
C   *** ACTIVITIES BY ZONE
      T3(KK,J)  = T3(KK,J)  + E3
      T3(IZP,J) = T3(IZP,J) + E3
      IF(ID4.EQ.0) GO TO 8
      IF(J4(J).LT.0) E2 = E2*AF(IGE)*RAV(I)**(IGE-1)
C   *** ACTIVITIES BY INTERVAL
      T5(I,J)   = T5(I,J) + E2
    8 CONTINUE
    7 CONTINUE
    5 CONTINUE
C
      IF(IDAT1.NE.0) REWIND NT3
      IF(IDAT1.EQ.2) REWIND NT1
C   *** PRINT ACTIVITIES
   16 WRITE (NOU,40) IZP
      CALL WOT(T3,ID3,IZP,1,'ZONE','ACT.',0)
      IF(ID4.EQ.0)   GO TO 1
      WRITE (NOU,50)
      CALL WOT(T5,ID3,IM,1,'INT.','ACT.',0)
      IF(ID4.GE.0)   GO TO 1
      DO 42 I=1,ID3
   42 CALL PUNSH(T5(1,I),IM)
C
C     EDIT FLUX  ( IN SRAC SYSTEM , IDAT1 IS ALWAYS SET 0 )
C
C   1 IF(ID1.GE.2)WRITE(7,160)  (T(I),I=1,12)
    1 IF(ID1.GE.2) WRITE(NOU,160)
      IF(IDAT1.EQ.2) GO TO 26
CI    IF(ID1  .LT.2) GO TO 18
C     DO 43 I=1,IGM
C  43 CALL PUNSH(XN(1,I),IM)
CI   ....... FLUX WRITE ON FILE '33' AND CURRENT WRITE .......
C
      REWIND 33
      WRITE(33)((XN(I,J),I=1,IM),J=1,IGM)
      IF (ISCT.NE.0) WRITE(33) ((XJ(I,J),I=1,I3),J=1,IGM)
      CALL CLEA( VOLZ ,     IZM , 0.0 )
      CALL CLEA( FVZ  , NFFL*IZM , 0.0 )
C
      IF(NFFL .EQ. IGM) GO TO 100
      IFLSW    = 1
      FILENM(1)= 'MACR'
      FILENM(2)= 'O   '
      IF(ICF.EQ.'0002') FILENM(2)='OWRK'
      IDENT(1) = 'CONT'
      IDENT(2) = 'X00X'
      CALL PACKX(IDENT(2),1,IRANGE(IRANG+1),1)
      CALL PACK (IDENT(2),4,ICF)
      CALL READ (IDENT,NGL,1)
      CALL READ (IDENT,WT1,NGL+1)
C
  100 CONTINUE
      DO 120 I = 1,IM
      J        = MA(I)
      VOLZ(J)  = VOLZ(J)+V(I)
  120 CONTINUE
      DO 130 I = 1,IGM
      DO 130 M = 1,IM
      JJ       = MA(M)
      FVZ(JJ,I)= FVZ(JJ,I) + XN(M,I)*V(M)
  130 CONTINUE
      IF(IGM .EQ. NFFL) GO TO 145
      NFF      = IGM+1
      DO 135 N = NFF,NFFL
      DO 135 J = 1,IZM
      FVZ(J,N) = VOLZ(J)*WT(N)
  135 CONTINUE
C **** OUTPUT VOLUME & FLUX DATA INTO FLUX FILE
  145 CONTINUE
CKSK  FILENM(1) = 4HFLUX
      FILENM(1) = 'FLUX'
CKSK  FILENM(2) = 4H
      FILENM(2) = '    '
CM    FILENM(3) = 4H
      IDENT(1)  = IDCASE(1)
      IDENT(2)  = 'XVOL'
      CALL PACKX (IDENT(2),1,IRANGE(IRANG+1),1)
      CALL SEARCH(IDENT,LGT,ISW)
      IF(ISW.EQ.0) CALL DELETE(IDENT)
      CALL WRITE(IDENT,VOLZ,IZM)
      IDENT(2)  = 'X00X'
      CALL PACKX(IDENT(2),1,IRANGE(IRANG+1),1)
      CALL PACK (IDENT(2),4,ICF)
      CALL SEARCH(IDENT,IGT,ISW)
      IF(ISW.EQ.0) CALL DELETE(IDENT)
      CALL WRITE(IDENT,FVZ,IZM*IGM)
C **** OUTPUT CURRENT DATA INTO FLUX FILE WHEN FINE GROUP & PL > 0
      IF(ISCT .NE.    1) GO TO 155
CTFREE
CDEL  IF(ICF  .NE. ICF2) GO TO 155
C     IF(IEVT .NE. 0) GO TO 155 1988/05/24
      CALL CLEA(FVZ,NFFL*IZM,0.0)
      DO 150 I = 1,IGM
      DO 150 M = 1,IM
      JJ       = MA(M)
      FVZ(JJ,I)= FVZ(JJ,I) + ABS(XJ(M,I))*V(M)
  150 CONTINUE
      IF(IGM .EQ. NFFL) GO TO 152
      NFF      = IGM+1
      DO 154 N = NFF,NFFL
      DO 154 J = 1,IZM
      FVZ(J,N) = VOLZ(J)*WT(N)
  154 CONTINUE
  152 CONTINUE
      CALL PACK  (IDENT(2),4,ICF3)
      IF(ICF.EQ.ICF0) CALL PACK  (IDENT(2),4,ICF1)
      CALL SEARCH(IDENT,IGH,ISW)
      IF(ISW.EQ.0) CALL DELETE(IDENT)
      CALL WRITE(IDENT,FVZ,IZM*NFFL)
C
  155 CONTINUE
   18 WRITE (NOU,170) TITLE
CADD ** AVOID LARGE AMOUNT PRINT OF FLUX
      IF(ICF  .EQ. ICF2 ) GO TO 19
C   *** PRINT FLUX IF INCORE
      WRITE (NOU,60)
      CALL WOT(XN,IGM,IM,1,'INT.','GRP.',0)
   19 IF(IDAT1.EQ.1) GO TO 22
C   *** PRINT DIST. SOURCE IF ANY AND IN CORE
      IF(IQM.EQ.0)   GO TO 23
      WRITE (NOU,170) TITLE
      WRITE (NOU,70)
      CALL WOT(Q,IGM,IM,1,'INT.','GRP.',0)
      GO TO 24
C   *** PRINT SHELL SOURCE IF ANY AND IN CORE
   23 IF(IPM.EQ.0)   GO TO 24
      WRITE (NOU,170) T
      IF(IPM.GT.1)   GO TO 25
      WRITE (NOU,80) IPP
      CALL WOT(PA,IGM,MM,1,'ANGL','GRP.',0)
      GO TO  24
   25 WRITE (NOU,90)
      CALL WOT(PA,IM,MM,IGM,'ANGL','INT.','GRP.')
      GO TO 24
   26 I02     = 0
   29 I01     = MIN0(IGM-I02,8)
      WRITE (NOU,170) TITLE
      WRITE (NOU,140) I02
      DO 31 I = 1,I01
      READ (NT1) (X(J,I),J=1,IM)
   31 IF(ISCT.GT.0)READ (NT1)
      CALL WOT(X,I01,IM,1,'INT.','G=N+',0)
      I03     = I01*IM
      IF(ID1.LT.2)    GO TO 32
      CALL PUNSH(X,I03)
   32 I02     = I02 + 8
      IF(I02.LT.IGM)  GO TO 29
   28 REWIND NT1
C
C     EDIT FOR IEVT=0 CASE ( FIXED SOURCE PROBLEM)
C
   22 IF(IEVT.NE.0)   GO TO 24
      IF(IQM .EQ.0)   GO TO 33
      I02     = 0
   34 I01     = MIN0(IGM-I02,8)
      WRITE (NOU,170) TITLE
C   *** PRINT DIST. SOURCE IF ANY AND ON TAPE
      WRITE (NOU,180) I02
      DO 35 I = 1,I01
      READ (NT3)
   35 READ (NT3) (X(J,I),J=1,IM)
      CALL WOT(X,I01,IM,1,'INT.','G=N+',0)
      I02     = I02 + 8
      IF(I02.LT.IGM)  GO TO 34
C   *** PRINT SHELL SOURCE IF ANY AND ON TAPE
   33 IF(IPM-1) 36,37,38
   37 I02     = 0
      WRITE (NOU,170) TITLE
   17 I01     = MIN0(IGM-I02,8)
      WRITE (NOU,210) IPP,I02
      I04     = 0
      DO 39 I = 1,I01
      I03     = I04 +  1
      I04     = I04 + MM
      READ (NT3)
   39 READ (NT3) (X(J,1),J=I03,I04)
      CALL WOT(X,I01,MM,1,'ANGL','G=N+',0)
      I02     = I02 + 8
      IF(I02.LT.IGM)GO TO 17
      GO TO 36
   38 I01     = MM*IM
      DO 41 I = 1,IGM
      READ (NT3)
      READ (NT3) (Q(J),J=1,I01)
      WRITE (NOU,170) TITLE
      WRITE (NOU,200) I
   41 CALL WOT(Q,IM,MM,1,'ANGL','INT.',0)
   36 REWIND NT3
C
C     END OF PROCESS
C
   24 RETURN
C
CK 10 FORMAT(84H0 INT. ZONE NUMBER     RADIUS    INT. MIDPOINT    AREA
CK   1      VOLUME    FISSION DENS/(I6,I9,4X,1P5E13.5))
   10 FORMAT(1H0,' INT. ZONE NUMBER     RADIUS    INT. MIDPOINT    AREA'
     &      ,8X,'VOLUME    FISSION DENS'/(I6,I9,4X,1P5E13.5))
   20 FORMAT(I6,2(13X,1PE13.5))
   30 FORMAT(45H0         ACTIVITY     MATERIAL     POSITION /(2X,3I13))
   40 FORMAT(58H0 ACTIVITIES BY ZONE INCLUDING SUM OVER ALL ZONES IN LIN
     1E ,I2)
C  50 FORMAT(24H1 ACTIVITIES BY INTERVAL)
   50 FORMAT(24H0 ACTIVITIES BY INTERVAL)
   60 FORMAT(12H0 TOTAL FLUX)
   70 FORMAT(20H0 DISTRIBUTED SOURCE)
   80 FORMAT(27H0 SHELL SOURCE IN INTERVAL ,I3)
   90 FORMAT(14H0 SHELL SOURCE)
  140 FORMAT(32H0 TOTAL FLUX - G=GROUP NO.    N=,I3)
C 160 FORMAT(12A4,8X/1X,2H3*,69X,4HFLUX,3X,1H0)
  160 FORMAT(1H0,10X,'.. TOTAL FLUX WRITEN ON FILE (FT33)')
  170 FORMAT(2H1 ,18A4)
  180 FORMAT(40H0 DISTRIBUTED SOURCE - G=GROUP NO.    N=,I3)
  200 FORMAT(24H0 SHELL SOURCE IN GROUP ,I3)
  210 FORMAT(27H0 SHELL SOURCE IN INTERVAL ,I3,19H - G=GROUP NO.   N=,
     &       I3)
C
      END

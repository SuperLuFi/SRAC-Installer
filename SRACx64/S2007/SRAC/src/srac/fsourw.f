      SUBROUTINE FSOURW(NR,NG,NMP,MATD,MATNM,MMR)
C
C     SUBPROGRAM TO PRODUCE DISTRIBUTED SOURCE BY FISSION TO THE
C     TRANSPORT CODE  INTO  F32
C
CMOD  PARAMETER  ( MAXMAT =  30)
CMOD  PARAMETER  ( MXMESH = 200)
C
      INCLUDE  'MATDTINC'
      INCLUDE  'PIJPMINC'
C
      COMMON /MAINC/ IOPT(36),JNMACR(2),FNMACR(2),DUM(8),JNFLUX(2)
     &  ,FNFLUX(2),DUM1(4),NERF,NERT,NMAT,DUM2(4),NOUT1,NOUT2,DUM3(6)
     &  ,NEF3,I73,NSOUC,NFIN,NFOUT,ITYPE,I78(23),CASENM(2),
     &   DUM5(398)
C
      COMMON /PDSPDS/BUF(540),IFLSW,FILENM(3),ECODE,TEMPRY
      COMMON /WORK/ AA(30000),IA(5000),XI(74,MAXMAT),AAA(125),S(MXMESH)
      COMMON /TW1C/ KKKK(500)
C
      EQUIVALENCE (KKKK(210),IZMESH),(KKKK(166),IFIXSR),
     &            (KKKK(164),ITFLUX)
C
      DIMENSION  MATNM(2,1),MMR(1),IRZ(1),MATD(1)
      DIMENSION II(1),NODE(2),WG(74),WGT(45)
C
      EQUIVALENCE (AA(1),II(1)),(NODE(1),AAA(1)),(I78(22),ICF),
     &            (WG(1),AAA(4)),(WGT(1),AAA(79))
C
      CHARACTER*4 LETF,LETT,NUMB2,KZERO,ICF
C
      DATA LETF/'   F'/,LETT/'   T'/,NUMB2/'   2'/,KZERO/'0000'/
C
C === NR   NO OF REGIONS (MESH)
C === NMAT NO OF MATERIALS
C === MATNM NODE NAME (A8) OF MATERIAL
C === MMR M-REGION BY R-REGION
C === MATD  MATERIAL NO. BY M-REGION
C === IA   (ZONE NO BY MESH )  = IRR R-REGION BY T-REGION
C === NG   NO OF ENERGY GROUP
C === ASSUMPTION ON FLUX.... SPATIALLY FLAT,WEIGHTING SPECTRUM
C         WG,WGT CONTINEOUSLY CONNECTED
C     SUM= SUM OF NU*FISSION*FLUX IN FAST RANGES
C     SUMT=SUM OF NU*FISSION*FLUX IN THERMAL RANGE
C
      READ(IZMESH) (IA(I),I=1,NR)
C
      REWIND IZMESH
      REWIND IFIXSR
      REWIND ITFLUX
      WRITE(NOUT2,6010) IZMESH
      WRITE(6,6010) IZMESH
 6010 FORMAT(' ZONE ID BY MESH WAS READ FROM FILE',I3)
      IFLSW=1
CCCCC FILENM(1)='MACR'
      CALL BSHIFT(FILENM(1),'MACR',0)
CCCCC FILENM(2)='O   '
      CALL BSHIFT(FILENM(2),'O   ',0)
CCCCC IF(ICF.NE.KZERO) FILENM(2)='OWRK'
      IF(ICF.NE.KZERO) CALL BSHIFT(FILENM(2),'OWRK',0)
CCCCC FILENM(3)='    '
      CALL BSHIFT(FILENM(3),'    ',0)
CCCCC NODE(1)='CONT'
      CALL BSHIFT(NODE(1),'CONT',0)
CCCCC NODE(2)='F002'
      CALL BSHIFT(NODE(2),'F002',0)
C === TEST NR,NMAT
      IF(NMAT.GT.MAXMAT) GO TO 610
CJ    READ(JNMACR.FNMACR.'FAST') NGR,(WG(N),N=1,NGR)
      CALL READ(NODE,NGR,1)
      CALL READ(NODE,AAA(3),NGR+1)
      IF (IOPT(4).EQ.0) GOTO 10
CJ    READ(JNMACR.FNMACR.'THERMAL') NGR,(WGT(N),N=1,NGR)
      CALL PACK(NODE(2),1,LETT)
      CALL READ(NODE,NGR,1)
      CALL READ(NODE,AAA(78),NGR+1)
   10 CONTINUE
C     STORE FISSION YIELD'TO XI BY MATERIAL
      DO 100 NM=1,NMP
      MATNO=IABS(MATD(NM))
      NODE(1)=MATNM(1,MATNO)
      NODE(2)=MATNM(2,MATNO)
C === P0 TERM ONLY PROCESSED
CJ    READ(JNMACR.FNMACR.NODE.'FAST'.#0)    LTH,(AA(I),I=1,LTH)
      CALL PACK(NODE(2),1,LETF)
      CALL PACK(NODE(2),4,NUMB2)
      CALL GETLEN(NODE,LTH)
      CALL READ(NODE,AA,LTH)
      K=0
   40 SUM=0.
      DO 50 N=1,NG
      XI(N,NM)=AA(K+7)
   45 SUM=SUM+AA(K+5)*WG(N)
      K=K+10+II(K+2)
   50 CONTINUE
      SUMT=0.
      IF(IOPT(4).EQ.0) GO TO 85
CJ    READ(JNMACR.FNMACR.NODE.'THERMAL'.#0) LTH,(AA(I),I=1,LTH
CJ   *)
      CALL PACK(NODE(2),1,LETT)
      CALL GETLEN(NODE,LTH)
      CALL READ(NODE,AA,LTH)
C     READ MACRO NU*FISS IN THE THERMAL RANGE
      K=0
      DO 80 N=1,NGR
      SUMT=SUMT+AA(K+5)*WGT(N)
      K=K+10+II(K+2)
   80 CONTINUE
   85 DO 90 N=1,NG
      XI(N,NM)=XI(N,NM)*(SUM+SUMT)
   90 CONTINUE
  100 CONTINUE
C     STORE SOURCE TO S(I,N)
C1020 FORMAT(10X,'FSOURC CHECK MAR=',6I5)
C     WRITE(6,6000) (IA(I),I=1,NR)
C     WRITE(6,6010) (MAR(I),I=1,3)
C6000 FORMAT(10X,'IA=',10I3)
C6010 FORMAT(10X,'MAR=',10I3)
      DO 500 N=1,NG
      DO 400 I=1,NR
      J=IA(I)
      M=MMR(J)
      S(I)=XI(N,M)
  400 CONTINUE
      WRITE(IFIXSR) (S(I),I=1,NR)
  500 CONTINUE
      REWIND IFIXSR
C
CKH   WRITE(NSOUC) ((S(I,N),I=1,NR),N=1,NG)
C     WRITE(99,605) ((S(I,N),I=1,NR),N=1,NG)
C 605 FORMAT(1H0,10X,'FSOURC E.G',/(15X1P6E14.5))
CKH      IF(ITYPE.EQ.0) GO TO 650
CKH   DO 620 I=1,NR
CKH   DO 620 N=1,NG
CKH   S(I,N)=WG(N)
CK620 CONTINUE
CKH   WRITE(NFIN) ((S(I,N),I=1,NR),N=1,NG)
CK650 CONTINUE
      DO 625 N=1,NG
      DO 620 I=1,NR
  620 S(I)=WG(N)
      WRITE(ITFLUX) (S(I),I=1,NR)
  625 CONTINUE
      REWIND ITFLUX
      RETURN
C  610 PRINT 611,NMAT
C 610 PRINT 611,NMAT
  610 WRITE(6,611) NMAT
      WRITE(NOUT2,611) NMAT
  611 FORMAT(' *** NUMBER OF MATERIALS EXCEEDS THE LIMIT IN FSOURC '
     & ,I6)
  700 STOP
      END

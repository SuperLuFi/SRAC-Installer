      SUBROUTINE MATINV(A,N,B,M,DETERM,NN)
C
C     MATRIX INVERSION
C     SUBROUITNE MATINV.
C
C          PROGRAMMED BY BURTON S. GARBOW, ARGONNE NATIONAL LABORATORY,
C     AND REPORTED IN IBM 704-709 SHARE LIBRARY AS AN F402.
C          THIS SUBROUITNE COMPUTES THE INVERSE AND DETERMINANT OF
C     MATRIX A, OF ORDER N, BY THE GAUSS-JORDAN METHOD. A-INVERSE
C     REPLACES A, AND THE DETERMINANT OF A IS PLACED IN DETERM. IF
C     M = 1 THE VECTOR B CONTAINS THE CONSTANT VECTOR WHEN MATINV IS
C     CALLED, AND THIS IS REPLACED WITH THE SOLUTION VECTOR.  IF M = 0,
C     NO SIMULTANEOUS EQUATION SOLUTIONS ARE CALLED FOR, AND B IS NOT
C     PERTINENT, N IS NOT TO EXCEED NN.
C        THIS PROGRAM IS CHANGED INTO VARIABLE DIMENSION FORM
C                                                BY TSUCHIHASHI JEARI
C     A, N, B, M, AND DETERM IN THE ARGUMENT LIST ARE DUMMY VARIABLES.
C
CMOD  PARAMETER  ( MXMESH = 200)
      INCLUDE  'PIJPMINC'
C
CM    DIMENSION IPIVOT(99),A(NN,NN),B(NN),INDEX(99,2),PIVOT(99)
C
      DIMENSION A(NN,NN),B(NN)
      DIMENSION IPIVOT(MXMESH),INDEX(MXMESH,2),PIVOT(MXMESH)
C
      REAL*4        WORK(MXMESH),WORKB(MXMESH)
      INTEGER*4     LENG(MXMESH),IPASS(MXMESH)
      INTEGER*4     IWORK(MXMESH),JWORK(MXMESH)
C
      EQUIVALENCE(IROW,JROW),(ICOLUM,JCOLUM),(AMAX,T,SWAP)
C
C     INITIALIZATION
C
      IF(N.GT.MXMESH) THEN
                      WRITE(6,11) N,MXMESH
                      STOP 999
                      ENDIF
C
   11 FORMAT(1H0,'  SIZE OF WORK DIMENSION IS OVER AT SUB(MATINV) ]]] ',
     @  /1H ,'  REQUESTED SIZE IS ',I3,' BUT PRESENT SIZE IS ',I3,' . ',
     @  /1H ,'  SO EXECUTION IS STOPPED. FATAL PROGRAMING ERROR ]]]'/)
C
      DETERM   = 1.0
      DO 20  J = 1,N
   20 IPIVOT(J)= 0
C
C
C
      DO 555 I = 1,N
C     SEARCH FOR PIVOT ELEMENT
      AMAX     = 0.0
      DO 105 J = 1,N
      IF(IPIVOT(J).EQ.1)            GO TO 105
      DO 100 K = 1,N
      IF(IPIVOT(K)-1)80,100,740
   80 IF(ABS(AMAX).GE.ABS(A(J,K)))  GO TO 100
      IROW     = J
      ICOLUM   = K
      AMAX     = A(J,K)
  100 CONTINUE
  105 CONTINUE
      IPIVOT(ICOLUM) = IPIVOT(ICOLUM) + 1
C     INTERCHANGE ROWS TO PUT PIVOT ELEMENT ON DIAGONAL
      IF(IROW.EQ.ICOLUM)  GO TO 260
      DETERM      = -DETERM
      DO 200    L = 1,N
      SWAP        = A(IROW,L)
      A(IROW,L)   = A(ICOLUM,L)
  200 A(ICOLUM,L) = SWAP
      IF(M.EQ.0)GO TO 260
C
      SWAP      = B(IROW)
      B(IROW)   = B(ICOLUM)
      B(ICOLUM) = SWAP
C
  260 INDEX(I,1)= IROW
      INDEX(I,2)= ICOLUM
      PIVOT(I)  = A(ICOLUM,ICOLUM)
      DETERM    = DETERM*PIVOT(I)
C     DIVIDE PIVOT ROW BY PIVOT ELEMENT
      A(ICOLUM,ICOLUM) = 1.0
      DO 350     L = 1,N
  350 A(ICOLUM,L)  = A(ICOLUM,L)/PIVOT(I)
      IF(M.EQ.0)     GO TO 380
      B(ICOLUM)    = B(ICOLUM)/PIVOT(I)
C     REDUCE NON-PIVOT ROWS
  380 CONTINUE
CM    DO 550 L1 = 1,N
CM    IF(L1.EQ.ICOLUM) GO TO 550
CM    T            = A(L1,ICOLUM)
CM    A(L1,ICOLUM) = 0.0
CM    DO 450  L = 1,N
CM450 A(L1,L)   = A(L1,L) - A(ICOLUM,L)*T
CM    IF(M.EQ.0)       GO TO 550
CM    B(L1)     = B(L1)   - B(ICOLUM)*T
CM550 CONTINUE
      DO 450 L1 = 1,N
      WORK (L1) = 0.0
      WORKB(L1) = 0.0
      IF(L1.NE.ICOLUM) THEN
                WORK(L1)     = A(L1,ICOLUM)
                IF(M.NE.0) WORKB(L1) = WORK(L1)
                A(L1,ICOLUM) = 0.0
                ENDIF
  450 CONTINUE
C
*VOCL LOOP,NOVREC
      DO 550 L1 = 1,N
      B(L1)     = B(L1)   - B(ICOLUM)  *WORKB(L1)
      DO 540  L = 1,N
  540 A(L1,L)   = A(L1,L) - A(ICOLUM,L)*WORK(L1)
  550 CONTINUE
C
  555 CONTINUE
C     INTERCHANGE COLUMNS
CM    DO 710 I = 1,N
CM    L        = N + 1 - I
CM    IF(INDEX(L,1).EQ.INDEX(L,2)) GO TO 710
CM    JROW     = INDEX(L,1)
CM    JCOLUM   = INDEX(L,2)
CM    DO 700    K = 1,N
CM    SWAP        = A(K,JROW)
CM    A(K,JROW)   = A(K,JCOLUM)
CM700 A(K,JCOLUM) = SWAP
CM710 CONTINUE
      DO 700 I = 1,N
      ISAVE    = N + 1 - I
      LENG (I) = ISAVE
      IWORK(I) = INDEX(ISAVE,1)
      JWORK(I) = INDEX(ISAVE,2)
      IPASS(I) = IWORK(I)  - JWORK(I)
  700 CONTINUE
      DO 720 I = 1,N
      IF(IPASS(I).NE.0) THEN
                        DO 710    K = 1,LENG(I)
                        SWAP        = A(K,IWORK(I))
                        A(K,JROW)   = A(K,JWORK(I))
                        A(K,JCOLUM) = SWAP
  710                   CONTINUE
                        ENDIF
  720 CONTINUE
C
  740 RETURN
      END

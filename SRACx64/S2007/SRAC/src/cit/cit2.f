C     THIS ROUTINE IS USED ONLY IN SRAC-CITATION AND NOT USED IN COREBN
C
CINPT --002 ***CITATION*** INPUT ACCESSING ROUTINE
C
      SUBROUTINE CIT2(A,MEMORY,ISTEP)
C
CDEL  INTEGER RGX , MSX , ZNEX , ZDX , WZX
CDEL  PARAMETER ( RGX=100, MSX=211, ZDX=200, ZNEX=1000, WZX=100 )
      INCLUDE  'CITPMINC'
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     & LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     & IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     &  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     & IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     & XSRH1(6), XTR1(WZX),XTR2(WZX),NXTR1(WZX),NXTR2(WZX),SPARE(200),
     & IXPUT(200),XPUT(200)
      COMMON/AMESH/BMESH(30),NREGI,NREGJ,NREGKB,XSHI(RGX),XSHJ(RGX),
     & XSHKB(RGX), MSHI(RGX),MSHJ(RGX),MSHKB(RGX),Y(MSX),YY(MSX), X(MSX)
     &  ,XX(MSX),Z(MSX),ZZ(MSX), ZONVOL(ZNEX),AVZPD(ZNEX),PDI(MSX),
     & PDJ(MSX) , PDK(MSX)
      COMMON/AFLUX/BFLUX(30),KXMN8,NIT,NIIT,NIIIT,JXP1,KSCT1,KSCT2,
     & ISTART,IEP, VRGP1,VRGP2,VRGP3,VRG1,VRG2,VRGK1,VRGK2,XABS,PROD,
     & XLEK,RMX,RMN,XKEF1,XKEF2,XKEF3,EXFC1,EXFC2,EXFC3, NI3,IEXTR,
     & IRECV,VRGABS,LO3,LO4,XLAMDA,EPI1,EPI2, BETTA,SUMXI,IX25,IX28,I,J,
     &  KB,K,ITMAX,ITIME, BET(MSX),DEL(MSX)
      COMMON/ABURN/BBURN(30),NSIG1(50),NSIG2(50),NSIG3(50),N1N2R(2,ZDX),
     &  NSIG4(50),NSIG5(50),NSIG6(50),NJM(50),NJMM(50),NJNQ(50),NCH(50),
     &  NZON(ZDX),NXSET(ZDX),NXODR(ZDX),IDXSET(ZDX),NCLASS(ZDX),NDP(ZDX)
     &  , XNAME(3,ZDX)
      COMMON/AVDLM/IVDLM(1),IVX,JVX,KBVX,KVX,LVX,MVX,NVX,IVXP1,JVXP1,
     & KBVXP1,NSETVX,NVO,IVO,IVZ,KVZ,NCRP,NSPA,N3DDIM,NBLOCK, JIVX,
     & JIP1VX,JP1IXZ,IOVX,IOVZ
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     & K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     & K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     &  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     & K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     & K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     & K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     & KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
      COMMON/ASRCH/ BSRCH(30),XK1,XK2,XK3,XN1,XN2,XN3, DELK1,DELK2,
     & DELK3,BATTY,DRV,TBF,GWC,EK2,RCCM,DNDK(5), NSC(5),NSCN,NXZ,NXN,
     & NXM,NXS,INIL,INIU,INID
C
      DIMENSION A(MEMORY)
C
      REAL*8 DATE
CADD
      CHARACTER*4 BLANK, TITL1,TITL2,TITL
C
      COMMON/CMARY/MEMARY,IMN,MNI,IJLMN,NMLJI,IY(50),AX(50),TITL(36)
      COMMON/COOPD/FLOTR(200),INTGR(100)
      REAL*8 FLOTR
      CHARACTER*8 FLATR
CM    DIMENSION CMARYD(1),IFLOT(1)
      DIMENSION CMARYD(1)
CM    EQUIVALENCE (CMARYD(1),MEMARY),(IFLOT(1),FLOTR(1))
      EQUIVALENCE (CMARYD(1),MEMARY)
      DIMENSION FLATR(8)
CITJ.ADD.START
      REAL*8 AHO,DFLATR(8)
      EQUIVALENCE (DFLATR(1),FLATR(1))
CITJ.ADD.END
      DATA BLANK/'    '/
      DATA FLATR(1)/'MANGDATA'/, FLATR(2)/'SCRATCH1'/, FLATR(3)/
     & 'HISTDATA'/, FLATR(4)/'CYCLHIST'/, FLATR(5)/'MASSDATA'/, FLATR(6)
     &  /'SBZNDENS'/, FLATR(7)/'ZONEDENS'/, FLATR(8)/'SCRATCH2'/
      IF(ISTEP.EQ.1) GO TO 50
CI86/01/21 FOR REACTION RATE CAL
CADD. 18.JAN.1991
      IBLSB = 1341 + 4*WZX
      IBMES = 33   + 6*RGX + 9*MSX + 2*ZNEX
      IBFLX = 76   + 2*MSX
      IBBUR = 530  + 11*ZDX
CADD. END
      REWIND 92
CHANGE 18.JAN.1991
C     READ(92)(BLSUB   (I),I=1,1741)
C    &      ,(BMESH   (I),I=1,2932)
C    &      ,(BFLUX   (I),I=1, 498)
C    &      ,(BBURN   (I),I=1,2730)
      READ(92)(BLSUB   (I),I=1,IBLSB)
     &      ,(BMESH   (I),I=1,IBMES)
     &      ,(BFLUX   (I),I=1,IBFLX)
     &      ,(BBURN   (I),I=1,IBBUR)
C----- CHANGE END
     &      ,(IVDLM   (I),I=1,  26)
     &      ,(KAY     (I),I=1, 109)
     &      ,(BSRCH   (I),I=1,  63)
     &      ,(CMARYD  (I),I=1, 141)
     &      ,(FLOTR   (I),I=1, 200)
     &      ,(INTGR   (I),I=1, 100)
CM   &      ,(IFLOT   (I),I=1, 500)
      REWIND 92
   50 DO 100 N = 1,200
      FLOTR(N) = 0.0
  100 CONTINUE
      DO 101 N = 1,8
CM    FLOTR(N) = FLATR(N)
      FLOTR(N) = AHO(FLATR(N))
  101 CONTINUE
      DO 102 N = 1,100
      INTGR(N) = 0
  102 CONTINUE
      INTGR(1) = 8
  103 MEMVRY = MEMORY
      CALL SETV
      REWIND IOIN
      NSPA = 0
      IX(1) = 1
      N7591 = 0
C
C
COMMENT***OUTSIDE USERS-REMOVE THE NEXT 2 STATMENTS. THEY ARE USED
COMMENT***LOCALLY TO ADJUST THE BUILT IN TIME LIMITS DEPENDING UPON
COMMENT***WHETHER THE MACHINE IS THE 360/75, OR 360/91. SEE ALSO
COMMENT***FORMAT NUMBER 1000 AND THE WRITE STATEMENT BELOW.
C     N7591 = MODEL(25)
C     N7591=75
      IF (N7591.EQ.91) IX(1) = 5
C
C
      IO13 = IX(80)
      I1H1 = 1
      NDATA = 0
      INUCZ = 200
      NTYP = 0
      INNO(18) = 0
      LVX = 0
  104 ICPU1 = ICLOCK(0)
      IREAL1 = ITTIME(0)
      IX(69) = NGC(19)
      NTITE = 0
      IMEM = 0
      ILAST = NTYP
      CALL IDAY(DATE)
      WRITE(IOUT,1001)DATE
      READ(IOIN,1002)(TITL1(I),I=1,18)
      DO 105 I = 1,18
      IF (TITL1(I).NE.BLANK) GO TO 106
  105 CONTINUE
      WRITE(IOUT,1000)
      RETURN
  106 CONTINUE
      IF (IX(27).EQ.0) GO TO 107
      REWIND IO2
      NLIM = KNRGN+IVX*JVX*KBVX-1
      WRITE(IO2)(A(N),N=KNRGN,NLIM)
      END FILE IO2
      REWIND IO2
      IRV = 1
      CALL BNSB(A(K50),A(K51),KVX,IRV)
C*******************************(BBND,BND,KVX,IRV)
  107 CONTINUE
      MM1VX = MMAX
      KM1VX = KMAX
      NM1VX = NMAX
      NSM1VX = NSETVX
      MM1AC5 = NUAC(5)
      READ(IOIN,1002)(TITL2(I),I=1,18)
      IF (I1H1) 109,109,108
  108 I1H1 = 0
      WRITE(IOUT,1004)(TITL1(I),I=1,18)
      GO TO 110
  109 WRITE(IOUT,1003)(TITL1(I),I=1,18)
  110 WRITE(IOUT,1004)(TITL2(I),I=1,18)
      DO 111 I = 1,18
      TITL(I) = TITL1(I)
  111 CONTINUE
      DO 112 I = 1,18
      II = I+18
      TITL(II) = TITL2(I)
  112 CONTINUE
C
      CALL IPTM(A,ISTEP,MEMORY,NTITE,IMEM,NM1VX,NSM1VX,MM1AC5)
      IF (IX(167).EQ.0) GO TO 113
      IX(167) = 0
      GO TO 104
  113 CONTINUE
      IF(ISTEP .EQ. 1) RETURN
C
      JIVX = JVX*IVX
      JIP1VX = JVX*IVXP1
      JP1IXZ = JVXP1*IVZ
      MVZ = MAX0(MVX,NSETVX+2)
C
COMENT*****IX3738 IS DIMENSION OF I/O VARIABLE AIO*****
      IX3738 = IX(38)-IX(37)+1
COMENT*****THE NEXT STATMENT FORCES FLAT FLUX IF NOT RESTART*****
      IF (NGC(2).EQ.0) IX(39) = 1
      ISIZ = K41-K24+1
      CALL CALR(A,A(K19),NTITE,NVX,MVX,IX3738,MVZ,A(K24),ISIZ)
C
C
CM    CALL CTFLUX(A(K24),A(KRVOL),A(KPVOL),A(KNRGN),IVX,JVX,
CM   &            LVX,JIVX,KVX,A(K40))
CKSK 
      IF(NGC(12).EQ.0) THEN
      CALL CTFLUX(A(K24),A(KRVOL),A(KPVOL),A(KNRGN),IVX,JVX,
     &            LVX,JIVX,KVX,A(K40),
     &            A(K24),A(KNRGN),KBVX,NUAC(5))
      ELSE
        WRITE(6,*) ' CAUTION(CIT2):SKIP WRITING CITATION-FLUX IN PDS',
     &             ' WHEN ADJOINT CAL. WAS DONE'
      ENDIF
CKSK
C
      IF (NGC(3).EQ.0) GO TO 114
      END FILE IO13
      REWIND IO13
  114 CONTINUE
      IF ((NGC(3).EQ.0).AND.(NGC(2).NE.0)) REWIND IO13
      IX(3) = 0
      ICPU2 = ICLOCK(0)
      IREAL2 = ITTIME(0)
      TOTCPU = (FLOAT(ICPU2)-FLOAT(ICPU1))/6000.0
      TOTREL = (FLOAT(IREAL2)-FLOAT(IREAL1))/6000.0
      WRITE(IOUT,1005)TOTCPU,TOTREL
      WRITE(IOUT,1006)
      WRITE(IOUT,1006)
      IX(4) = 0
      IX(6) = 0
      IX(7) = 0
      IX(27) = 1
      GO TO 104
 1000 FORMAT('0JOB ENDED NORMALLY')
 1001 FORMAT(1H0,30X,'*********THIS JOB WAS RUN ON  ',A8,
     & '********************************',/////)
 1002 FORMAT(18A4)
 1003 FORMAT(1H1,18A4)
 1004 FORMAT(1H ,18A4)
 1005 FORMAT(1H0,'END OF CASE - TOTAL CPU TIME WAS',F7.2,
     &  ' MINUTES   TOTAL CLOCK TIME WAS',F7.2,1H ,'MINUTES')
 1006 FORMAT(1H ,'**************************************************',
     &'*************************************************************')
      END

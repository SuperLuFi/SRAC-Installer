CFXSO --040 ***CITATION*** READS INPUT SECTION 026         /CF - IPTM
C
      SUBROUTINE FXSO(SPAR,BIEMS,PVOL,NRGNE,NCOMP,JVX,IVX,KBVX,KVX,LVX)
C
CDEL  INTEGER RGX , MSX , ZNEX , ZDX , WZX
CDEL  PARAMETER ( RGX=100, MSX=211, ZDX=200, ZNEX=1000, WZX=100 )
      INCLUDE  'CITPMINC'
C
      REAL*8 SAM
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     & LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     & IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     &  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     & IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     & XSRH1(6), XTR1(WZX),XTR2(WZX),NXTR1(WZX),NXTR2(WZX),SPARE(200),
     & IXPUT(200),XPUT(200)
C
      DIMENSION SPAR(JVX,IVX,KBVX),BIEMS(KVX),PVOL(LVX), NRGNE(JVX,IVX,
     & KBVX),NCOMP(LVX)
C
      WRITE(IOUT,1000)
      READ(IOIN,1001) NFX1,NFX2
      IX(132) = NFX1
      N5 = NUAC(5)
      DO 102 KB=1,KBMAX
      DO 101 I=1,IMAX
      DO 100 J=1,JMAX
      SPAR(J,I,KB) = 0.0
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
      IF (NFX1.GT.0) GO TO 141
C     INPUT DISTRIBUTION FUNCTION
      READ(IOIN,1002) (BIEMS(K),K=1,KMAX)
      IF (NFX1.LT.0) GO TO 122
C     INPUT SOURCE BY MESH POINT
  103 READ(IOIN,1003) JL,JR,IT,IB,KBF,KBB,X
      IF (JL.LE.0) GO TO 130
C     CHECK MESH SPECIFICATIONS
      IF (JL.GE.1.AND.JL.LE.JMAX) GO TO 104
      GO TO 140
  104 IF (JR.GE.1.AND.JR.LE.JMAX) GO TO 105
      GO TO 140
  105 IF (JL.LE.JR) GO TO 106
      GO TO 140
  106 IF (N5.LE.5) GO TO 112
      IF (IT.GE.1.AND.IT.LE.IMAX) GO TO 107
      GO TO 140
  107 IF (IB.GE.1.AND.IB.LE.IMAX) GO TO 108
      GO TO 140
  108 IF (IT.LE.IB) GO TO 109
      GO TO 140
  109 IF (N5.LE.10) GO TO 113
      IF (KBF.GE.1.AND.KBF.LE.KBMAX) GO TO 110
      GO TO 140
  110 IF (KBB.GE.1.AND.KBB.LE.KBMAX) GO TO 111
      GO TO 140
  111 IF (KBF.LE.KBB) GO TO 114
      GO TO 140
  112 IT = 1
      IB = 1
  113 KBF = 1
      KBB = 1
  114 CONTINUE
      IF (X.NE.0.0) GO TO 117
      DO 116 KB=KBF,KBB
      DO 115 I=IT,IB
      READ(IOIN,1002) (SPAR(J,I,KB),J=JL,JR)
  115 CONTINUE
  116 CONTINUE
      GO TO 121
  117 CONTINUE
      DO 120 KB=KBF,KBB
      DO 119 I=IT,IB
      DO 118 J=JL,JR
      SPAR(J,I,KB) = X
  118 CONTINUE
  119 CONTINUE
  120 CONTINUE
  121 CONTINUE
      GO TO 103
  122 CONTINUE
C     INPUT SOURCE BY ZONE
      IT = 0
      I2 = 0
  123 I1 = I2 + 1
      I2 = I1 + 5
      READ(IOIN,1004) (NXTR1(N),XTR1(N),N=I1,I2)
      DO 124 N=I1,I2
      IF (NXTR1(N).EQ.0) GO TO 125
      IT = IT + 1
  124 CONTINUE
      GO TO 123
  125 CONTINUE
      WRITE(IOUT,1005)
      WRITE(IOUT,1006) (NXTR1(N),XTR1(N),N=1,IT)
      DO 129 N=1,IT
      M = NXTR1(N)
      X = XTR1(N)
      DO 128 KB=1,KBMAX
      DO 127 I=1,IMAX
      DO 126 J=1,JMAX
      L = NRGNE(J,I,KB)
      MM = NCOMP(L)
      IF (M.NE.MM) GO TO 126
      SPAR(J,I,KB) = X
  126 CONTINUE
  127 CONTINUE
  128 CONTINUE
  129 CONTINUE
  130 CONTINUE
      DO 133 KB=1,KBMAX
      DO 132 I=1,IMAX
      DO 131 J=1,JMAX
      L = NRGNE(J,I,KB)
      SPAR(J,I,KB) = SPAR(J,I,KB)*PVOL(L)
  131 CONTINUE
  132 CONTINUE
  133 CONTINUE
      SAM = 0.0D+0
      DO 136 KB=1,KBMAX
      DO 135 I=1,IMAX
      DO 134 J=1,JMAX
      SAM = SAM + SPAR(J,I,KB)
  134 CONTINUE
  135 CONTINUE
  136 CONTINUE
      SPARE(88) = SAM
      SAM = 0.0D+0
      DO 137 K=1,KMAX
      SAM = SAM + BIEMS(K)
  137 CONTINUE
      DO 138 K=1,KMAX
      BIEMS(K) = BIEMS(K)/SAM
  138 CONTINUE
C     EDIT FIXED SOURCE
      WRITE(IOUT,1007) (BIEMS(K),K=1,KMAX),SAM
      IF (NFX2.EQ.0) GO TO 139
      WRITE(IOUT,1008)
      CALL BEER(SPAR,JVX,IVX,KBVX)
  139 CONTINUE
      WRITE(IOUT,1009) SPARE(88)
      GO TO 146
  140 CONTINUE
      WRITE(IOUT,1010) JL,JR,IT,IB,KBF,KBB
      STOP 69
  141 CONTINUE
C     INPUT SOURCE FROM EXTERNAL DEVICE
      SAM = 0.0D+0
      IOFS = IX(84)
C     IOFS IS LOGICAL 17
      REWIND IOFS
      DO 145 K=1,KMAX
      READ(IOFS) SPAR
      DO 144 KB=1,KBMAX
      DO 143 I=1,IMAX
      DO 142 J=1,JMAX
      SAM = SAM + SPAR(J,I,KB)
  142 CONTINUE
  143 CONTINUE
  144 CONTINUE
      BIEMS(K) = 1.0
      IF (NFX2.EQ.0) GO TO 145
      WRITE(IOUT,1011) K
      CALL BEER(SPAR,JVX,IVX,KBVX)
  145 CONTINUE
      SPARE(88) = SAM
      WRITE(IOUT,1009) SPARE(88)
      REWIND IOFS
  146 CONTINUE
      IF (SPARE(88).NE.0.0) GO TO 147
      WRITE(IOUT,1012)
      NER(51) = 51
  147 CONTINUE
      RETURN
 1000 FORMAT(1H0/1H0,'FIXED SOURCE INPUT SECTION 026')
 1001 FORMAT(24I3)
 1002 FORMAT(6E12.0)
 1003 FORMAT(6I4,E12.0)
 1004 FORMAT(6(I3,E9.0))
 1005 FORMAT(1H0,'ZONE-SOURCE(N/CC-SEC)')
 1006 FORMAT(1X,I6,1PE13.5,I6,E13.5,I6,E13.5,I6,E13.5,I6,E13.5,I6,E13.5)
 1007 FORMAT(1H0,'SOURCE DISTRIBUTION AND SUM'/(1H ,1P10E12.4))
 1008 FORMAT(1H0,'POINT NEUTRON SOURCE- N/SEC')
 1009 FORMAT(1H0,'TOTAL FIXED SOURCE',1PE15.6,' N/SEC')
 1010 FORMAT(1H1,'**** SOMETHING IS WRONG WITH THE FIXED SOURCE INPUT',
     & 6I5,' NOW STOP ****')
 1011 FORMAT(1H0,'POINT NEUTRON SOURCE(N/SEC) FOR GROUP',I5)
 1012 FORMAT(1H0,'***WARNING- THE TOTAL FIXED SOURCE IS ZERO ***')
      END

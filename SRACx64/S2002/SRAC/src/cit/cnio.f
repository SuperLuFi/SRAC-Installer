CCNIO --054 ***CITATION*** CALCULATES A(K64-K67)/ CF-IPTM
C
      SUBROUTINE CNIO(ISTEP,IVX,JVX,KBVX,KVX,IVXP1,JVXP1,KBVXP1,IVZ,KVZ,
     & N3DDIM,LVX,NBLOCK,IOVX,IOVZ)
C
CDEL  INTEGER RGX , MSX , ZNEX , ZDX , WZX
CDEL  PARAMETER ( RGX=100, MSX=211, ZDX=200, ZNEX=1000, WZX=100 )
      INCLUDE  'CITPMINC'
C
      COMMON/ALSUB/BLSUB(30),TITL1(18),TITL2(18),IMAX,JMAX,KBMAX,KMAX,
     & LMAX,MMAX, NMAX,IMXP1,JMXP1,KBMXP1,NSETMX,NTO,MM1VX,KM1VX,IOIN,
     & IOUT,IOSIG,IOFLX,IO1,IO2,IO3,IO4,IO7,NER(100), IX(200),INNO(100),
     &  NGC(24),IEDG(24),ITMX(24),TIMX(6), GLIM(6),NDPL(24),IEDP1(24),
     & IEDP2(24),IEDP3(24), DPLH(6),NUAC(24),EPI(6),XMIS(6),NSRH(24),
     & XSRH1(6), XTR1(WZX),XTR2(WZX),NXTR1(WZX),NXTR2(WZX),SPARE(200),
     & IXPUT(200),XPUT(200)
      COMMON/AKADD/KAY(1),K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11, K12,K13,
     & K131,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23,K24, K25,K26,K27,
     & K28,K29,K30,K31,K32,K33,K34,K35,K36,K37, K38,K39,K40,K41,K42,K43,
     &  K44,K45,K46,K47,K48,K49, K50,K51,K52,K53,K54,K55,K56,K57,K58,
     & K59, K60,K61,K62, K63,K64,K65,K66,K67,K68,K69,K70,K71,K72,K73,
     & K74,K75, K76,K77,K78,K79,K80,K81,K82,K83,K84,K85,K86,K87, K88,
     & K89,K90, K91,K92,K93,K94,K95,K96,K97,K98, K99,K100,NDATA,KNRGN,
     & KNCOMP, KPVOL,KRVOL,MEMVRY, MEMX
C
      COMMON /CRBNC/ ICONV,ICRBN,NCBSTP,AVZAB(ZNEX)
C     ICRBN IS SET IN CIT1 IF SRAC, OR CRBN IF COREBN
C     ICRBN =0 : SRAC-CITATION, ICRBN=1 : COREBN
C
      COMMON /PERTCM/ P(1),MEMPET,IPERT,ICASE,LSAMPL,LIOPT,LIDOPT,LBKLE,
     &                LXYZ,LBKLGP,LAST,LTERM,LSIG2,LSCAC2,LXI2,LBUF,NBUF
C
  100 NHEX = 1
      MVX=MMAX
      LKX=LVX*KVX
      MKX=MVX*KVX
      MKXD = MKX
C    THE STEP ON THE NEXT CARD IS FOR DOUBLE PRECISION, IBM/360
      MKXD = 2*MKX
      IF (IVX.LT.IVZ) NHEX = 2
      N1 = JVX*IVX*KBVX
      N2 = JVXP1*IVZ*KBVX*NHEX
      N3 = JVX*IVXP1*KBVX
      N4 = JVX*IVX*KBVXP1
      IF (KBVX.EQ.1) N4 = 1
      M1 = N1*KVX
      M2 = N2*KVX
      M3 = N3*KVX
      M4 = N4*KVX
      IF (KBVX.EQ.1) M4 = 1
      MT = M2+M3+M4
      NDQ = MAX0(1+LKX+2*MKX+MKXD+N1,8*MKX,NBLOCK)
      NDR = MAX0(1+LKX+2*MKX+MKXD+M1,8*MKX,NBLOCK)
      NT=MT -N2-N3-N4-NDQ+NDR
      IF (NGC(23).GT.0) GO TO 101
      NSPACE=MEMVRY-K64-3*LVX-N1-NDR
      IF (NSPACE.GE.MT) GO TO 102
  101 CONTINUE
      IOVX = 1
      IOVZ = 2
      N3DDIM = N4
      K65 = K64+N2
      K66 = K65+N3
      K63=K66+N4
      K21=K63+N1
C    THE STEP ON THE NEXT CARD IS FOR DOUBLE PRECISION
      K21 = 2*(K21/2)+1
      IX(37) = K64
      IX(38) = K21-1
      GO TO 103
  102 IOVX = KVX
      IOVZ = KVZ
      K65 = K64+M2
      K66 = K65+M3
      K63=K66+M4
      K21=K63+M1
C    THE STEP ON THE NEXT CARD IS FOR DOUBLE PRECISION
      K21=2*(K21/2)+1
      NDQ=NDR
      IX(37) = 0
      IX(38) = 0
      N3DDIM = M4
  103 CONTINUE
      K29 = K21+MKXD
      K36=K29+LKX
      K37=K36+MKX
      K40=K63
      K67=K63
      K68=K63+NDQ
      IF(ICRBN.EQ.0) THEN
        IF(ISTEP.NE.1) WRITE(IOUT,1000)NT
      ELSE
        WRITE(IOUT,1000)NT
      ENDIF
      IX(169) = K64
      IX(170) = K21 - 1
      IF (IPERT.EQ.0) RETURN
      LTERM  = K63
      LSIG2  = LTERM + 10*KVX*2
      LSCAC2 = LSIG2 + KVX*12
      LXI2   = LSCAC2 + KVX*KVX
      NLAST  = LXI2 + KVX
      K68    = MAX0(K68,NLAST)
      RETURN
 1000 FORMAT('0CORE STORAGE DIFFERENCE (WORDS) EQUATION CONSTANTS I/O',
     &'INSTEAD OF STORED',I8)
      END

C             S833                LEVEL=16       DATE=87.01.14
      SUBROUTINE S833(XN,XNN,ST,SR,CS,MA,J5,AA,SAT,SA,CH,XNA,XNR,PNC,DSN
     1 ,W,XNI, NO,B,DA,DB,DC,DS,V,XNE,PA,WD,CT,SG,XND,I1,   M1,I2,IM1,MR
     1,ART,ALFT)
C   *** S833  *IMPOSSIBLE TO *TRANSLATE, *EXPLAIN OR *REMEMBER
C        360 VERSION OF SUBROUTINE S833 REVISED 10-28-68
      DIMENSION XN(I1,1),XNN(1),ST(1),SR(1),CS(1),MA(1),J5(1),AA(1),
     1  SAT(I1,1),SA(I1,1),CH(I1,1),XNA(I1,1),XNR(1),PNC(M1,1),DSN(1),
     2 W(1),XNI(1), NO(1),B(M1,1),DA(I2,1),DB(I2,1),DC(I2,1),DS(I2,1),
     3 V(1),XNE(1),PA(M1,IM1,1),WD(1),CT(1),SG(1),XND(I2,1),MR(1)
     4 ,ART(1),ALFT(1)
      COMMON /SN1C/
     &              D(1),LIM1,LR,LW,LDSN,LMA,LMZ,LMB,LMC,LXMD,LFIX,LFLT,
     1       LJ5,LRM,LDF,LJ3,LJ4,LIGT,LART,LALFT,
     2LFGP,LFGG,LEND,LV,LAA,LWD,LMR,LPNC,
     BID,ITH,ISCT,ISN,IGE,IBL,IBR,IZM,IM,IEVT,IGM,IHT,IHS,IHM,MS,MCR,MTP
     C,MT,IDFM,IPVT,IQM,IPM,IPP,IIM,ID1,ID2,ID3,ID4,ICM,IDAT1,IDAT2,IFG,
     DIFLU,IFN,IPRT,IXTR,
     EEV,EVM,EPS,BF,DY,DZ,DFM1,XNF,PV,RYF,XLAL,XLAH,EQL,XNPM,
     FT(12),NIN,NOU,NT1,NT2,NT3,NT4,NT5,NT6,NT7
      COMMON /WORK/ Z(1),LIM2,LXKI,LFD,LXN,LVE,LMTT,LCRX,LQ,LPA,
     2       LXJ,LCH,LCA,LCF,LCT,LCS,LTAB,
     3LXND,LSA,LSAT,LRAV,LRA,LXNN,LXNE,LXNR,LXNA,LSR,LST,LQG,LFG,LSG,
     4LXKE,LXNI,LXNO,LT3,LT5,LDA,LDB,LDC,LDS,LB,IGMP,IGMM,IIGG,NERR,IMJT
     5,IHG,IMP,MP,NDS,NUS,SDG,SCG,AG,XNLGG,XNLG,SNG,ALA,ASR,EAM,EPG,EQ,
     6E1,E2,E3,E4,E5,E6,E7,E8,E9,E10,E11,E12,E13,E14,E15,E16,E17,E18,E19
     7,E20,ESC,ESM,EVP,EVPP,FTP,IC,ICVT,IGP,IG,IHP,IIC,IIG,IP,IZP,I01,
     8I02,I03,I04,I05,I06,I07,I08,I09,I00,JT,LC,MG,MI,ML,MM,NFN,XITR,
     9XLAP,XLAPP,XLAR,XLA,XNIO,XNII,ZZ1,ZZ2,ZZ3,XNB,XKEP,XKIP,IH,I,K,L,
     AM,J,N,NN,ISV
      IIMM=0
      MMIM=MM*IM
      DO 61 I=1,MMIM
   61 NO(I)=0
      IF(IC.GT.1  .OR.  IC.EQ.1 .AND.IFN.GE.1) GO TO 832
C   *** FIRST GENERATION BOUNDARY FLUXES
      DO 55 M=1,MM
      IF(DSN(M))53,53,54
   53 B(M,IGMP)=XNN(1)
      GO TO 55
   54 B(M,IGMP)=XNN(IM)
   55 CONTINUE
  832 DO 1 I=1,IM
      XN(I,IGMP)=XNN(I)
C   *** ADD IN-GROUP SOURCE COMPONENT (P0)
       ST(I)=SR(I)+ CS(I)*XNN(I)
      XNN(I)=0.0
      IF(ISCT.EQ.0)GO TO 1
      NLO=1
      J=MA(I)
      J=J5(J)
      IF(J.EQ.0)GO TO 1
      DO 2 N=1,J
      NHI=NLO + (1-IABS(IGE-2))*(2*N+1)/4
      DO 3 NN=NLO,NHI
C   *** ADD IN-GROUP P-L SOURCE
      SAT(I,NN)=SA(I,NN) + CH(I,N)*XNA(I,NN)
      XNA(I,NN)=0.0
    3 CONTINUE
      NLO=NHI + 1
    2 CONTINUE
    1 CONTINUE
      IIMM=IIMM +1
      IMM=0
      LC=LC+1
      K=MM+1
      IF(IBL.NE.3 .AND. IBR.NE.3)GO TO 842
C   *** COMPUTE WHITE BOUNDARY FLUX
      XNII=0.0
      XNIO=0.0
      DO 45 M=1,MM
      IF(DSN(M))46,46,47
   46 XNII=XNII + B(M,IGMP)*ABS(WD(M))
      GO TO 45
   47 XNIO=XNIO + B(M,IGMP)*WD(M)
   45 CONTINUE
      IF(IBL.EQ.3)XNII=XNII*ALFT(IIG)/ZZ3
      IF(IBR.EQ.3)XNIO=XNIO*ART(IIG)/ZZ3
C   *** BEGIN ANGLE LOOP FOR FLUX CALCULATION
CM842 DO 5 M=1,MM
  842 RSAVE = 0.00000
      IF(DFM1.NE.0.0)  RSAVE = 1.000000 / DFM1
      DO 5 M=1,MM
C   *** COMBINE P0 AND PL SOURCE TERMS
      DO 6 I= 1, IM
    6 XNR(I) = ST(I)
      IF(ISCT.EQ.0)GO TO 9
      DO 8 N=1,JT
      DO 8 I=1,IM
    8 XNR(I)=XNR(I) + PNC(M,N)*SAT(I,N)
C   *** COMPUTE TRANSVERSE VOID STREAMING CORRECTION
    9 E8=0.0
      IF(DFM1.EQ.0.0)GO TO 10
CMOD  IF(IGE.EQ.1)E8=SQRT(1.0 - DSN(M)*DSN(M))/(0.5*DFM1)
      IF(IGE.EQ.1)E8=SQRT(1.0 - DSN(M)*DSN(M))*2.000*RSAVE
      IF(IGE.NE.2)GO TO 10
      IF(W(M).NE.0.0)GO TO 11
      K=K-1
CMO11 E8=DSN(K)/(0.5*DFM1)
   11 E8=DSN(K)*2.00000*RSAVE
C   *** SET UP BOUNDARY CONDITIONS
   10 IF(DSN(M).GE.0.0)GO TO 12
      IT=IP
      I00=IP + 1
      I01=IBR
      E1=XNIO
      GO TO 19
   12 IT=0
      I00=0
      I01=IBL
      E1=XNII
   19 IF(I01-1)13,14,15
   13 XNM=0.0
      GO TO 17
   14 L=MR(M)
      XNM=B(L,IGMP)
      GO TO 17
   15 XNM=E1
      IF(I01.EQ.2)XNM=B(M,IGMP)
   17 IF(W(M).NE.0.0)GO TO 24
      DO 18 I=1,IM
   18 XNE(I)=0.0
   24 E6=XNM
C   *** BEGIN INTERVAL LOOP FOR FLUX CALCULATION
      DO 25 J=1,IM
  844 L =IABS(I00-J)
  843 I =IABS(IT-J)
      IMM=IMM + 1
      IF(DSN(M).GT.0.0)GO TO 26
C   *** ADD SHELL SOURCE TO FLUX WHEN MU.LT.0
      IF(IPM-1)26,27,28
   28 XNM=XNM + PA(M,I,IIGG)
      GO TO 26
   27 IF(IPP.EQ.I)XNM=XNM + PA(M,1,IIGG)
C   *** SAVE ANGULAR FLUX
C  26 XND(L,M)=E6
C    MODIFY ANGULAR FLUX TO INCLUDE SHELL SOURCE
   26 XND(L,M)=XNM
   56 E1=CT(I) + DB(I,M)
      IF(CT(I).EQ.0.0)E1=E1 + E8*V(I)
      IF(NO(IMM).EQ.1 .OR. IFLU.EQ.2)GO TO 44
C   *** LINEAR MODEL USED WHEN SIGMA-TOTAL .GE.0
C   ********** LINEAR MODEL **********
C   *
      E3=(XNM*DA(I,M) + XNE(I)*DC(I,M) + XNR(I))/E1
      E5=E3+E3-XNE(I)
      IF(W(M).EQ.0.0)E5=E3
      E6=E3+E3-XNM
C   *
C   ********** LINEAR MODEL **********
      XNC=1.66667*E3
      IF(XNC.GT.XNM .AND. (XNC.GT.XNE(I) .OR. IGE.EQ.1))GO TO 29
      IF(IFLU.EQ.1)GO TO 29
C   *** STEP MODEL USED WHEN LINEAR EXTRAPOLATION GIVES N.LT.0
C   ********** STEP   MODEL **********
C   *
   44 E2=E1 - 0.5*DB(I,M)
      E7=0.5*DB(I,M) - DS(L,M)
      IF(W(M).EQ.0.0)E2=E2 - E7
      E3=(DS(L,M)*XNM + E7*XNE(I) + XNR(I))/E2
      E5=E3
      E6=E3
      IF(IIMM.GE.20)NO(IMM)=1
C   *
C   ********** STEP   MODEL **********
C   *** E3=N   E5=N(M-1/2)   E6=N(I) OR N(I+1)   (MU.LT.0 OR MU.GT.0)
   29 E3=E3*W(M)
      XNE(I)=E5
      XNM=E6
C   *** COMPUTE TOTAL FLUX (SCALER)
      XNN(I)=XNN(I) + E3
      IF(ISCT.EQ.0)GO TO 33
C   *** COMPUTE P-L CURRENTS
      DO 32 N=1,JT
   32 XNA(I,N)=XNA(I,N) + PNC(M,N)*E3
   33 IF(DSN(M).LT.0.0)GO TO 25
C   *** ADD SHELL SOURCE TO FLUX WHEN MU.GT.0
      IF(IPM-1)25,34,35
   35 XNM=XNM + PA(M,I,IIGG)
      GO TO 25
   34 IF(IPP.EQ.I)XNM=XNM + PA(M,1,IIGG)
   25 CONTINUE
C   *** SAVE BOUNDARY FLUX
      B(M,IGMP)=E6
      L=IABS(I00-IM-1)
C   *** SAVE LAST ANGULAR FLUX
C     XND(L,M)=E6
C    MODIFY ANGULAR FLUX TO INCLUDE SHELL SOURCE
      XND(L,M)=XNM
    5 CONTINUE
  845 E1=0.0
      E2=0.0
      DO 37 M=1,MM
      IF(IBL.NE.1)E1=E1 + WD(M)*XND(1,M)
   37 E2=E2 + WD(M)*XND(IP,M)
C   *** COMPUTE LEAKAGE
      RL=E2*AA(IP)
      XLL=E1*AA(1)
      XNLGG=RL - XLL
  833 IIC=IIC+1
      E1=0.0
      ESC=0.0
      ESM=0.0
      EAM=0.0
C   *** COMPUTE CONVERGENCE NUMBERS
      DO 38 I=1,IM
      E4=XNN(I)-XN(I,IGMP)
      E2=CS(I)*E4
      E1=E1+E2
      ESM=ESM + ABS(E2)
      EAM=EAM + ABS(E4)*(CT(I)-CS(I))
      IF(XNN(I).EQ.0.0) GO TO 701
      E4=ABS(E4)/XNN(I)
      GO TO 702
  701 E4=0.0
  702 CONTINUE
      IF(E4.LT.ESC)GO TO 38
      IFDMX=I
      ESC=E4
   38 CONTINUE
      ESM=AMAX1(ESM,EAM)
C   *** COMPUTE INNER ITERATION SCALE FACTOR
      IF(ZZ1-E1.EQ.0.0) GO TO 703
      E1=ZZ1/(ZZ1-E1)
      GO TO 704
  703 E1=0.0
  704 CONTINUE
      IF(E1.LE.0.0 .OR. E1.GT.10.0)E1=10.0
      DO 123 I=1,IM
  123 XNE(I)=E1
C   *** USE STANDARD SCALING FOR FIRST INNER OR FOR 1 INT. PROB.
      IF((IIC/3)*3.NE.IIC .OR. IM.EQ.1)GO TO 124
C     IF(IM.GE.1)GO TO 124      YAMANE
C   *** COMPUTE SPACE DEPENDENT SCALE FACTORS
      SP=0.0
C   *** COMPUTE LEAKAGE TERMS AND SHELL SOURCE CONTRIBUTION TO Q
      DO 100 I=1,IM
      XNE(I)=SR(I) + SP
      SP=0.0
      SM=0.0
      XLM=0.0
      XLP=0.0
      DO 101 M=1,MM
      IF(DSN(M).LT.0.0)GO TO 106
      XLM=XLM + XND(I,M)*WD(M)
      GO TO 107
  106 XLP=XLP + XND(I+1,M)*ABS(WD(M))
  107 IF(IPM-1)101,102,103
  102 IF(IPP.NE.I)GO TO 101
      J=1
      GO TO 104
  103 J=I
  104 E3=PA(M,J,IIGG)*ABS(WD(M))
      IF(DSN(M).LT.0.0)GO TO 105
      SP=SP + E3
      GO TO 101
  105 SM=SM + E3
  101 CONTINUE
      SP=SP*AA(I+1)
      XNE(I)=XNE(I) + SM*AA(I+1)
  108 ST(I)=-XLP*AA(I+1)
      SAT(I,1)=-XLM*AA(I)
      XNR(I)=XNE(I) - ST(I) - SAT(I,1) + CS(I)*(XN(I,IGMP)-XNN(I))
  100 CONTINUE
C   ***
C   *** SOLVE TRI-DIAGONAL MATRIX
C   ***
C   *** COMPUTE A(1) AND A(IM)
      XNR(1)=XNR(1) + SAT(1,1)
      XNR(IM)=XNR(IM) + ST(IM)
C   *** REMOVE B TERMS FROM MATRIX
      DO 111 I=2,IM
      COEF=SAT(I,1)/XNR(I-1)
      XNR(I)=XNR(I) - COEF*ST(I-1)
  111 XNE(I)=XNE(I) - COEF*XNE(I-1)
C   *** SOLVE FOR F(I)
      I=IM
      DO 112 J=2,IM
      XNE(I)=XNE(I)/XNR(I)
      I=I-1
  112 XNE(I)=XNE(I) - XNE(I+1)*ST(I)
      XNE(1)=XNE(1)/XNR(1)
C   ***
C   *** MATRIX SOLVED
C   ***
      DO 114 I=1,IM
C     XNE(I)=AMAX1(AMIN1(XNE(I),10.0),0.2)
  114 SAT(I,1)=0.0
C   *** APPLY SPACE DEPENDENT SCALE FACTORS
  124 DO 39 I=1,IM
      XNN(I)=XNN(I)*XNE(I)
  122 IF(ISCT.EQ.0)GO TO 39
      DO 40 N=1,JT
   40 XNA(I,N)=XNA(I,N)*XNE(I)
   39 CONTINUE
      DO 41 M=1,MM
      K=1
      IF(DSN(M).GT.0.0)K=IM
   41 B(M,IGMP)=B(M,IGMP)*XNE(K)
      IF(XITR.EQ.0.0.OR.IIC.GE.IIM)GO TO 42
      IF(ESM.GT.EPG .AND. ESC.GT.EPS  .OR.  XLAL.GT.0.0 .AND.
     1 ESC.GT.XLAL)GO TO 832
   42 DO 43 M=1,MM
      DO 43 I=1,IM
      IF(DSN(M).LT.0.0 .OR. I.EQ.1)XND(I,M)=XND(I,M)*XNE(I)
      IF(DSN(M).GT.0.0 .OR. I.EQ.IM)XND(I+1,M)=XND(I+1,M)*XNE(I)
   43 CONTINUE
      XNLGG=RL*XNE(IM) - XLL*XNE(1)
C   *** TEST CONVERGENCE
C 999 IF(ICVT.EQ.1)WRITE (NOU,60) IIG,IIC,ESC,IFDMX
C  60 FORMAT('  GRP.'I4,' REQUIRED'I4,' ITERATIONS. MFD OF'1PE13.5,
C    1 ' OCCURRED IN INT.'I5)
  999 RETURN
      END

      SUBROUTINE INPUT1(ICODE)
C
C***********************************************************************
C                            INPUT1 JULY 21 1988
C***********************************************************************
C     SUBPROGRAM TO READ AND CHECK THE OPTIONS ,THE ENERGY GROUP
C                          STRUCTURE
C
      CHARACTER*4   CASEID
C
      COMMON /MAINC/  IOPT(20),DSNAME(8)
     1    ,IUPSCT   ,IBSPCT   ,ISCT     ,IFIXS    ,ICTOT    ,ICOND
     2    ,IP1C     ,IFF1     ,LCXIWT   ,IBKSCH   ,MXINP2   ,IDUM45(5)
     3    ,NEFL     ,NETL     ,NEF      ,NET      ,NERF     ,NERT
     4    ,NMAT     ,NEFF     ,BSQ      ,NIN1     ,NIN2     ,NOUT1
     5    ,NOUT2    ,IT0      ,NEFL1    ,NEFL2    ,NEFL3    ,NEF1
     5    ,NEF2     ,NEF3     ,ISTEP    ,NSOUC    ,NFIN     ,NFOUT
     5    ,ITYPE    ,IMCEF    ,IBNSTP   ,MEMFST
     5    ,LCNEGF   ,LCNEGT   ,LCNECF   ,LCNECT   ,LCMTNM   ,LCNISO
     6    ,LCTEMP   ,LCXL     ,LCXCDC   ,LCLISO   ,LCIDNT   ,LCDN
     7    ,LCIRES   ,LCIXMC   ,DUMMY2(5),INITL
     8    ,CASEID(2),TITLE(18)
     9    ,AA(380)
C
CDEL  PARAMETER   ( MAXMEM = 20000  , MXWORK =  3000000  )
      INCLUDE  'READPINC'
C
      CHARACTER*8     CZMEMB,SCMEMB,FLMODE,DATAKP
      CHARACTER*12    DDNAME,FILENM
      CHARACTER*68    PATHNM
C
      COMMON /PDSPDS/ DDNAME(125),IST(15),IRW(15),IOS(35),NC(5,20),
     &                IFLSW,FILENM,ECODE,TEMP
C
      COMMON /PDSWK3/ PATHNM(15),FLMODE(15),DATAKP(15),CZMEMB(MAXMEM),
     1                SCMEMB(MAXMEM)
      COMMON /PDSWK2/ IZWRIT,IZMXDT,IZWCNT,IZDWTL,ICNTMX,
     1                LENPAT(15),INCORE(15),ICNTSC,
     2                IZDTLN(MAXMEM),IZDTTL(MAXMEM),IDUMZ,
     3                IPOSDD(MAXMEM),IPOSSC(MAXMEM),
     4                RZDATA(MXWORK)
C
      COMMON /PCOWK5/ IBURN,KEEPIJ,IPCNT,NXRB
C
C     IRW          READ, WRITE   R/W  1, 2 ,3
C     IOS  OPEN ST   NOT OPENED , OPENED/  0, 1
C
      CHARACTER*8    DSNAME
      CHARACTER*72   LINE
      DIMENSION      IDUMMY(2)
C
      DIMENSION      II(380),AB(500)
C
      EQUIVALENCE    (  AB(121) , II(1) )
      EQUIVALENCE    (  IOPT(1) , AB(1) )
C
      CHARACTER*8   NAMEP
      CHARACTER*4   NMCODE(2,5)
C
      CHARACTER*4   FILELB(6,10)
C
      DATA FILELB/'PUBL','IC F','AST ','LIBR','ARY ','    ',
     1            'PUBL','IC T','HERM','AL  ','LIBR','ARY ',
     2            'PUBL','IC M','CROS','S LI','BRAR','Y   ',
     3            'USER','S  F','AST ','LIBR','ARY ','    ',
     4            'USER','S  T','HERM','AL  ','LIBR','ARY ',
     5            'USER','S  M','CROS','S LI','BRAR','Y   ',
     6            'USER','S  M','ACRO','SCOP','IC F','INE ',
     7            'USER','S  M','ACRO','SCOP','IC B','ROAD',
     8            'USER','S  F','LUX ','    ','    ','    ',
     9            'USER','S  M','ICRO','SCOP','IC  ','    '/
C
      DATA NMCODE/'PIJ ','    ','1DIM',' SN ','2DIM',' SN ','1D D',
     *            'IFSN','2D D','IFSN'/
C
C   *** START OF PROCESS
C
      IFLSW = 1
      ICODE = 0
C
C  80 FORMAT(' ENTER  CASE I.D. AND TITLE IN FORMAT(A8/18A4)')
C     WRITE(NOUT1,80)
C
      READ(NIN1,50,END=452) (AB(  I),I=101,102)
      READ(NIN1,50,END=452) (AB(  I),I=103,120)
C
      WRITE(NOUT1,78) (AB(I),I=101,120)
CMOD  WRITE(NOUT2,81) (AB(I),I=101,120)
      IF(INITL.EQ.0)  THEN
                      WRITE(NOUT2,78) (AB(I),I=101,120)
                      ELSE
                      WRITE(NOUT2,81) (AB(I),I=101,120)
                      ENDIF
C
C     ==== END OF EXECUTION =====
C
      IF(CASEID(1).EQ.'    ') THEN
                              ICODE  = 1
                              RETURN
                              ENDIF
C
   50 FORMAT(18A4)
   78 FORMAT(1H0,5X,'**** CASE ID === ',2A4,' *** TITLE === ',18A4,
     *             ' ***'//)
   81 FORMAT(1H1,5X,'**** CASE ID === ',2A4,' *** TITLE === ',18A4,
     *             ' ***'//)
C
C     WRITE(NOUT1,10)
C
CMOD  CALL ICLEA(IOPT(37),16,0)
      CALL ICLEA(IUPSCT  ,10,0)
      CALL ICLEA(IDUM45  , 5,0)
C
C *** ZERO CLEAR COMMON /PCOWK5/ IBURN,KEEPIJ,IPCNT,NXRB
C
      IBURN    = 0
      KEEPIJ   = 0
      IPCNT    = 0
      NXRB     = 0
C
      CALL REAM ( AB ,IOPT , AB , 0 , 20 , 0 )
      WRITE(NOUT2,82) (IOPT(I),I= 1,16)
      WRITE(NOUT2,79) (IOPT(I),I=17,20)
C
   82 FORMAT(5X,
     1 55HUSE OF COLLISION PROB. ROUTINE (NO,CALL:0,1)           ,I3/5X,
     2 55HSELECT OF ROUTINE FOR FIX S CALC(NO,PIJ,1D SN ,2D SN ,    /5X,
     2 55H 1D DIFF,2D DIFF:0,1,2,3,4,5)                          ,I3/5X,
     3 55HDANCOFF FACTOR BY(INPUT,PIJ,TONE:0,1,2)                ,I3/5X,
     4 55HCALC OF THERMAL RANGE (EXCLUDED,INCLUDED:0,1)          ,I3/5X,
     5 55HPROCESS OF RESONANCE 2 RANGE(TABLELOOK,IR,PEACO:0,1,2) ,I3/5X,
     6 55HFLUX CALCULATION BY RANGES(SKIP,CALC:0,1)              ,I3/5X,
     7 55HFAST RANGES FOR TRANSPORT CALC(0,1,2,3,4)              ,I3/5X,
     8 55HINDICATOR FOR ENRGY STRUCTURE OF UMCROSS (0,1,2,3)     ,I3/5X,
     9 55HCALC OF BARE REACTOR SPECTRUM(SKIP,P1,B1:0,1,2)        ,I3/5X,
     A 55HCOLLAPSE MACRO X-SECTION BY RANGE(SKIP,CALL:0,1)       ,I3/5X,
     B 55HINPUT OF GEOMETRY (NEW,SAME AS PREVIOUS CASE:0,1)      ,I3/5X,
     C 55HSELECT ROUTINE FOR EIGENVALUE CALC(NO,PIJ,1D SN,2D SN,    /5X,
     D 55H 1D DIFF,2D DIFF:0,1,2,3,4,5)                          ,I3/5X,
     E 55HCOLLAPSE MACRO AFTER EIGENVALUE CALC(SKIP,CALL:0,1)    ,I3/5X,
     F 55HPREPARE MACRO FOR CITATION (SKIP,CALL:0,1)             ,I3/5X,
     G 55HTOTAL MICRO X-SECTION BY (HARMONIC,ARITHMETIC AV:1,2)  ,I3/5X,
     H 55HTRANSPORT MACRO X-SECTION BY (P0,P1,B1,SN:0,1,2,3)     ,I3)
   79 FORMAT(5X,
     I 55HDIFF COEF (INVERSE TR,BENOIST ISO,BENOIST ANISO:1,2,3) ,I3/5X,
     J 55HREACTION RATE CALCULATION (0,1)                        ,I3/5X,
     K 55HPRINT OF MACRO-X (0,1,2)                               ,I3/5X,
     L 55HBURN-UP CALCULATION (0,1:SKIP,EXECUTE)                 ,I3)
C
      IUPSCT = 0
      IBSPCT = 0
      ICTOT  = 0
      ISCT   = 0
      ICOND  = 0
CCCC  ISCT : ORDER OF SCATTERING DEFINED IN THE INPUT OF SN ROUTINES
C
CCCC  IFF1 : INDICATOR FOR WEIGHT OF P1 COMPONENT  MIX AND CONDENSE
      IFF1 = 0
C
CDELK MIX BY FLUX      CONDENSE BY  FLUX
CDELK IF(IOPT(10).GT.1 .OR. IOPT(13).GT.1 )THEN
CDELK IF(IOPT(10).EQ.2 .OR. IOPT(13).EQ.2 )      IFF1=1
CDELK MIX BY CURRENT   CONDENSE BY CURRENT FROM ANISN
CDELK IF(IOPT(10).EQ.3 .OR. IOPT(13).EQ.3 )      IFF1=2
CDELK MIX BY FLUX      CONDENSE BY FLUX / SIG TRANSPORT
CDELK IF(IOPT(10).EQ.4 .OR. IOPT(13).EQ.4 )      IFF1=3
CDELK MIX BY FLUX      CONDENSE BY  CURRENT FROM ANISN
CDELK IF(IOPT(10).GT.1 ) IOPT(10)=1
CDELK IF(IOPT(13).GT.1 ) IOPT(13)=1
CDELK                                      ENDIF
C
CCCC  IP1C : INDICATOR COLLAPSE FROM P0, P1 INTO P0, P1 MATRICES MIXX1
      IP1C=0
      IF(IOPT(2).EQ.-2 .OR. IOPT(12).EQ.-2 )THEN
                        IP1C=1
                        IOPT( 2)=IABS(IOPT( 2))
                        IOPT(12)=IABS(IOPT(12))
                        ENDIF
CCCC  IFIXS: INDICATOR FOR FIXED SOURCE   =1 READ DISTRIBUTED
CCCC                                      =2 READ SURFACE SOURCE
      IFIXS=0
      IF(IOPT( 2).EQ.-1) THEN
                        IFIXS=1
                        IOPT( 2)=1
                        ENDIF
      IF(IOPT(12).EQ.-1) THEN
                        IFIXS=2
                        IOPT(12)=1
                        ENDIF
CCCC  IUPSCT : NEGLECT OF UPSCATERING IF IUPSCAT =1
C     IOPT(15) INPUT  -1   -2    1    2
C     -----------------------------------
C         IUPSCT       1    1    0    0
C         IOPT(15)     1    2    1    2
C     -----------------------------------
      IF(IOPT(15).LT.0) IUPSCT = 1
      IOPT(15) = IABS(IOPT(15))
CCCC  ICOND : CONDENSE ISOLATED MACROSCOPIC X-SECTIONS BY ITS OWN
CCCC  SPECTRUM CALCULATED IN P1B1 ROUTINE
      IF(IOPT(16).LT.0) ICOND = 1
      IOPT(16) = IABS(IOPT(16))
CCCC  REFLECT ONE-POINT SPECTRUM INTO CODENSED CROSS SECTION
      IF(IOPT(9).LT.0) IBSPCT = 1
      IOPT(9)  = IABS(IOPT(9))
      ISAVE    = IOPT(9)
      IBKSCH   = 0
      IF(ISAVE.GT.10) THEN
                      IBKSCH  = 1
                      IOPT(9) = ISAVE -  10*(ISAVE/10)
                      ENDIF
C
      IF(IOPT(17).EQ.0)  THEN
                         IOPT(17) = 1
                         WRITE(NOUT1,2131)
                         ENDIF
C
      IF(IOPT(17).LT.0) THEN
CCCC  ICTOT : CONDENSE OF TOTAL BY ARITHMETIC AVERAGE IF ITOT=1
                        ICTOT=1
                        IOPT(17)=-IOPT(17)
                        END IF
      IF(IFIXS.EQ.2 .AND. IOPT(17).GT.1) GO TO 1129
C
C     WRITE(NOUT1,75)
C  75 FORMAT(10X,'ENTER A VALUE OF GEOMETRIC BUCKLING')
C
      CALL REAM(AB,AB,BSQ,0,0,1)
C
      IF(BSQ.EQ.0. .AND. (IOPT(9).NE.0 .OR. IOPT(16).NE.0)) GOTO 1126
C
   76 IF (INITL.NE.0) GO TO 100
C ====THE SAME GEOMETRY AS THE PREVIOUS CASE =====
      NEFL = -1
      NETL = -1
      NETG = -1
      NEFL3= -1
C
C     DEFINE R/W AND STATUS AFTER CLOSING
C
      DDNAME( 2) ='FASTP       '
      DDNAME( 3) ='THERMALP    '
      DDNAME( 4) ='MCROSS      '
      DDNAME( 5) ='FASTU       '
      DDNAME( 6) ='THERMALU    '
      DDNAME( 7) ='UMCROSS     '
      DDNAME( 8) ='MACROWRK    '
      DDNAME( 9) ='MACRO       '
      DDNAME(10) ='FLUX        '
      DDNAME(11) ='MICREF      '
C
      IRW( 2)= 1
      IRW( 3)= 1
      IRW( 4)= 1
      IRW( 5)= 3
      IRW( 6)= 3
      IRW( 7)= 3
      IRW( 8)= 3
      IRW( 9)= 3
      IRW(10)= 3
      IRW(11)= 3
C
      DO 110 I=1,8
  110 DSNAME(I)= '        '
C
      DO 120 J=2,11
      READ (NIN1,'(A72)') LINE
      CALL LNPATH(LINE,PATHNM(J),FLMODE(J),DATAKP(J),LENPAT(J))
      JPOS     = 0
      IF(J.EQ. 2) JPOS = 1
      IF(J.EQ. 3) JPOS = 3
      IF(J.EQ. 5) JPOS = 5
      IF(J.EQ. 6) JPOS = 7
      IF(JPOS.GT.0) DSNAME(JPOS) = PATHNM(J)(1:16)
  120 CONTINUE
C
C === READ  NEFL IN FAST PUB FILE ===
C === READ  NEFL  IN FAST PUB FILE === READ ONLY OLD FILE
      IF(PATHNM(2)(1:1).NE.' ') THEN
          FILENM=DDNAME(2)
          CALL OPNPDS(IRW(2))
          NAMEP='FASTLIB '
          CALL  READ(NAMEP,NEFL,1)
          ENDIF
C === READ NETL IN THERMAL PUB FILE ==== READ ONLY OLD FILE
      IF(PATHNM(3)(1:1).NE.' ') THEN
          FILENM=DDNAME(3)
          CALL OPNPDS(IRW(3))
          NAMEP='THERMAL1'
          CALL READ(NAMEP,NETL,1)
          ENDIF
C === READ NEF IN FAST USER FILE ====
          FILENM=DDNAME(5)
          CALL OPNPDS(IRW(5))
          NAMEP='FASTLIB '
          CALL SEARCH(NAMEP,LTH,ISW)
          IF(ISW.EQ.1 .AND. NEFL.EQ.-1) GO TO 1122
          IF(ISW.EQ.1 .AND. NEFL.GT.0)  GO TO  124
          CALL  READ(NAMEP,NEFL3,4)
  124 CONTINUE
C === READ NET IN THERMAL USER FILE ===
      IF(PATHNM(6)(1:1).EQ.' ') GO TO 140
          FILENM=DDNAME(6)
          CALL OPNPDS(IRW(6))
          IF(IOS(3).NE.0)       GO TO 140
C ======== SET NETG FROM THERMAX MEMBER
          NAMEP='THERMALX'
C
          DO 130 N=1,12
          IF(N.LT.10) THEN
                      WRITE(NAMEP(8:8),'(I1)') N
                      ELSE
                      IF(N.EQ.10) NAMEP (8:8) = 'A'
                      IF(N.EQ.11) NAMEP (8:8) = 'B'
                      IF(N.EQ.12) NAMEP (8:8) = 'C'
                      ENDIF
C
          CALL SEARCH(NAMEP,LTH,ISW)
                   IF(ISW.EQ.0) THEN
                                CALL READ(NAMEP,NETG,1)
                                GO TO 140
                                ENDIF
  130     CONTINUE
          GO TO 1123
C
  140 CONTINUE
C
      WRITE(NOUT2,141)
      WRITE(NOUT2,142)
      DO  150 J = 1 , 10
      J1        = J + 1
      WRITE(NOUT2,143) (FILELB(I,J),I=1,6),PATHNM(J1),IRW(J1),
     +                  FLMODE(J1),DATAKP(J1)
  150 CONTINUE
      WRITE(NOUT2,142)
C
  141 FORMAT(1H0,20X,' << INFORMATION OF PDS-FILES >> ' 
     1     //1H ,3X,'  PDS FILE NAME           ',
     2              '  DATA SET NAME           ',
     3          44X,'IWR DISP    I/O METHOD        '   )
  142 FORMAT(1H ,2X,16(8H--------) )
  143 FORMAT(1H ,3X,6A4,2X,A68,2X,I2,2X,A8,2X,A8)
C
C ====THE SECOND AND FOLLOWING CASES NOT NEED ENERGY SPECIFICATION===
C === READ IN ENERGY MESH NUMBER
      IF(NEFL.EQ.-1 .AND.NEFL3.EQ.-1) GO TO 1122
C
C     WRITE(NOUT1,20)
C
      CALL REAM(AB,NEF,AB,0,4,0)
      WRITE(NOUT2,83) NEF,NET,NERF,NERT
      LCNEGF = 1
      LCNEGT = LCNEGF + NEF
      LCNECF = LCNEGT + NET
      LCNECT = LCNECF + NERF
      LCMTNM = LCNECT + NERT
C
   83 FORMAT(5X,
     * 53HNUMBER OF USER'S FAST GROUPS                           ,I3/5X,
     * 53HNUMBER OF USER'S THERMAL GROUPS                        ,I3/5X,
     * 53HNUMBER OF USER'S CONDENSED FAST GROUPS                 ,I3/5X,
     * 53HNUMBER OF USER'S CONDENSED THERMAL GROUPS              ,I3/)
CKSK
*  83 FORMAT(5X,
*    * 54HNUMBER OF USER'S FAST GROUPS                            ,I3/5X
*    * 54HNUMBER OF USER'S THERMAL GROUPS                         ,I3/5X
*    * 54HNUMBER OF USER'S CONDENSED FAST GROUPS                  ,I3/5X
*    * 54HNUMBER OF USER'S CONDENSED THERMAL GROUPS               ,I3/)
CKSK
C
C    TEST OF NO. E-GROUP
C
      IF(NET.NE.0 .AND. NETL.EQ.-1.AND.NETG.EQ.-1) GO TO 1127
      IF(NEFL.EQ.-1.AND.NEFL3.NE.NEF) GO TO 1114
  160 IF(NETL.EQ.-1.AND.NETG .NE.NET) GO TO 1115
C
  170 DO 180 I=1,NEF+NET
      II(I+LCNEGF-1)=1
  180 CONTINUE
      IF(NEFL.EQ.-1) GO TO 91
C
C     WRITE(NOUT1,30) NEF
C
      CALL REAM(AB,II(LCNEGF),AB,0,NEF,0)
      WRITE(NOUT2,84)  (II(I),I=LCNEGF,LCNEGF+NEF-1)
C
   91 IF(NETL.EQ.-1) GO TO 92
      IF(NET .EQ. 0) GO TO 92
C     WRITE(NOUT1,40) NET
      CALL REAM(AB,II(LCNEGT),AB,0,NET,0)
      WRITE(NOUT2,85)  (II(I),I=LCNEGT,LCNEGT+NET-1)
C
   84 FORMAT(5X,'NUMBER OF LIBRARY GROUPS IN THE USER''S FAST GROUP'
     *     /(5X,10I12/))
   85 FORMAT(5X,'NUMBER OF LIBRARY GROUPS IN THE USER''S THERMAL GROUPS'
     *     /(5X,10I12/))
C
C === NO CONDENSE ===
C
   92 IF(IOPT(10).EQ.0 .AND. IOPT(13).EQ.0) GO TO 100
      IF(NERF.EQ.0)    GO TO 1119
C     WRITE(NOUT1,50) NERF
      CALL REAM(AB,II(LCNECF),AB,0,NERF,0)
      WRITE(NOUT2,86)  (II(I),I=LCNECF,LCNECF+NERF-1)
C === IF NO THERMAL ===
      IF(IOPT(4).EQ.0) GO TO  100
      IF(NERT   .EQ.0) GO TO 1120
C     WRITE(NOUT1,60) NERT
      CALL REAM(AB,II(LCNECT),AB,0,NERT,0)
      WRITE(NOUT2,87)  (II(I),I=LCNECT,LCNECT+NERT-1)
C
   86 FORMAT( 5X,'NUMBER OF USER''S GROUPS IN THE CONDENSED FAST GROUP'/
     *      (5X,10I12/))
   87 FORMAT( 5X,'NUMBER OF USER''S GROUPS IN THE CONDENSED THERMAL GROU
     *P'/   (5X,10I12/))
C
C===TEST OF INTEGERS ===
C
C  >>  TEST CALL PIJ
C
  100 CONTINUE
      IF((IOPT(2).EQ.1 .OR. IOPT(3).EQ.1 .OR. IOPT(5).EQ.2 .OR.
     *  IOPT(12).EQ.1 ) .AND. IOPT(1).EQ.0) GO TO 1101
C      ADDED BY JAIS. K.KANEKO 6/8/1989
      IF((IOPT(3).EQ.2 .OR. IOPT(5).EQ.-2 ) .AND. IOPT(1).EQ.0 )
     *                                      GO TO 1101
      IF(IOPT(5).EQ.2  .AND. IOPT(12).EQ.-1) GO TO 1130
C     TEST TONE'S METHOD & IR METHOD
      IF(IOPT(5).EQ.1  .AND. IOPT(3).EQ.2 ) GO TO 1131
C     TEST CALL FLUX CALC ROUTINE
      IF(IOPT(6).EQ.0 .AND. IOPT(7).NE.0) GO TO 1102
C     TEST DIFFUSION COEF BENOIST
      IF(IOPT(17).GE.2 .AND. (IOPT(2).NE.1 .AND. IOPT(12).NE.1))
     *   GO TO 1103
C     TEST COLLAPSE BY RANGE
      IF(IOPT(6).EQ.0 .AND. IOPT(10).EQ.1) GO TO 1104
C      TEST COLLAPSE FAST RANGES
  114 IF(IOPT(10).EQ.0 .AND. IOPT(13).EQ.0 .AND. NERF.NE.0
     *   .AND. INITL.EQ.0 ) GO TO 1105
C     TEST OF GEOMETRIC ROUTINE
      DO 200 I=1,5
      IF(IOPT(2).EQ.I .AND. IOPT(12).EQ.I) GO TO 190
      GO TO 200
  190 WRITE(NOUT1,2116) NMCODE(1,I),NMCODE(2,I)
      STOP
  200 CONTINUE
C
C     TEST COLLAPSE FAST RANGES
      IF((IOPT(10).NE.0 .OR. IOPT(13).NE.0) .AND. NERF.EQ.0)
     *    GO TO 1106
      IF(IOPT(10)*IOPT(13).NE.0) GO TO 1121
C    TEST COLLAPSE THERMAL
      IF(IOPT(10).EQ.0 .AND. IOPT(13).EQ.0 .AND. IOPT(4).NE.0
     * .AND. NERT.NE.0.AND. INITL.EQ.0) GO TO 1107
      IF((IOPT(10).NE.0 .OR. IOPT(13).NE.0) .AND. IOPT(4).NE.0
     * .AND. NERT.EQ.0) GO TO 1108
      IF(INITL.NE.0) GO TO 450
      DO 300 I=1,5
      IF(IOPT(2).EQ.I.AND.IOPT(12).EQ.I) GO TO 1116
  300 CONTINUE
      IF(IOPT(7).GT.4) GO TO 1117
C     IF(IOPT(9).NE.0 .AND. IOPT(2).EQ.0) GO TO 1125
      IF(IOPT(7).NE.0 .AND. IOPT(2).EQ.0 .AND. IOPT(6).EQ.1)
     *               GO TO 1124
      IF(IOPT(11).NE.0.AND.INITL.EQ.0) GO TO 1118
      IF(IOPT(12).EQ.5.AND.IOPT(14).NE.0) GO TO 1128
C === TEST SUM OF NEGF ===
      ISUM=0
      IF(NEFL.EQ.-1) GO TO 355
      DO 310 I=1,NEF
      ISUM=ISUM+II(I+LCNEGF-1)
  310 CONTINUE
      IDIFF=ISUM-NEFL
C     IF(IDIFF*(IDIFF+8)*(IDIFF+4)*(IDIFF+12).NE.0) GO TO 1112
      IF(IOPT(4).EQ.0) GO TO 355
      IF(IOPT(4).NE.1) GO TO 1113
      IF(NETL.EQ.-1) GO TO 355
      DO 320 I=1,NET
      ISUM=ISUM+II(I+LCNEGT-1)
  320 CONTINUE
  350 IF(ISUM .NE. 107) GO TO 1109
  355 IF(NERF.EQ.0) GO TO 400
C     TEST SUM OF NECF
      ISUM=0
      DO 360 I=1,NERF
      ISUM=ISUM+II(I+LCNECF-1)
  360 CONTINUE
      IF(ISUM.NE.NEF) GO TO 1110
C
  400 IF(NERT.EQ.0) GO TO 450
C    TEST   SUM OF NECT
      ISUM     = 0
      DO 410 I =  1 , NERT
      ISUM     = ISUM + II(I+LCNECT-1)
  410 CONTINUE
      IF(ISUM.NE.NET) GO TO 1111
C    TEST OF BURNUP
      IF(IOPT(20).EQ.1) THEN
                IF(IOPT(2).EQ.0.AND.IOPT(12).NE.0) THEN
                       IF(IOPT(10).NE.0) GO TO 1132
                       ENDIF
                       ENDIF
C
  450 CONTINUE
CM    NAMEP  = 8H@START
CKSK  NAMEP  = 8HSTART$
      NAMEP  = 'START$'
      CALL BURNRW( NAMEP  , NUCL  , MXNUC , 1 , 1 , NTNUC , 1 , 1 ,
     @             'RITE' )
C
C *** OPEN PDS-FILES  ( FLUX , MACRO , MACROWRK , MCROSS , UMCROSS )
C
C
C *** OPEN MACROWRK
CKSK      FILENM=12HMACROWRK
          FILENM='MACROWRK    '
          MPSPDS= 0
          CALL FILSRC(MPSPDS,FILENM)
          FILENM=DDNAME(MPSPDS)
          IF(IOS(MPSPDS).EQ.0) CALL OPNPDS(IRW(MPSPDS) )
C         WRITE(6,*) ' FILENM IRW IST ; ',FILENM,IRW(MPSPDS),IST(MPSPDS)
C *** OPEN MACRO
      IF(IOPT(10).NE.0.OR.IOPT(13).NE.0) THEN
CKSK      FILENM=12HMACRO
          FILENM='MACRO       '
          MPSPDS= 0
          CALL FILSRC(MPSPDS,FILENM)
          FILENM=DDNAME(MPSPDS)
          IF(IOS(MPSPDS).EQ.0) CALL OPNPDS(IRW(MPSPDS) )
C         WRITE(6,*) ' FILENM IRW IST ; ',FILENM,IRW(MPSPDS),IST(MPSPDS)
          ENDIF
C *** OPEN FLUX
CKSK      FILENM=12HFLUX
          FILENM='FLUX        '
          MPSPDS= 0
          CALL FILSRC(MPSPDS,FILENM)
          FILENM=DDNAME(MPSPDS)
          IF(IOS(MPSPDS).EQ.0) CALL OPNPDS(IRW(MPSPDS) )
C         WRITE(6,*) ' FILENM IRW IST ; ',FILENM,IRW(MPSPDS),IST(MPSPDS)
C === OPEN MICREF FILE
CKSK      FILENM=12HMICREF
          FILENM='MICREF      '
          MPSPDS= 0
          CALL FILSRC(MPSPDS,FILENM)
          FILENM=DDNAME(MPSPDS)
          IF(IOS(MPSPDS).NE.0) CALL CLSPDS(0)
CMOD      IF(IOS(MPSPDS).EQ.0) CALL OPNPDS(IRW(MPSPDS) )
                               CALL OPNPDS(IRW(MPSPDS) )
C         WRITE(6,*) ' FILENM IRW IST ; ',FILENM,IRW(MPSPDS),IST(MPSPDS)
C *** OPEN PMCROSS
CKSK      FILENM=12HMCROSS
          FILENM='MCROSS      '
          MPSPDS= 0
          CALL FILSRC(MPSPDS,FILENM)
          FILENM=DDNAME(MPSPDS)
      IF(IABS(IOPT(5)).EQ.2) THEN
          IF(IOS(MPSPDS).EQ.0) CALL OPNPDS(IRW(MPSPDS) )
C         WRITE(6,*) ' FILENM IRW IST ; ',FILENM,IRW(MPSPDS),IST(MPSPDS)
          ELSE
          IF(IOS(MPSPDS).NE.0) CALL CLSPDS(0)
          ENDIF
C *** OPEN UMCROSS
      IF(IABS(IOPT(5)).EQ.2) THEN
CKSK      FILENM=12HUMCROSS
          FILENM='UMCROSS     '
          MPSPDS= 0
          CALL FILSRC(MPSPDS,FILENM)
          FILENM=DDNAME(MPSPDS)
          IF(IOS(MPSPDS).EQ.0) CALL OPNPDS(IRW(MPSPDS) )
C         WRITE(6,*) ' FILENM IRW IST ; ',FILENM,IRW(MPSPDS),IST(MPSPDS)
          ENDIF
C
      RETURN
C
  452 ICODE = 1
      RETURN
C
 1101 WRITE(NOUT1,2101)
      STOP
 1102 WRITE(NOUT1,2102)
      STOP
 1103 WRITE(NOUT1,2103)
      STOP
 1104 WRITE(NOUT1,2104)
      GO TO 114
 1105 WRITE(NOUT1,2105)
      STOP
 1106 WRITE(NOUT1,2106)
      STOP
 1107 WRITE(NOUT1,2107)
      STOP
 1108 WRITE(NOUT1,2108)
      STOP
 1109 WRITE(NOUT1,2109)
      STOP
 1110 WRITE(NOUT1,2110)
      STOP
 1111 WRITE(NOUT1,2111)
      STOP
C1112 WRITE(NOUT1,2112)
C     STOP
 1113 WRITE(NOUT1,2113)
      STOP
 1114 WRITE(NOUT1,2114) NEFL3,NEF
      GO TO 160
 1115 WRITE(NOUT1,2115) NETG,NET
      GO TO 170
 1116 WRITE(NOUT1,2116)
      STOP
 1117 WRITE(NOUT1,2117)
      STOP
 1118 WRITE(NOUT1,2118)
      STOP
 1119 WRITE(NOUT1,2119)
      STOP
 1120 WRITE(NOUT1,2120)
      STOP
 1121 WRITE(NOUT1,2121)
      STOP
 1122 WRITE(NOUT1,2122)
      STOP
 1123 WRITE(NOUT1,2123)
      STOP
 1124 WRITE(NOUT1,2124)
      STOP
 1125 WRITE(NOUT1,2125)
      STOP
 1126 WRITE(NOUT1,2126)
      STOP
 1127 WRITE(NOUT1,2127)
      STOP
 1128 WRITE(NOUT1,2128)
      STOP
 1129 WRITE(NOUT1,2129)
      STOP
 1130 WRITE(NOUT1,2130)
      STOP
 1131 WRITE(NOUT1,2132)
      STOP
 1132 WRITE(NOUT1,2133)
      STOP
C
 2101 FORMAT(' *** USE OF PIJ MUST BE SPECIFIED BY IC1 OR ',
     * 'WRONG SPECIFICATION FOR ANY OF IC2,3,5,12')
 2102 FORMAT(' *** IC6 MUST BE 1 OR IC7 MUST BE 0')
 2103 FORMAT(' *** BENOIST TYPE DIFFUSION COEFF BY IC17 REQUIRES',
     * ' MULTI-GROUPE COLLISION PROBABILITIES')
 2104 FORMAT(' *** CONDENSE OF MACRO SPECIFIED BY IC10 REQUIRES ',
     * 'CALCULATION OF FLUXES SKIPPED BY IC6')
 2105 FORMAT(' *** NERF MUST BE ZERO WHEN CONDENSE NOT REQUIRED BY'
     * ,' IC10 EITHER BY IC13')
 2106 FORMAT(' *** NON ZERO NERF MUST BE SPECIFIED WHEN CONDENSE ',
     * 'REQUIRED BY IC10 OR BY IC13')
 2107 FORMAT(' *** NERT MUST BE ZERO WHEN CONDENSE NOT REQUIRED')
 2108 FORMAT(' *** NON ZERO NERT REQUIRED WHEN CONDENSE REQUIRED',
     * ' BY IC10 OR BY IC13')
 2109 FORMAT(' *** UNMATCH OF SUM OF LIBRARY GROUPS,VERIFY NEGF,NEGT')
 2110 FORMAT(' *** UNMATCH BETWEEN SUM OF USER''S FAST GROUP NUMBERS
     *AND NEF')
 2111 FORMAT(' *** UNMATCH BETWEEN SUM OF USER''S THERMAL GROUP NUMBERS
     * AND NET')
 2112 FORMAT(' *** UNMATCH OF THERMAL CUTOFF , CHECK ARRAY NEGF')
 2113 FORMAT(' *** NON ZERO VALUE OF IC4 MUST BE 1')
 2114 FORMAT(' *** UNMATCH OF NO. OF USERS FAST GROUPS, CHECK NEF'
     * ,I3,' IN LIBRARY ',I3,' ENTERED')
 2115 FORMAT(' *** UNMATCH OF NO. OF USERS THERMAL GROUPS, CHECK NET'
     * ,I3,' IN LIBRARY ',I3,' ENTERED')
 2116 FORMAT(' *** DUPLICATE USE OF SAME GEOMETRY ROUTINE *',2A4,
     * ' * NOT ALLOWED IN A CASE')
 2117 FORMAT(' *** IC7 MUST BE LESS THAN 5')
 2118 FORMAT(' *** THE PREVIOUS GEOMETRY NOT EXIST FOR THE INITIAL',
     1       'CASE')
 2119 FORMAT(' *** NON ZERO NERF REQUIRED FOR CONDENSE')
 2120 FORMAT(' *** NON ZERO NERT REQUIRED FOR CONDENSE')
 2121 FORMAT(' *** CONDENSE AFTER BOTH OF FIXED S. CALC. & EIGENV. ',
     * 'CALC NOT ALLOWED')
 2122 FORMAT(' *** INDISPENSABLE FILE FASTU NOT SPECIFIED ')
 2123 FORMAT(' *** INDISPENSABLE FILE THERMALU NOT SPECIFIED')
 2124 FORMAT(' *** IF NO FIXED S PROBLEM SOLVED, IC7 MUST BE 0')
 2125 FORMAT(' *** IF NO FIXED S PROBLEM SOLVED, IC9 MUST BE 0')
 2126 FORMAT(' *** ZERO BUCKLING ENCOUNTERED WHEN P1B1 APPR.REQUIRED BY
     * IC9 OR IC16')
 2127 FORMAT(' *** MISMATCH IN FILE THERMALU')
 2128 FORMAT(' *** DOUBLE USE OF CITATION INPUT **'
     *,'IOPT(12)=5 AND IOPT(14)=1 IS SPECIFIED ',
     * '** SEPARATE JOBS')
 2129 FORMAT(' *** CONFLICT USE OF COLLISION PROBABILITIES '
     *,'IOPT(17)>1 AND IOPT(12)<0 IS SPECIFIED ')
 2130 FORMAT(' *** DOUBLE USE OF COLLISION PROBABILITIES '
     *,'IOPT(5)=2 AND IOPT(12)<0 IS SPECIFIED ')
 2131 FORMAT(' *** ILLEGAL IC17 DETECTED ** ASSUMED  IC17=1')
 2132 FORMAT(' *** IF IC5=1 , IC3 MUST BE 0 OR 1 **')
 2133 FORMAT(' ** IF IC20=1 & IOPT2=0 & IOPT12 >0 , IOPT10 MUST BE 0 *')
      END
